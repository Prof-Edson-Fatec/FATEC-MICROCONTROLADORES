

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 02 17:32:00 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           	psect	idataCOMRAM
    27  000CEE                     __pidataCOMRAM:
    28                           	opt stack 0
    29                           
    30                           ;initializer for EscreveInteiroLCD@F5476
    31  000CEE  30                 	db	48
    32  000CEF  30                 	db	48
    33  000CF0  30                 	db	48
    34  000CF1  30                 	db	48
    35  000CF2  30                 	db	48
    36  000CF3  30                 	db	48
    37  000CF4  00                 	db	0
    38                           
    39                           ;initializer for _tempo
    40  000CF5  01F4               	dw	500
    41                           
    42                           ;initializer for _i
    43  000CF7  01                 	db	1
    44                           
    45                           ;initializer for _vetor_leds
    46  000CF8  01                 	db	1
    47                           
    48                           	psect	smallconst
    49  000800                     __psmallconst:
    50                           	opt stack 0
    51  000800  00                 	db	0
    52  000801                     _dpowers:
    53                           	opt stack 0
    54  000801  0001               	dw	1
    55  000803  0000               	dw	0
    56  000805  000A               	dw	10
    57  000807  0000               	dw	0
    58  000809  0064               	dw	100
    59  00080B  0000               	dw	0
    60  00080D  03E8               	dw	1000
    61  00080F  0000               	dw	0
    62  000811  2710               	dw	10000
    63  000813  0000               	dw	0
    64  000815  86A0               	dw	34464
    65  000817  0001               	dw	1
    66  000819  4240               	dw	16960
    67  00081B  000F               	dw	15
    68  00081D  9680               	dw	38528
    69  00081F  0098               	dw	152
    70  000821  E100               	dw	57600
    71  000823  05F5               	dw	1525
    72  000825  CA00               	dw	51712
    73  000827  3B9A               	dw	15258
    74  000829                     __end_of_dpowers:
    75                           	opt stack 0
    76  000829                     main@F5414:
    77                           	opt stack 0
    78  000829  46                 	db	70
    79  00082A  41                 	db	65
    80  00082B  54                 	db	84
    81  00082C  45                 	db	69
    82  00082D  43                 	db	67
    83  00082E  20                 	db	32
    84  00082F  53                 	db	83
    85  000830  54                 	db	84
    86  000831  4F                 	db	79
    87  000832  20                 	db	32
    88  000833  20                 	db	32
    89  000834  41                 	db	65
    90  000835  4E                 	db	78
    91  000836  44                 	db	68
    92  000837  52                 	db	82
    93  000838  45                 	db	69
    94  000839  00                 	db	0
    95  00083A                     __end_ofmain@F5414:
    96                           	opt stack 0
    97  00083A                     main@F5416:
    98                           	opt stack 0
    99  00083A  2A                 	db	42
   100  00083B  2A                 	db	42
   101  00083C  20                 	db	32
   102  00083D  53                 	db	83
   103  00083E  65                 	db	101
   104  00083F  71                 	db	113
   105  000840  75                 	db	117
   106  000841  65                 	db	101
   107  000842  6E                 	db	110
   108  000843  63                 	db	99
   109  000844  69                 	db	105
   110  000845  61                 	db	97
   111  000846  6C                 	db	108
   112  000847  20                 	db	32
   113  000848  2A                 	db	42
   114  000849  2A                 	db	42
   115  00084A  00                 	db	0
   116  00084B                     __end_ofmain@F5416:
   117                           	opt stack 0
   118  0000                     _ADCON1	set	4033
   119  0000                     _LATB	set	3978
   120  0000                     _LATD	set	3980
   121  0000                     _PORTDbits	set	3971
   122  0000                     _PORTEbits	set	3972
   123  0000                     _TRISB	set	3987
   124  0000                     _TRISDbits	set	3989
   125  00084B                     __stringdata:
   126                           	opt stack 0
   127  00084B  25                 	db	37
   128  00084C  6C                 	db	108	;'l'
   129  00084D  75                 	db	117	;'u'
   130  00084E  2E                 	db	46
   131  00084F  25                 	db	37
   132  000850  36                 	db	54	;'6'
   133  000851  2E                 	db	46
   134  000852  36                 	db	54	;'6'
   135  000853  6C                 	db	108	;'l'
   136  000854  75                 	db	117	;'u'
   137  000855  00                 	db	0
   138  000856                     __end_of__stringdata:
   139                           	opt stack 0
   140  000856  00                 	db	0	; dummy byte at the end
   141  0000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145  000C04                     __pcinit:
   146                           	opt stack 0
   147  000C04                     start_initialization:
   148                           	opt stack 0
   149  000C04                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to COMRAM (17 bytes)
   153  000C04  EE00  F029         	lfsr	0,__pbssCOMRAM
   154  000C08  0E11               	movlw	17
   155  000C0A                     clear_0:
   156  000C0A  6AEE               	clrf	postinc0,c
   157  000C0C  06E8               	decf	wreg,f,c
   158  000C0E  E1FD               	bnz	clear_0
   159                           
   160                           ; Initialize objects allocated to COMRAM (11 bytes)
   161                           ; load TBLPTR registers with __pidataCOMRAM
   162  000C10  0EEE               	movlw	low __pidataCOMRAM
   163  000C12  6EF6               	movwf	tblptrl,c
   164  000C14  0E0C               	movlw	high __pidataCOMRAM
   165  000C16  6EF7               	movwf	tblptrh,c
   166  000C18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   167  000C1A  6EF8               	movwf	tblptru,c
   168  000C1C  EE00  F03A         	lfsr	0,__pdataCOMRAM
   169  000C20  EE10 F00B          	lfsr	1,11
   170  000C24                     copy_data0:
   171  000C24  0009               	tblrd		*+
   172  000C26  CFF5 FFEE          	movff	tablat,postinc0
   173  000C2A  50E5               	movf	postdec1,w,c
   174  000C2C  50E1               	movf	fsr1l,w,c
   175  000C2E  E1FA               	bnz	copy_data0
   176  000C30                     end_of_initialization:
   177                           	opt stack 0
   178  000C30                     __end_of__initialization:
   179                           	opt stack 0
   180  000C30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  000C32  6EF8               	movwf	tblptru,c
   182  000C34  0100               	movlb	0
   183  000C36  EF2C  F004         	goto	_main	;jump to C main() function
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           postdec1	equ	0xFE5
   191                           fsr1l	equ	0xFE1
   192                           
   193                           	psect	bssCOMRAM
   194  000029                     __pbssCOMRAM:
   195                           	opt stack 0
   196  000029                     ftoa@buf:
   197                           	opt stack 0
   198  000029                     	ds	17
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	dataCOMRAM
   209  00003A                     __pdataCOMRAM:
   210                           	opt stack 0
   211  00003A                     EscreveInteiroLCD@F5476:
   212                           	opt stack 0
   213  00003A                     	ds	7
   214  000041                     _tempo:
   215                           	opt stack 0
   216  000041                     	ds	2
   217  000043                     _i:
   218                           	opt stack 0
   219  000043                     	ds	1
   220  000044                     _vetor_leds:
   221                           	opt stack 0
   222  000044                     	ds	1
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	opt stack 0
   235  000001                     ?_decrementa:
   236                           	opt stack 0
   237  000001                     ?_saida:
   238  000001                     Delay@Cnt1:
   239                           	opt stack 0
   240  000001                     delay_ms@delaytime:
   241                           	opt stack 0
   242  000001                     saida@sequencia:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x0
   246  000001                     	ds	1
   247  000002                     Delay@Cnt2:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x1
   251  000002                     	ds	1
   252  000003                     ??_delay_ms:
   253  000003                     EscreveComandoLCD@cmd:
   254                           	opt stack 0
   255  000003                     EnderecoCursor@endereco:
   256                           	opt stack 0
   257  000003                     EscreveCaractereLCD@data:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x2
   261  000003                     	ds	1
   262  000004                     ??_ConfiguraLCD:
   263  000004                     ?_incrementa:
   264                           	opt stack 0
   265  000004                     PosicaoCursorLCD@coluna:
   266                           	opt stack 0
   267  000004                     EscreveFraseRamLCD@buffer:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x3
   271  000004                     	ds	1
   272  000005                     PosicaoCursorLCD@linha:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x4
   276  000005                     	ds	1
   277  000006                     PosicaoCursorLCD@EnderecoLCD:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     main@Texto_0:
   283                           	opt stack 0
   284                           
   285                           ; 17 bytes @ 0x6
   286  000007                     	ds	17
   287  000018                     main@Texto_1:
   288                           	opt stack 0
   289                           
   290                           ; 17 bytes @ 0x17
   291  000018                     	ds	17
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 78 in file "../aula1.X/Sequencial.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;  Texto_1        17   23[COMRAM] const unsigned char [17]
   311 ;;  Texto_0        17    6[COMRAM] const unsigned char [17]
   312 ;; Return value:  Size  Location     Type
   313 ;;		None               void
   314 ;; Registers used:
   315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         0       0       0       0       0       0       0       0       0
   322 ;;      Locals:        34       0       0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0
   324 ;;      Totals:        34       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:       34 bytes
   326 ;; Hardware stack levels required when called:    3
   327 ;; This function calls:
   328 ;;		_ConfiguraLCD
   329 ;;		_EscreveComandoLCD
   330 ;;		_EscreveFraseRamLCD
   331 ;;		_PosicaoCursorLCD
   332 ;;		_decrementa
   333 ;;		_delay_ms
   334 ;;		_incrementa
   335 ;;		_saida
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text0
   342  000858                     __ptext0:
   343                           	opt stack 0
   344  000858                     _main:
   345                           	opt stack 28
   346                           
   347                           ;Sequencial.c: 81: ADCON1 = 0x0D;
   348                           
   349                           ;incstack = 0
   350  000858  0E0D               	movlw	13
   351  00085A  6EC1               	movwf	4033,c	;volatile
   352                           
   353                           ;Sequencial.c: 82: LATB = 0xFF;
   354  00085C  688A               	setf	3978,c	;volatile
   355                           
   356                           ;Sequencial.c: 83: LATD = 0X00;
   357  00085E  0E00               	movlw	0
   358  000860  6E8C               	movwf	3980,c	;volatile
   359                           
   360                           ;Sequencial.c: 84: TRISB = 0x00;
   361  000862  0E00               	movlw	0
   362  000864  6E93               	movwf	3987,c	;volatile
   363                           
   364                           ;Sequencial.c: 88: const unsigned char Texto_0[] = "FATEC STO  ANDRE";
   365  000866  0E29               	movlw	low main@F5414
   366  000868  6EF6               	movwf	tblptrl,c
   367  00086A                     	if	1	;There is more than 1 active tblptr byte
   368  00086A  0E08               	movlw	high main@F5414
   369  00086C  6EF7               	movwf	tblptrh,c
   370  00086E                     	endif
   371  00086E                     	if	0	;There are less than 3 active tblptr bytes
   372  00086E                     	endif
   373  00086E  EE20  F007         	lfsr	2,main@Texto_0
   374  000872  0E11               	movlw	17
   375  000874                     u360:
   376  000874  0009               	tblrd		*+
   377  000876  CFF5 FFDE          	movff	tablat,postinc2
   378  00087A  2EE8               	decfsz	wreg,f,c
   379  00087C  D7FB               	bra	u360
   380                           
   381                           ;Sequencial.c: 89: const unsigned char Texto_1[] = "** Sequencial **";
   382  00087E  0E3A               	movlw	low main@F5416
   383  000880  6EF6               	movwf	tblptrl,c
   384  000882                     	if	1	;There is more than 1 active tblptr byte
   385  000882  0E08               	movlw	high main@F5416
   386  000884  6EF7               	movwf	tblptrh,c
   387  000886                     	endif
   388  000886                     	if	0	;There are less than 3 active tblptr bytes
   389  000886                     	endif
   390  000886  EE20  F018         	lfsr	2,main@Texto_1
   391  00088A  0E11               	movlw	17
   392  00088C                     u370:
   393  00088C  0009               	tblrd		*+
   394  00088E  CFF5 FFDE          	movff	tablat,postinc2
   395  000892  2EE8               	decfsz	wreg,f,c
   396  000894  D7FB               	bra	u370
   397                           
   398                           ;Sequencial.c: 93: ConfiguraLCD();
   399  000896  ECCE  F004         	call	_ConfiguraLCD	;wreg free
   400                           
   401                           ;Sequencial.c: 94: delay_ms(2);
   402  00089A  0E00               	movlw	0
   403  00089C  6E02               	movwf	delay_ms@delaytime+1,c
   404  00089E  0E02               	movlw	2
   405  0008A0  6E01               	movwf	delay_ms@delaytime,c
   406  0008A2  EC46  F006         	call	_delay_ms	;wreg free
   407                           
   408                           ;Sequencial.c: 95: PosicaoCursorLCD(1,1);
   409  0008A6  0E01               	movlw	1
   410  0008A8  6E04               	movwf	PosicaoCursorLCD@coluna,c
   411  0008AA  0E01               	movlw	1
   412  0008AC  ECD0  F005         	call	_PosicaoCursorLCD
   413                           
   414                           ;Sequencial.c: 96: EscreveFraseRamLCD(Texto_0);
   415  0008B0  0E00               	movlw	high main@Texto_0
   416  0008B2  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   417  0008B4  0E07               	movlw	low main@Texto_0
   418  0008B6  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   419  0008B8  EC34  F006         	call	_EscreveFraseRamLCD	;wreg free
   420                           
   421                           ;Sequencial.c: 97: PosicaoCursorLCD(2,1);
   422  0008BC  0E01               	movlw	1
   423  0008BE  6E04               	movwf	PosicaoCursorLCD@coluna,c
   424  0008C0  0E02               	movlw	2
   425  0008C2  ECD0  F005         	call	_PosicaoCursorLCD
   426                           
   427                           ;Sequencial.c: 98: EscreveFraseRamLCD(Texto_1);
   428  0008C6  0E00               	movlw	high main@Texto_1
   429  0008C8  6E05               	movwf	EscreveFraseRamLCD@buffer+1,c
   430  0008CA  0E18               	movlw	low main@Texto_1
   431  0008CC  6E04               	movwf	EscreveFraseRamLCD@buffer,c
   432  0008CE  EC34  F006         	call	_EscreveFraseRamLCD	;wreg free
   433                           
   434                           ;Sequencial.c: 99: EscreveComandoLCD(0b00001100);
   435  0008D2  0E0C               	movlw	12
   436  0008D4  EC1D  F005         	call	_EscreveComandoLCD
   437                           
   438                           ;Sequencial.c: 100: delay_ms(3000);
   439  0008D8  0E0B               	movlw	11
   440  0008DA  6E02               	movwf	delay_ms@delaytime+1,c
   441  0008DC  0EB8               	movlw	184
   442  0008DE  6E01               	movwf	delay_ms@delaytime,c
   443  0008E0  EC46  F006         	call	_delay_ms	;wreg free
   444  0008E4                     l51:
   445                           
   446                           ;Sequencial.c: 103: {
   447                           ;Sequencial.c: 104: vetor_leds = 0x01;
   448  0008E4  0E01               	movlw	1
   449  0008E6  6E44               	movwf	_vetor_leds,c
   450                           
   451                           ;Sequencial.c: 105: while(vetor_leds > 0)
   452  0008E8  D018               	goto	l1129
   453  0008EA                     l1121:
   454                           
   455                           ;Sequencial.c: 106: {
   456                           ;Sequencial.c: 108: LATB = ~(vetor_leds);
   457  0008EA  5044               	movf	_vetor_leds,w,c
   458  0008EC  0AFF               	xorlw	255
   459  0008EE  6E8A               	movwf	3978,c	;volatile
   460                           
   461                           ;Sequencial.c: 109: vetor_leds = vetor_leds << 1;
   462  0008F0  5044               	movf	_vetor_leds,w,c
   463  0008F2  2444               	addwf	_vetor_leds,w,c
   464  0008F4  6E44               	movwf	_vetor_leds,c
   465                           
   466                           ;Sequencial.c: 110: delay_ms(tempo);
   467  0008F6  C041  F001         	movff	_tempo,delay_ms@delaytime
   468  0008FA  C042  F002         	movff	_tempo+1,delay_ms@delaytime+1
   469  0008FE  EC46  F006         	call	_delay_ms	;wreg free
   470                           
   471                           ;Sequencial.c: 111: incrementa(tempo);
   472  000902  C041  F004         	movff	_tempo,?_incrementa
   473  000906  C042  F005         	movff	_tempo+1,?_incrementa+1
   474  00090A  EC68  F006         	call	_incrementa	;wreg free
   475                           
   476                           ;Sequencial.c: 112: decrementa(tempo);
   477  00090E  C041  F001         	movff	_tempo,?_decrementa
   478  000912  C042  F002         	movff	_tempo+1,?_decrementa+1
   479  000916  EC1D  F006         	call	_decrementa	;wreg free
   480  00091A                     l1129:
   481  00091A  6644               	tstfsz	_vetor_leds,c
   482  00091C  D7E6               	goto	l1121
   483                           
   484                           ;Sequencial.c: 113: }
   485                           ;Sequencial.c: 115: vetor_leds = 0x80;
   486  00091E  0E80               	movlw	128
   487  000920  6E44               	movwf	_vetor_leds,c
   488                           
   489                           ;Sequencial.c: 116: while(vetor_leds > 0)
   490  000922  D018               	goto	l1141
   491  000924                     l1133:
   492                           
   493                           ;Sequencial.c: 117: {
   494                           ;Sequencial.c: 119: LATB = ~(vetor_leds);
   495  000924  5044               	movf	_vetor_leds,w,c
   496  000926  0AFF               	xorlw	255
   497  000928  6E8A               	movwf	3978,c	;volatile
   498                           
   499                           ;Sequencial.c: 120: vetor_leds = vetor_leds >> 1;
   500  00092A  90D8               	bcf	status,0,c
   501  00092C  3044               	rrcf	_vetor_leds,w,c
   502  00092E  6E44               	movwf	_vetor_leds,c
   503                           
   504                           ;Sequencial.c: 121: delay_ms(tempo);
   505  000930  C041  F001         	movff	_tempo,delay_ms@delaytime
   506  000934  C042  F002         	movff	_tempo+1,delay_ms@delaytime+1
   507  000938  EC46  F006         	call	_delay_ms	;wreg free
   508                           
   509                           ;Sequencial.c: 122: incrementa(tempo);
   510  00093C  C041  F004         	movff	_tempo,?_incrementa
   511  000940  C042  F005         	movff	_tempo+1,?_incrementa+1
   512  000944  EC68  F006         	call	_incrementa	;wreg free
   513                           
   514                           ;Sequencial.c: 123: decrementa(tempo);
   515  000948  C041  F001         	movff	_tempo,?_decrementa
   516  00094C  C042  F002         	movff	_tempo+1,?_decrementa+1
   517  000950  EC1D  F006         	call	_decrementa	;wreg free
   518  000954                     l1141:
   519  000954  6644               	tstfsz	_vetor_leds,c
   520  000956  D7E6               	goto	l1133
   521                           
   522                           ;Sequencial.c: 124: }
   523                           ;Sequencial.c: 126: vetor_leds = 0x01;
   524  000958  0E01               	movlw	1
   525  00095A  6E44               	movwf	_vetor_leds,c
   526                           
   527                           ;Sequencial.c: 127: while(vetor_leds > 0)
   528  00095C  D01C               	goto	l1155
   529  00095E                     l1145:
   530                           
   531                           ;Sequencial.c: 128: {
   532                           ;Sequencial.c: 130: vetor_leds = saida(vetor_leds);
   533  00095E  C044  F001         	movff	_vetor_leds,saida@sequencia
   534  000962  6A02               	clrf	saida@sequencia+1,c
   535  000964  EC7D  F006         	call	_saida	;wreg free
   536  000968  5001               	movf	?_saida,w,c
   537  00096A  6E44               	movwf	_vetor_leds,c
   538                           
   539                           ;Sequencial.c: 131: vetor_leds = vetor_leds << 1;
   540  00096C  5044               	movf	_vetor_leds,w,c
   541  00096E  2444               	addwf	_vetor_leds,w,c
   542  000970  6E44               	movwf	_vetor_leds,c
   543                           
   544                           ;Sequencial.c: 132: delay_ms(tempo);
   545  000972  C041  F001         	movff	_tempo,delay_ms@delaytime
   546  000976  C042  F002         	movff	_tempo+1,delay_ms@delaytime+1
   547  00097A  EC46  F006         	call	_delay_ms	;wreg free
   548                           
   549                           ;Sequencial.c: 133: incrementa(tempo);
   550  00097E  C041  F004         	movff	_tempo,?_incrementa
   551  000982  C042  F005         	movff	_tempo+1,?_incrementa+1
   552  000986  EC68  F006         	call	_incrementa	;wreg free
   553                           
   554                           ;Sequencial.c: 134: decrementa(tempo);
   555  00098A  C041  F001         	movff	_tempo,?_decrementa
   556  00098E  C042  F002         	movff	_tempo+1,?_decrementa+1
   557  000992  EC1D  F006         	call	_decrementa	;wreg free
   558  000996                     l1155:
   559  000996  6644               	tstfsz	_vetor_leds,c
   560  000998  D7E2               	goto	l1145
   561  00099A  D7A4               	goto	l51
   562  00099C                     __end_of_main:
   563                           	opt stack 0
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1l	equ	0xFE1
   572                           postinc2	equ	0xFDE
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _saida *****************
   576 ;; Defined at:
   577 ;;		line 51 in file "../aula1.X/Sequencial.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  sequencia       2    0[COMRAM] int 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2    0[COMRAM] int 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         2       0       0       0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         2       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        2 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text1
   605  000CFA                     __ptext1:
   606                           	opt stack 0
   607  000CFA                     _saida:
   608                           	opt stack 30
   609                           
   610                           ;Sequencial.c: 53: LATB = ~(sequencia);
   611                           
   612                           ;incstack = 0
   613  000CFA  5001               	movf	saida@sequencia,w,c
   614  000CFC  0AFF               	xorlw	255
   615  000CFE  6E8A               	movwf	3978,c	;volatile
   616  000D00  0012               	return	
   617  000D02                     __end_of_saida:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           postinc2	equ	0xFDE
   628                           status	equ	0xFD8
   629                           
   630 ;; *************** function _incrementa *****************
   631 ;; Defined at:
   632 ;;		line 56 in file "../aula1.X/Sequencial.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;		None               void
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         2       0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         2       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        2 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    1
   653 ;; This function calls:
   654 ;;		_delay_ms
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text2
   661  000CD0                     __ptext2:
   662                           	opt stack 0
   663  000CD0                     _incrementa:
   664                           	opt stack 29
   665                           
   666                           ;Sequencial.c: 58: if(PORTEbits.RE0 == 0)
   667                           
   668                           ;incstack = 0
   669  000CD0  B084               	btfsc	3972,0,c	;volatile
   670  000CD2  D00C               	goto	l39
   671                           
   672                           ;Sequencial.c: 59: {
   673                           ;Sequencial.c: 60: tempo = tempo+100;
   674  000CD4  0E64               	movlw	100
   675  000CD6  2441               	addwf	_tempo,w,c
   676  000CD8  6E41               	movwf	_tempo,c
   677  000CDA  0E00               	movlw	0
   678  000CDC  2042               	addwfc	_tempo+1,w,c
   679  000CDE  6E42               	movwf	_tempo+1,c
   680                           
   681                           ;Sequencial.c: 61: delay_ms(100);
   682  000CE0  0E00               	movlw	0
   683  000CE2  6E02               	movwf	delay_ms@delaytime+1,c
   684  000CE4  0E64               	movlw	100
   685  000CE6  6E01               	movwf	delay_ms@delaytime,c
   686  000CE8  EC46  F006         	call	_delay_ms	;wreg free
   687  000CEC                     l39:
   688  000CEC  0012               	return	
   689  000CEE                     __end_of_incrementa:
   690                           	opt stack 0
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           postdec1	equ	0xFE5
   698                           fsr1l	equ	0xFE1
   699                           postinc2	equ	0xFDE
   700                           status	equ	0xFD8
   701                           
   702 ;; *************** function _delay_ms *****************
   703 ;; Defined at:
   704 ;;		line 43 in file "../aula1.X/Sequencial.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  delaytime       2    0[COMRAM] int 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;		None               void
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         2       0       0       0       0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0       0
   720 ;;      Temps:          1       0       0       0       0       0       0       0       0
   721 ;;      Totals:         3       0       0       0       0       0       0       0       0
   722 ;;Total ram usage:        3 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_incrementa
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text3
   733  000C8C                     __ptext3:
   734                           	opt stack 0
   735  000C8C                     _delay_ms:
   736                           	opt stack 29
   737                           
   738                           ;Sequencial.c: 45: while (--delaytime)
   739                           
   740                           ;incstack = 0
   741  000C8C  D008               	goto	l881
   742  000C8E                     l879:
   743                           
   744                           ;Sequencial.c: 46: {
   745                           ;Sequencial.c: 47: _delay((unsigned long)((1)*(48000000/4000.0)));
   746  000C8E  0E10               	movlw	16
   747  000C90  6E03               	movwf	??_delay_ms& (0+255),c
   748  000C92  0E94               	movlw	148
   749  000C94                     u467:
   750  000C94  2EE8               	decfsz	wreg,f,c
   751  000C96  D7FE               	goto	u467
   752  000C98  2E03               	decfsz	??_delay_ms& (0+255),f,c
   753  000C9A  D7FC               	goto	u467
   754  000C9C  D000               	nop2	
   755  000C9E                     l881:
   756  000C9E  0601               	decf	delay_ms@delaytime,f,c
   757  000CA0  A0D8               	btfss	status,0,c
   758  000CA2  0602               	decf	delay_ms@delaytime+1,f,c
   759  000CA4  5002               	movf	(delay_ms@delaytime+1)& (0+255),w,c
   760  000CA6  1001               	iorwf	delay_ms@delaytime& (0+255),w,c
   761  000CA8  B4D8               	btfsc	status,2,c
   762  000CAA  0012               	return	
   763  000CAC  D7F0               	goto	l879
   764  000CAE                     __end_of_delay_ms:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           postdec1	equ	0xFE5
   773                           fsr1l	equ	0xFE1
   774                           postinc2	equ	0xFDE
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function _decrementa *****************
   778 ;; Defined at:
   779 ;;		line 65 in file "../aula1.X/Sequencial.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, prodl
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   793 ;;      Params:         2       0       0       0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0
   796 ;;      Totals:         2       0       0       0       0       0       0       0       0
   797 ;;Total ram usage:        2 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text4
   807  000C3A                     __ptext4:
   808                           	opt stack 0
   809  000C3A                     _decrementa:
   810                           	opt stack 30
   811                           
   812                           ;Sequencial.c: 67: if(PORTEbits.RE1 == 0)
   813                           
   814                           ;incstack = 0
   815  000C3A  B284               	btfsc	3972,1,c	;volatile
   816  000C3C  D014               	goto	l44
   817                           
   818                           ;Sequencial.c: 68: {
   819                           ;Sequencial.c: 69: tempo = tempo-100;
   820  000C3E  0E9C               	movlw	156
   821  000C40  2441               	addwf	_tempo,w,c
   822  000C42  6E41               	movwf	_tempo,c
   823  000C44  0EFF               	movlw	255
   824  000C46  2042               	addwfc	_tempo+1,w,c
   825  000C48  6E42               	movwf	_tempo+1,c
   826                           
   827                           ;Sequencial.c: 70: if(tempo <= 0)
   828  000C4A  5042               	movf	_tempo+1,w,c
   829  000C4C  0A80               	xorlw	128
   830  000C4E  6EF3               	movwf	prodl,c
   831  000C50  0E80               	movlw	128
   832  000C52  5CF3               	subwf	prodl,w,c
   833  000C54  0E01               	movlw	1
   834  000C56  B4D8               	btfsc	status,2,c
   835  000C58  5C41               	subwf	_tempo,w,c
   836  000C5A  B0D8               	btfsc	status,0,c
   837  000C5C  D004               	goto	l44
   838                           
   839                           ;Sequencial.c: 71: {
   840                           ;Sequencial.c: 72: tempo = 100;
   841  000C5E  0E00               	movlw	0
   842  000C60  6E42               	movwf	_tempo+1,c
   843  000C62  0E64               	movlw	100
   844  000C64  6E41               	movwf	_tempo,c
   845  000C66                     l44:
   846  000C66  0012               	return	
   847  000C68                     __end_of_decrementa:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           prodl	equ	0xFF3
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           postinc2	equ	0xFDE
   859                           status	equ	0xFD8
   860                           
   861 ;; *************** function _PosicaoCursorLCD *****************
   862 ;; Defined at:
   863 ;;		line 280 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  linha           1    wreg     unsigned char 
   866 ;;  coluna          1    3[COMRAM] unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  linha           1    4[COMRAM] unsigned char 
   869 ;;  EnderecoLCD     1    5[COMRAM] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;		None               void
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         1       0       0       0       0       0       0       0       0
   880 ;;      Locals:         2       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0
   882 ;;      Totals:         3       0       0       0       0       0       0       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    2
   886 ;; This function calls:
   887 ;;		_EnderecoCursor
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text5
   894  000BA0                     __ptext5:
   895                           	opt stack 0
   896  000BA0                     _PosicaoCursorLCD:
   897                           	opt stack 28
   898                           
   899                           ;incstack = 0
   900                           ;PosicaoCursorLCD@linha stored from wreg
   901  000BA0  6E05               	movwf	PosicaoCursorLCD@linha,c
   902                           
   903                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
   904  000BA2  0E00               	movlw	0
   905  000BA4  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   906                           
   907                           ;displayLCD.c: 292: if (coluna >= 0)
   908  000BA6  0604               	decf	PosicaoCursorLCD@coluna,f,c
   909                           
   910                           ;displayLCD.c: 293: {
   911                           ;displayLCD.c: 296: switch (linha)
   912  000BA8  D01E               	goto	l1085
   913  000BAA                     l133:
   914                           
   915                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
   916  000BAA  C004  F006         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
   917                           
   918                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
   919  000BAE  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   920  000BB0  EC9B  F005         	call	_EnderecoCursor
   921                           
   922                           ;displayLCD.c: 301: break;
   923  000BB4  D026               	goto	l140
   924  000BB6                     l1069:
   925                           
   926                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
   927  000BB6  5004               	movf	PosicaoCursorLCD@coluna,w,c
   928  000BB8  0F40               	addlw	64
   929  000BBA  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   930                           
   931                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
   932  000BBC  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   933  000BBE  EC9B  F005         	call	_EnderecoCursor
   934                           
   935                           ;displayLCD.c: 306: break;
   936  000BC2  D01F               	goto	l140
   937  000BC4                     l1073:
   938                           
   939                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
   940  000BC4  5004               	movf	PosicaoCursorLCD@coluna,w,c
   941  000BC6  0F14               	addlw	20
   942  000BC8  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   943                           
   944                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
   945  000BCA  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   946  000BCC  EC9B  F005         	call	_EnderecoCursor
   947                           
   948                           ;displayLCD.c: 311: break;
   949  000BD0  D018               	goto	l140
   950  000BD2                     l1077:
   951                           
   952                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
   953  000BD2  5004               	movf	PosicaoCursorLCD@coluna,w,c
   954  000BD4  0F54               	addlw	84
   955  000BD6  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   956                           
   957                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
   958  000BD8  5006               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
   959  000BDA  EC9B  F005         	call	_EnderecoCursor
   960                           
   961                           ;displayLCD.c: 316: break;
   962  000BDE  D011               	goto	l140
   963  000BE0                     l1081:
   964                           
   965                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
   966  000BE0  0E00               	movlw	0
   967  000BE2  6E06               	movwf	PosicaoCursorLCD@EnderecoLCD,c
   968                           
   969                           ;displayLCD.c: 320: break;
   970  000BE4  D00E               	goto	l140
   971  000BE6                     l1085:
   972  000BE6  5005               	movf	PosicaoCursorLCD@linha,w,c
   973                           
   974                           ; Switch size 1, requested type "space"
   975                           ; Number of cases is 4, Range of values is 1 to 4
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte           13     7 (average)
   979                           ;	Chosen strategy is simple_byte
   980  000BE8  0A01               	xorlw	1	; case 1
   981  000BEA  B4D8               	btfsc	status,2,c
   982  000BEC  D7DE               	goto	l133
   983  000BEE  0A03               	xorlw	3	; case 2
   984  000BF0  B4D8               	btfsc	status,2,c
   985  000BF2  D7E1               	goto	l1069
   986  000BF4  0A01               	xorlw	1	; case 3
   987  000BF6  B4D8               	btfsc	status,2,c
   988  000BF8  D7E5               	goto	l1073
   989  000BFA  0A07               	xorlw	7	; case 4
   990  000BFC  B4D8               	btfsc	status,2,c
   991  000BFE  D7E9               	goto	l1077
   992  000C00  D7EF               	goto	l1081
   993  000C02                     l140:
   994  000C02  0012               	return	
   995  000C04                     __end_of_PosicaoCursorLCD:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           prodl	equ	0xFF3
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           postdec1	equ	0xFE5
  1005                           fsr1l	equ	0xFE1
  1006                           postinc2	equ	0xFDE
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _EnderecoCursor *****************
  1010 ;; Defined at:
  1011 ;;		line 229 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  endereco        1    wreg     unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  endereco        1    2[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         0       0       0       0       0       0       0       0       0
  1026 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1029 ;;Total ram usage:        1 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    1
  1032 ;; This function calls:
  1033 ;;		_Delay
  1034 ;; This function is called by:
  1035 ;;		_PosicaoCursorLCD
  1036 ;;		_CriaCaractereLCD
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text6
  1041  000B36                     __ptext6:
  1042                           	opt stack 0
  1043  000B36                     _EnderecoCursor:
  1044                           	opt stack 28
  1045                           
  1046                           ;incstack = 0
  1047                           ;EnderecoCursor@endereco stored from wreg
  1048  000B36  6E03               	movwf	EnderecoCursor@endereco,c
  1049                           
  1050                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  1051  000B38  9483               	bcf	3971,2,c	;volatile
  1052                           
  1053                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  1054  000B3A  9283               	bcf	3971,1,c	;volatile
  1055                           
  1056                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  1057  000B3C  9083               	bcf	3971,0,c	;volatile
  1058                           
  1059                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  1060  000B3E  8E83               	bsf	3971,7,c	;volatile
  1061                           
  1062                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1063  000B40  A803               	btfss	EnderecoCursor@endereco,4,c
  1064  000B42  D002               	goto	l114
  1065  000B44  8883               	bsf	3971,4,c	;volatile
  1066  000B46  D001               	goto	l933
  1067  000B48                     l114:
  1068                           
  1069                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  1070  000B48  9883               	bcf	3971,4,c	;volatile
  1071  000B4A                     l933:
  1072                           
  1073                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1074  000B4A  AA03               	btfss	EnderecoCursor@endereco,5,c
  1075  000B4C  D002               	goto	l116
  1076  000B4E  8A83               	bsf	3971,5,c	;volatile
  1077  000B50  D001               	goto	l937
  1078  000B52                     l116:
  1079                           
  1080                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  1081  000B52  9A83               	bcf	3971,5,c	;volatile
  1082  000B54                     l937:
  1083                           
  1084                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1085  000B54  AC03               	btfss	EnderecoCursor@endereco,6,c
  1086  000B56  D002               	goto	l118
  1087  000B58  8C83               	bsf	3971,6,c	;volatile
  1088  000B5A  D001               	goto	l119
  1089  000B5C                     l118:
  1090                           
  1091                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  1092  000B5C  9C83               	bcf	3971,6,c	;volatile
  1093  000B5E                     l119:
  1094                           
  1095                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  1096  000B5E  8083               	bsf	3971,0,c	;volatile
  1097                           
  1098                           ;displayLCD.c: 247: Delay();
  1099  000B60  EC57  F006         	call	_Delay	;wreg free
  1100                           
  1101                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  1102  000B64  9083               	bcf	3971,0,c	;volatile
  1103                           
  1104                           ;displayLCD.c: 249: Delay();
  1105  000B66  EC57  F006         	call	_Delay	;wreg free
  1106                           
  1107                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1108  000B6A  A003               	btfss	EnderecoCursor@endereco,0,c
  1109  000B6C  D002               	goto	l120
  1110  000B6E  8883               	bsf	3971,4,c	;volatile
  1111  000B70  D001               	goto	l121
  1112  000B72                     l120:
  1113                           
  1114                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  1115  000B72  9883               	bcf	3971,4,c	;volatile
  1116  000B74                     l121:
  1117                           
  1118                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1119  000B74  A203               	btfss	EnderecoCursor@endereco,1,c
  1120  000B76  D002               	goto	l122
  1121  000B78  8A83               	bsf	3971,5,c	;volatile
  1122  000B7A  D001               	goto	l123
  1123  000B7C                     l122:
  1124                           
  1125                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  1126  000B7C  9A83               	bcf	3971,5,c	;volatile
  1127  000B7E                     l123:
  1128                           
  1129                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1130  000B7E  A403               	btfss	EnderecoCursor@endereco,2,c
  1131  000B80  D002               	goto	l124
  1132  000B82  8C83               	bsf	3971,6,c	;volatile
  1133  000B84  D001               	goto	l125
  1134  000B86                     l124:
  1135                           
  1136                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  1137  000B86  9C83               	bcf	3971,6,c	;volatile
  1138  000B88                     l125:
  1139                           
  1140                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1141  000B88  A603               	btfss	EnderecoCursor@endereco,3,c
  1142  000B8A  D002               	goto	l126
  1143  000B8C  8E83               	bsf	3971,7,c	;volatile
  1144  000B8E  D001               	goto	l127
  1145  000B90                     l126:
  1146                           
  1147                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  1148  000B90  9E83               	bcf	3971,7,c	;volatile
  1149  000B92                     l127:
  1150                           
  1151                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  1152  000B92  8083               	bsf	3971,0,c	;volatile
  1153                           
  1154                           ;displayLCD.c: 263: Delay();
  1155  000B94  EC57  F006         	call	_Delay	;wreg free
  1156                           
  1157                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  1158  000B98  9083               	bcf	3971,0,c	;volatile
  1159                           
  1160                           ;displayLCD.c: 265: Delay();
  1161  000B9A  EC57  F006         	call	_Delay	;wreg free
  1162  000B9E  0012               	return	
  1163  000BA0                     __end_of_EnderecoCursor:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           prodl	equ	0xFF3
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           postdec1	equ	0xFE5
  1173                           fsr1l	equ	0xFE1
  1174                           postinc2	equ	0xFDE
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _EscreveFraseRamLCD *****************
  1178 ;; Defined at:
  1179 ;;		line 438 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  1182 ;;		 -> EscreveInteiroLCD@texto(7), main@Texto_1(17), main@Texto_0(17), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1194 ;;      Params:         2       0       0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1197 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    2
  1201 ;; This function calls:
  1202 ;;		_EscreveCaractereLCD
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;;		_EscreveInteiroLCD
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text7
  1210  000C68                     __ptext7:
  1211                           	opt stack 0
  1212  000C68                     _EscreveFraseRamLCD:
  1213                           	opt stack 28
  1214                           
  1215                           ;displayLCD.c: 440: while(*buffer)
  1216                           
  1217                           ;incstack = 0
  1218  000C68  D009               	goto	l1095
  1219  000C6A                     l1091:
  1220                           
  1221                           ;displayLCD.c: 441: {
  1222                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  1223  000C6A  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1224  000C6E  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1225  000C72  50DF               	movf	indf2,w,c
  1226  000C74  EC62  F005         	call	_EscreveCaractereLCD
  1227                           
  1228                           ;displayLCD.c: 443: buffer++;
  1229  000C78  4A04               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1230  000C7A  2A05               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1231  000C7C                     l1095:
  1232  000C7C  C004  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  1233  000C80  C005  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  1234  000C84  50DF               	movf	indf2,w,c
  1235  000C86  B4D8               	btfsc	status,2,c
  1236  000C88  0012               	return	
  1237  000C8A  D7EF               	goto	l1091
  1238  000C8C                     __end_of_EscreveFraseRamLCD:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodl	equ	0xFF3
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           indf2	equ	0xFDF
  1250                           postinc2	equ	0xFDE
  1251                           fsr2h	equ	0xFDA
  1252                           fsr2l	equ	0xFD9
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _EscreveCaractereLCD *****************
  1256 ;; Defined at:
  1257 ;;		line 339 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  data            1    wreg     unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  data            1    2[COMRAM] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;		None               void
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        1 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    1
  1278 ;; This function calls:
  1279 ;;		_Delay
  1280 ;; This function is called by:
  1281 ;;		_EscreveFraseRamLCD
  1282 ;;		_EscreveFloatLCD
  1283 ;;		_EscreveFraseLCD
  1284 ;;		_CriaCaractereLCD
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text8
  1289  000AC4                     __ptext8:
  1290                           	opt stack 0
  1291  000AC4                     _EscreveCaractereLCD:
  1292                           	opt stack 28
  1293                           
  1294                           ;incstack = 0
  1295                           ;EscreveCaractereLCD@data stored from wreg
  1296  000AC4  6E03               	movwf	EscreveCaractereLCD@data,c
  1297                           
  1298                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  1299  000AC6  9483               	bcf	3971,2,c	;volatile
  1300                           
  1301                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  1302  000AC8  8283               	bsf	3971,1,c	;volatile
  1303                           
  1304                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  1305  000ACA  9083               	bcf	3971,0,c	;volatile
  1306                           
  1307                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  1308  000ACC  A803               	btfss	EscreveCaractereLCD@data,4,c
  1309  000ACE  D002               	goto	l143
  1310  000AD0  8883               	bsf	3971,4,c	;volatile
  1311  000AD2  D001               	goto	l965
  1312  000AD4                     l143:
  1313                           
  1314                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  1315  000AD4  9883               	bcf	3971,4,c	;volatile
  1316  000AD6                     l965:
  1317                           
  1318                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  1319  000AD6  AA03               	btfss	EscreveCaractereLCD@data,5,c
  1320  000AD8  D002               	goto	l145
  1321  000ADA  8A83               	bsf	3971,5,c	;volatile
  1322  000ADC  D001               	goto	l969
  1323  000ADE                     l145:
  1324                           
  1325                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  1326  000ADE  9A83               	bcf	3971,5,c	;volatile
  1327  000AE0                     l969:
  1328                           
  1329                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  1330  000AE0  AC03               	btfss	EscreveCaractereLCD@data,6,c
  1331  000AE2  D002               	goto	l147
  1332  000AE4  8C83               	bsf	3971,6,c	;volatile
  1333  000AE6  D001               	goto	l973
  1334  000AE8                     l147:
  1335                           
  1336                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  1337  000AE8  9C83               	bcf	3971,6,c	;volatile
  1338  000AEA                     l973:
  1339                           
  1340                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  1341  000AEA  AE03               	btfss	EscreveCaractereLCD@data,7,c
  1342  000AEC  D002               	goto	l149
  1343  000AEE  8E83               	bsf	3971,7,c	;volatile
  1344  000AF0  D001               	goto	l150
  1345  000AF2                     l149:
  1346                           
  1347                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  1348  000AF2  9E83               	bcf	3971,7,c	;volatile
  1349  000AF4                     l150:
  1350                           
  1351                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  1352  000AF4  8083               	bsf	3971,0,c	;volatile
  1353                           
  1354                           ;displayLCD.c: 358: Delay();
  1355  000AF6  EC57  F006         	call	_Delay	;wreg free
  1356                           
  1357                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  1358  000AFA  9083               	bcf	3971,0,c	;volatile
  1359                           
  1360                           ;displayLCD.c: 360: Delay();
  1361  000AFC  EC57  F006         	call	_Delay	;wreg free
  1362                           
  1363                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  1364  000B00  A003               	btfss	EscreveCaractereLCD@data,0,c
  1365  000B02  D002               	goto	l151
  1366  000B04  8883               	bsf	3971,4,c	;volatile
  1367  000B06  D001               	goto	l152
  1368  000B08                     l151:
  1369                           
  1370                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  1371  000B08  9883               	bcf	3971,4,c	;volatile
  1372  000B0A                     l152:
  1373                           
  1374                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  1375  000B0A  A203               	btfss	EscreveCaractereLCD@data,1,c
  1376  000B0C  D002               	goto	l153
  1377  000B0E  8A83               	bsf	3971,5,c	;volatile
  1378  000B10  D001               	goto	l154
  1379  000B12                     l153:
  1380                           
  1381                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  1382  000B12  9A83               	bcf	3971,5,c	;volatile
  1383  000B14                     l154:
  1384                           
  1385                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  1386  000B14  A403               	btfss	EscreveCaractereLCD@data,2,c
  1387  000B16  D002               	goto	l155
  1388  000B18  8C83               	bsf	3971,6,c	;volatile
  1389  000B1A  D001               	goto	l156
  1390  000B1C                     l155:
  1391                           
  1392                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  1393  000B1C  9C83               	bcf	3971,6,c	;volatile
  1394  000B1E                     l156:
  1395                           
  1396                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  1397  000B1E  A603               	btfss	EscreveCaractereLCD@data,3,c
  1398  000B20  D002               	goto	l157
  1399  000B22  8E83               	bsf	3971,7,c	;volatile
  1400  000B24  D001               	goto	l158
  1401  000B26                     l157:
  1402                           
  1403                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  1404  000B26  9E83               	bcf	3971,7,c	;volatile
  1405  000B28                     l158:
  1406                           
  1407                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  1408  000B28  8083               	bsf	3971,0,c	;volatile
  1409                           
  1410                           ;displayLCD.c: 375: Delay();
  1411  000B2A  EC57  F006         	call	_Delay	;wreg free
  1412                           
  1413                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  1414  000B2E  9083               	bcf	3971,0,c	;volatile
  1415                           
  1416                           ;displayLCD.c: 377: Delay();
  1417  000B30  EC57  F006         	call	_Delay	;wreg free
  1418  000B34  0012               	return	
  1419  000B36                     __end_of_EscreveCaractereLCD:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodl	equ	0xFF3
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           indf2	equ	0xFDF
  1431                           postinc2	equ	0xFDE
  1432                           fsr2h	equ	0xFDA
  1433                           fsr2l	equ	0xFD9
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _ConfiguraLCD *****************
  1437 ;; Defined at:
  1438 ;;		line 80 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        1 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    2
  1459 ;; This function calls:
  1460 ;;		_Delay
  1461 ;;		_EscreveComandoLCD
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text9
  1468  00099C                     __ptext9:
  1469                           	opt stack 0
  1470  00099C                     _ConfiguraLCD:
  1471                           	opt stack 28
  1472                           
  1473                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  1474                           
  1475                           ;incstack = 0
  1476  00099C  9495               	bcf	3989,2,c	;volatile
  1477                           
  1478                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  1479  00099E  9295               	bcf	3989,1,c	;volatile
  1480                           
  1481                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  1482  0009A0  9095               	bcf	3989,0,c	;volatile
  1483                           
  1484                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  1485  0009A2  9895               	bcf	3989,4,c	;volatile
  1486                           
  1487                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  1488  0009A4  9A95               	bcf	3989,5,c	;volatile
  1489                           
  1490                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  1491  0009A6  9C95               	bcf	3989,6,c	;volatile
  1492                           
  1493                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  1494  0009A8  9E95               	bcf	3989,7,c	;volatile
  1495                           
  1496                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  1497  0009AA  9483               	bcf	3971,2,c	;volatile
  1498                           
  1499                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  1500  0009AC  9283               	bcf	3971,1,c	;volatile
  1501                           
  1502                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  1503  0009AE  9083               	bcf	3971,0,c	;volatile
  1504                           
  1505                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  1506  0009B0  9E83               	bcf	3971,7,c	;volatile
  1507                           
  1508                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  1509  0009B2  9C83               	bcf	3971,6,c	;volatile
  1510                           
  1511                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  1512  0009B4  8A83               	bsf	3971,5,c	;volatile
  1513                           
  1514                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  1515  0009B6  8883               	bsf	3971,4,c	;volatile
  1516                           
  1517                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  1518  0009B8  0EEA               	movlw	234
  1519  0009BA  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1520  0009BC  0EC3               	movlw	195
  1521  0009BE                     u477:
  1522  0009BE  2EE8               	decfsz	wreg,f,c
  1523  0009C0  D7FE               	goto	u477
  1524  0009C2  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1525  0009C4  D7FC               	goto	u477
  1526  0009C6  F000               	nop	
  1527                           
  1528                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  1529  0009C8  8083               	bsf	3971,0,c	;volatile
  1530                           
  1531                           ;displayLCD.c: 117: Delay();
  1532  0009CA  EC57  F006         	call	_Delay	;wreg free
  1533                           
  1534                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  1535  0009CE  9083               	bcf	3971,0,c	;volatile
  1536                           
  1537                           ;displayLCD.c: 119: Delay();
  1538  0009D0  EC57  F006         	call	_Delay	;wreg free
  1539                           
  1540                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  1541  0009D4  0E4E               	movlw	78
  1542  0009D6  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1543  0009D8  0EEB               	movlw	235
  1544  0009DA                     u487:
  1545  0009DA  2EE8               	decfsz	wreg,f,c
  1546  0009DC  D7FE               	goto	u487
  1547  0009DE  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1548  0009E0  D7FC               	goto	u487
  1549  0009E2  F000               	nop	
  1550                           
  1551                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  1552  0009E4  8083               	bsf	3971,0,c	;volatile
  1553                           
  1554                           ;displayLCD.c: 128: Delay();
  1555  0009E6  EC57  F006         	call	_Delay	;wreg free
  1556                           
  1557                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  1558  0009EA  9083               	bcf	3971,0,c	;volatile
  1559                           
  1560                           ;displayLCD.c: 130: Delay();
  1561  0009EC  EC57  F006         	call	_Delay	;wreg free
  1562                           
  1563                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  1564  0009F0  0E4E               	movlw	78
  1565  0009F2  6E04               	movwf	??_ConfiguraLCD& (0+255),c
  1566  0009F4  0EEB               	movlw	235
  1567  0009F6                     u497:
  1568  0009F6  2EE8               	decfsz	wreg,f,c
  1569  0009F8  D7FE               	goto	u497
  1570  0009FA  2E04               	decfsz	??_ConfiguraLCD& (0+255),f,c
  1571  0009FC  D7FC               	goto	u497
  1572  0009FE  F000               	nop	
  1573                           
  1574                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  1575  000A00  8083               	bsf	3971,0,c	;volatile
  1576                           
  1577                           ;displayLCD.c: 139: Delay();
  1578  000A02  EC57  F006         	call	_Delay	;wreg free
  1579                           
  1580                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  1581  000A06  9083               	bcf	3971,0,c	;volatile
  1582                           
  1583                           ;displayLCD.c: 141: Delay();
  1584  000A08  EC57  F006         	call	_Delay	;wreg free
  1585                           
  1586                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  1587  000A0C  9E83               	bcf	3971,7,c	;volatile
  1588                           
  1589                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  1590  000A0E  9C83               	bcf	3971,6,c	;volatile
  1591                           
  1592                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  1593  000A10  8A83               	bsf	3971,5,c	;volatile
  1594                           
  1595                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  1596  000A12  9883               	bcf	3971,4,c	;volatile
  1597                           
  1598                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  1599  000A14  8083               	bsf	3971,0,c	;volatile
  1600                           
  1601                           ;displayLCD.c: 152: Delay();
  1602  000A16  EC57  F006         	call	_Delay	;wreg free
  1603                           
  1604                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  1605  000A1A  9083               	bcf	3971,0,c	;volatile
  1606                           
  1607                           ;displayLCD.c: 154: Delay();
  1608  000A1C  EC57  F006         	call	_Delay	;wreg free
  1609                           
  1610                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  1611  000A20  0E28               	movlw	40
  1612  000A22  EC1D  F005         	call	_EscreveComandoLCD
  1613                           
  1614                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  1615  000A26  0E06               	movlw	6
  1616  000A28  EC1D  F005         	call	_EscreveComandoLCD
  1617                           
  1618                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  1619  000A2C  0E0E               	movlw	14
  1620  000A2E  EC1D  F005         	call	_EscreveComandoLCD
  1621                           
  1622                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  1623  000A32  0E01               	movlw	1
  1624  000A34  EC1D  F005         	call	_EscreveComandoLCD
  1625  000A38  0012               	return	
  1626  000A3A                     __end_of_ConfiguraLCD:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           prodl	equ	0xFF3
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1l	equ	0xFE1
  1637                           indf2	equ	0xFDF
  1638                           postinc2	equ	0xFDE
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _EscreveComandoLCD *****************
  1644 ;; Defined at:
  1645 ;;		line 172 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  cmd             1    wreg     unsigned char 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  cmd             1    2[COMRAM] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;		None               void
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0
  1660 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1662 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1663 ;;Total ram usage:        1 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    1
  1666 ;; This function calls:
  1667 ;;		_Delay
  1668 ;; This function is called by:
  1669 ;;		_main
  1670 ;;		_ConfiguraLCD
  1671 ;;		_CriaCaractereLCD
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text10
  1676  000A3A                     __ptext10:
  1677                           	opt stack 0
  1678  000A3A                     _EscreveComandoLCD:
  1679                           	opt stack 29
  1680                           
  1681                           ;incstack = 0
  1682                           ;EscreveComandoLCD@cmd stored from wreg
  1683  000A3A  6E03               	movwf	EscreveComandoLCD@cmd,c
  1684                           
  1685                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  1686  000A3C  9483               	bcf	3971,2,c	;volatile
  1687                           
  1688                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  1689  000A3E  9283               	bcf	3971,1,c	;volatile
  1690                           
  1691                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  1692  000A40  9083               	bcf	3971,0,c	;volatile
  1693                           
  1694                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  1695  000A42  A803               	btfss	EscreveComandoLCD@cmd,4,c
  1696  000A44  D002               	goto	l92
  1697  000A46  8883               	bsf	3971,4,c	;volatile
  1698  000A48  D001               	goto	l889
  1699  000A4A                     l92:
  1700                           
  1701                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  1702  000A4A  9883               	bcf	3971,4,c	;volatile
  1703  000A4C                     l889:
  1704                           
  1705                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  1706  000A4C  AA03               	btfss	EscreveComandoLCD@cmd,5,c
  1707  000A4E  D002               	goto	l94
  1708  000A50  8A83               	bsf	3971,5,c	;volatile
  1709  000A52  D001               	goto	l893
  1710  000A54                     l94:
  1711                           
  1712                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  1713  000A54  9A83               	bcf	3971,5,c	;volatile
  1714  000A56                     l893:
  1715                           
  1716                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  1717  000A56  AC03               	btfss	EscreveComandoLCD@cmd,6,c
  1718  000A58  D002               	goto	l96
  1719  000A5A  8C83               	bsf	3971,6,c	;volatile
  1720  000A5C  D001               	goto	l897
  1721  000A5E                     l96:
  1722                           
  1723                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  1724  000A5E  9C83               	bcf	3971,6,c	;volatile
  1725  000A60                     l897:
  1726                           
  1727                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  1728  000A60  AE03               	btfss	EscreveComandoLCD@cmd,7,c
  1729  000A62  D002               	goto	l98
  1730  000A64  8E83               	bsf	3971,7,c	;volatile
  1731  000A66  D001               	goto	l99
  1732  000A68                     l98:
  1733                           
  1734                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  1735  000A68  9E83               	bcf	3971,7,c	;volatile
  1736  000A6A                     l99:
  1737                           
  1738                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  1739  000A6A  8083               	bsf	3971,0,c	;volatile
  1740                           
  1741                           ;displayLCD.c: 191: Delay();
  1742  000A6C  EC57  F006         	call	_Delay	;wreg free
  1743                           
  1744                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  1745  000A70  9083               	bcf	3971,0,c	;volatile
  1746                           
  1747                           ;displayLCD.c: 193: Delay();
  1748  000A72  EC57  F006         	call	_Delay	;wreg free
  1749                           
  1750                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  1751  000A76  A003               	btfss	EscreveComandoLCD@cmd,0,c
  1752  000A78  D002               	goto	l100
  1753  000A7A  8883               	bsf	3971,4,c	;volatile
  1754  000A7C  D001               	goto	l101
  1755  000A7E                     l100:
  1756                           
  1757                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  1758  000A7E  9883               	bcf	3971,4,c	;volatile
  1759  000A80                     l101:
  1760                           
  1761                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  1762  000A80  A203               	btfss	EscreveComandoLCD@cmd,1,c
  1763  000A82  D002               	goto	l102
  1764  000A84  8A83               	bsf	3971,5,c	;volatile
  1765  000A86  D001               	goto	l103
  1766  000A88                     l102:
  1767                           
  1768                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  1769  000A88  9A83               	bcf	3971,5,c	;volatile
  1770  000A8A                     l103:
  1771                           
  1772                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  1773  000A8A  A403               	btfss	EscreveComandoLCD@cmd,2,c
  1774  000A8C  D002               	goto	l104
  1775  000A8E  8C83               	bsf	3971,6,c	;volatile
  1776  000A90  D001               	goto	l105
  1777  000A92                     l104:
  1778                           
  1779                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  1780  000A92  9C83               	bcf	3971,6,c	;volatile
  1781  000A94                     l105:
  1782                           
  1783                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  1784  000A94  A603               	btfss	EscreveComandoLCD@cmd,3,c
  1785  000A96  D002               	goto	l106
  1786  000A98  8E83               	bsf	3971,7,c	;volatile
  1787  000A9A  D001               	goto	l107
  1788  000A9C                     l106:
  1789                           
  1790                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  1791  000A9C  9E83               	bcf	3971,7,c	;volatile
  1792  000A9E                     l107:
  1793                           
  1794                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  1795  000A9E  8083               	bsf	3971,0,c	;volatile
  1796                           
  1797                           ;displayLCD.c: 207: Delay();
  1798  000AA0  EC57  F006         	call	_Delay	;wreg free
  1799                           
  1800                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  1801  000AA4  9083               	bcf	3971,0,c	;volatile
  1802                           
  1803                           ;displayLCD.c: 209: Delay();
  1804  000AA6  EC57  F006         	call	_Delay	;wreg free
  1805                           
  1806                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  1807  000AAA  0403               	decf	EscreveComandoLCD@cmd,w,c
  1808  000AAC  B4D8               	btfsc	status,2,c
  1809  000AAE  D007               	goto	l925
  1810  000AB0  5003               	movf	EscreveComandoLCD@cmd,w,c
  1811  000AB2  0A02               	xorlw	2
  1812  000AB4  B4D8               	btfsc	status,2,c
  1813  000AB6  D003               	goto	l925
  1814  000AB8  5003               	movf	EscreveComandoLCD@cmd,w,c
  1815  000ABA  0A03               	xorlw	3
  1816  000ABC  B4D8               	btfsc	status,2,c
  1817  000ABE                     l925:
  1818                           
  1819                           ;displayLCD.c: 215: { Delay(); }
  1820  000ABE  EC57  F006         	call	_Delay	;wreg free
  1821  000AC2  0012               	return	
  1822  000AC4                     __end_of_EscreveComandoLCD:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           prodl	equ	0xFF3
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           indf2	equ	0xFDF
  1834                           postinc2	equ	0xFDE
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _Delay *****************
  1840 ;; Defined at:
  1841 ;;		line 54 in file "../../Biblioteca XC8 FATEC/displayLCD.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  Cnt2            1    1[COMRAM] unsigned char 
  1846 ;;  Cnt1            1    0[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;		None               void
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        2 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_ConfiguraLCD
  1866 ;;		_EscreveComandoLCD
  1867 ;;		_EnderecoCursor
  1868 ;;		_EscreveCaractereLCD
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text11
  1873  000CAE                     __ptext11:
  1874                           	opt stack 0
  1875  000CAE                     _Delay:
  1876                           	opt stack 28
  1877                           
  1878                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  1879                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  1880                           
  1881                           ;incstack = 0
  1882  000CAE  0E00               	movlw	0
  1883  000CB0  6E01               	movwf	Delay@Cnt1,c
  1884  000CB2  D00A               	goto	L1
  1885  000CB4                     l82:
  1886                           
  1887                           ;displayLCD.c: 59: {
  1888                           ;displayLCD.c: 60: __nop();
  1889  000CB4  F000               	nop	
  1890                           
  1891                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  1892  000CB6  0E00               	movlw	0
  1893  000CB8  6E02               	movwf	Delay@Cnt2,c
  1894  000CBA  D002               	goto	L2
  1895  000CBC                     l84:
  1896                           
  1897                           ;displayLCD.c: 62: {
  1898                           ;displayLCD.c: 63: __nop();
  1899  000CBC  F000               	nop	
  1900  000CBE  2A02               	incf	Delay@Cnt2,f,c
  1901  000CC0                     L2:
  1902  000CC0  0E1D               	movlw	29
  1903  000CC2  6402               	cpfsgt	Delay@Cnt2,c
  1904  000CC4  D7FB               	goto	l84
  1905  000CC6  2A01               	incf	Delay@Cnt1,f,c
  1906  000CC8                     L1:
  1907  000CC8  0E1D               	movlw	29
  1908  000CCA  6401               	cpfsgt	Delay@Cnt1,c
  1909  000CCC  D7F3               	goto	l82
  1910  000CCE  0012               	return	
  1911  000CD0                     __end_of_Delay:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodl	equ	0xFF3
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           indf2	equ	0xFDF
  1923                           postinc2	equ	0xFDE
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           prodl	equ	0xFF3
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1l	equ	0xFE1
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942                           	psect	rparam
  1943  0000                     tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           postinc2	equ	0xFDE
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    74
    Data        11
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    S427$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> EscreveInteiroLCD@texto(COMRAM[7]), main@Texto_1(COMRAM[17]), main@Texto_0(COMRAM[17]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(COMRAM[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_PosicaoCursorLCD
    _incrementa->_delay_ms
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0    1869
                                              6 COMRAM    34    34      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
                         _decrementa
                           _delay_ms
                         _incrementa
                              _saida
 ---------------------------------------------------------------------------------
 (1) _saida                                                2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _incrementa                                           2     0      2     273
                                              3 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _decrementa                                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PosicaoCursorLCD                                     3     2      1     386
                                              3 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (2) _EnderecoCursor                                       1     1      0     165
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _EscreveFraseRamLCD                                   2     0      2     339
                                              3 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveCaractereLCD                                  1     1      0     180
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     285
                                              3 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     225
                                              2 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   _decrementa
   _delay_ms
   _incrementa
     _delay_ms
   _saida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      20        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 02 17:32:00 2020

                           _i 0043                            l51 08E4                            l44 0C66  
                          l39 0CEC                            l82 0CB4                            l84 0CBC  
                          l92 0A4A                            l94 0A54                            l96 0A5E  
                          l98 0A68                            l99 0A6A                           l100 0A7E  
                         l101 0A80                           l102 0A88                           l103 0A8A  
                         l104 0A92                           l120 0B72                           l105 0A94  
                         l121 0B74                           l106 0A9C                           l122 0B7C  
                         l114 0B48                           l107 0A9E                           l123 0B7E  
                         l124 0B86                           l116 0B52                           l140 0C02  
                         l125 0B88                           l133 0BAA                           l150 0AF4  
                         l126 0B90                           l118 0B5C                           l151 0B08  
                         l143 0AD4                           l127 0B92                           l119 0B5E  
                         l152 0B0A                           l153 0B12                           l145 0ADE  
                         l154 0B14                           l155 0B1C                           l147 0AE8  
                         l156 0B1E                           l157 0B26                           l149 0AF2  
                         l158 0B28                           l925 0ABE                           l933 0B4A  
                         l937 0B54                           l881 0C9E                           l893 0A56  
                         l973 0AEA                           l965 0AD6                           l879 0C8E  
                         l897 0A60                           l889 0A4C                           l969 0AE0  
                         u360 0874                           u370 088C                           u467 0C94  
                         u477 09BE                           u487 09DA                           u497 09F6  
                 main@Texto_0 0007                   main@Texto_1 0018                           wreg 000FE8  
                        l1121 08EA                          l1133 0924                          l1141 0954  
                        l1081 0BE0                          l1073 0BC4                          l1145 095E  
                        l1129 091A                          l1091 0C6A                          l1155 0996  
                        l1077 0BD2                          l1069 0BB6                          l1085 0BE6  
                        l1095 0C7C                          STR_1 084B                          _LATB 000F8A  
                        _LATD 000F8C                          _main 0858                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        prodl 000FF3                          start 0000    __end_of_EscreveFraseRamLCD 0C8C  
                       ?_main 0001                         _TRISB 000F93                         _Delay 0CAE  
             __end_of_dpowers 0829                         _saida 0CFA                         _tempo 0041  
        EscreveComandoLCD@cmd 0003                         tablat 000FF5                         status 000FD8  
             __initialization 0C04                  __end_of_main 099C                        ??_main 0007  
        __end_of_ConfiguraLCD 0A3A                 __activetblptr 000002             _EscreveComandoLCD 0A3A  
                      ?_Delay 0001            ?_EscreveComandoLCD 0001                        _ADCON1 000FC1  
                      ?_saida 0001           ??_EscreveComandoLCD 0003              __end_of_delay_ms 0CAE  
           ?_PosicaoCursorLCD 0004  __size_of_EscreveCaractereLCD 0072            ??_PosicaoCursorLCD 0005  
                      clear_0 0C0A     __end_of_EscreveComandoLCD 0AC4                  __pdataCOMRAM 003A  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8       __size_of_EnderecoCursor 006A                    __accesstop 0060  
     __end_of__initialization 0C30                 __end_of_Delay 0CD0                __pcstackCOMRAM 0001  
               __end_of_saida 0D02                       ??_Delay 0001                       ??_saida 0003  
                  _decrementa 0C3A         __size_of_ConfiguraLCD 009E    __size_of_EscreveComandoLCD 008A  
          _EscreveFraseRamLCD 0C68                     ?_delay_ms 0001           ?_EscreveFraseRamLCD 0004  
                _ConfiguraLCD 099C                       __Hparam 0000                       __Lparam 0000  
                  _incrementa 0CD0          ??_EscreveFraseRamLCD 0006                  __psmallconst 0800  
                     __pcinit 0C04                       __ramtop 0800                       __ptext0 0858  
                     __ptext1 0CFA                       __ptext2 0CD0                       __ptext3 0C8C  
                     __ptext4 0C3A                       __ptext5 0BA0                       __ptext6 0B36  
                     __ptext7 0C68                       __ptext8 0AC4                       __ptext9 099C  
                     _dpowers 0801                    ??_delay_ms 0003                _EnderecoCursor 0B36  
                   Delay@Cnt1 0001                     Delay@Cnt2 0002           _EscreveCaractereLCD 0AC4  
        end_of_initialization 0C30                       ftoa@buf 0029                 __Lmediumconst 0000  
                 ?_decrementa 0001             __end_ofmain@F5414 083A             __end_ofmain@F5416 084B  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
        ?_EscreveCaractereLCD 0001   PosicaoCursorLCD@EnderecoLCD 0006                     _PORTDbits 000F83  
                   _PORTEbits 000F84        __end_of_EnderecoCursor 0BA0                     _TRISDbits 000F95  
   __size_of_PosicaoCursorLCD 0064                    _vetor_leds 0044                   ?_incrementa 0004  
       ??_EscreveCaractereLCD 0003                 __pidataCOMRAM 0CEE               ?_EnderecoCursor 0001  
         __size_of_decrementa 002E           start_initialization 0C04      EscreveFraseRamLCD@buffer 0004  
                 __pbssCOMRAM 0029           __end_of__stringdata 0856           __size_of_incrementa 001E  
           __size_of_delay_ms 0022        EscreveInteiroLCD@F5476 003A                   __smallconst 0800  
              __size_of_Delay 0022              _PosicaoCursorLCD 0BA0                __size_of_saida 0008  
      EnderecoCursor@endereco 0003                  ??_decrementa 0003             delay_ms@delaytime 0001  
     EscreveCaractereLCD@data 0003                     main@F5414 0829                     main@F5416 083A  
 __size_of_EscreveFraseRamLCD 0024                   __stringdata 084B            __end_of_decrementa 0C68  
                   copy_data0 0C24                      __Hrparam 0000                      __Lrparam 0000  
                ??_incrementa 0006              ??_EnderecoCursor 0003                      _delay_ms 0C8C  
                    __ptext10 0A3A                      __ptext11 0CAE            __end_of_incrementa 0CEE  
               __size_of_main 0144   __end_of_EscreveCaractereLCD 0B36                saida@sequencia 0001  
               ?_ConfiguraLCD 0001      __end_of_PosicaoCursorLCD 0C04        PosicaoCursorLCD@coluna 0004  
       PosicaoCursorLCD@linha 0005                ??_ConfiguraLCD 0004  
