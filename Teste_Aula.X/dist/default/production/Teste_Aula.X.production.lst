

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Aug 12 08:07:08 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  001622                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _rate
    46  001622  0001               	dw	1
    47  001624  0000               	dw	0
    48                           
    49                           ;initializer for _taxaBotao
    50  001626  2710               	dw	10000
    51  001628  0000               	dw	0
    52                           
    53                           ;initializer for _taxaRep
    54  00162A  2710               	dw	10000
    55  00162C  0000               	dw	0
    56                           
    57                           ;initializer for _teste
    58  00162E  0A                 	db	10
    59                           
    60                           	psect	idataBANK0
    61  00162F                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _RPM
    65  00162F  01F4               	dw	500
    66                           
    67                           ;initializer for _maux1
    68  001631  01                 	db	1
    69                           
    70                           	psect	idataBANK1
    71  00144E                     __pidataBANK1:
    72                           	opt stack 0
    73                           
    74                           ;initializer for main@F5466
    75  00144E  0118               	dw	280
    76  001450  0118               	dw	280
    77  001452  0118               	dw	280
    78  001454  0110               	dw	272
    79  001456  0122               	dw	290
    80  001458  012C               	dw	300
    81  00145A  012C               	dw	300
    82  00145C  012C               	dw	300
    83  00145E  012C               	dw	300
    84  001460  012C               	dw	300
    85  001462  0118               	dw	280
    86  001464  0118               	dw	280
    87  001466  0118               	dw	280
    88  001468  0138               	dw	312
    89  00146A  014C               	dw	332
    90  00146C  0156               	dw	342
    91  00146E  0156               	dw	342
    92  001470  0156               	dw	342
    93  001472  011A               	dw	282
    94  001474  011A               	dw	282
    95  001476  0118               	dw	280
    96  001478  0118               	dw	280
    97  00147A  014A               	dw	330
    98  00147C  019F               	dw	415
    99  00147E  019F               	dw	415
   100  001480  01AB               	dw	427
   101  001482  01B5               	dw	437
   102  001484  01B5               	dw	437
   103  001486  0142               	dw	322
   104  001488  0142               	dw	322
   105  00148A  011F               	dw	287
   106  00148C  012C               	dw	300
   107  00148E  0142               	dw	322
   108  001490  0165               	dw	357
   109  001492  0172               	dw	370
   110  001494  0172               	dw	370
   111  001496  01B5               	dw	437
   112  001498  01CC               	dw	460
   113  00149A  0142               	dw	322
   114  00149C  0142               	dw	322
   115                           
   116                           ;initializer for EscreveInteiroLCD@F5476
   117  00149E  30                 	db	48
   118  00149F  30                 	db	48
   119  0014A0  30                 	db	48
   120  0014A1  30                 	db	48
   121  0014A2  30                 	db	48
   122  0014A3  30                 	db	48
   123  0014A4  00                 	db	0
   124                           
   125                           ;initializer for _delay100
   126  0014A5  03E8               	dw	1000
   127  0014A7  0000               	dw	0
   128                           
   129                           	psect	smallconst
   130  000800                     __psmallconst:
   131                           	opt stack 0
   132  000800  00                 	db	0
   133  000801                     _dpowers:
   134                           	opt stack 0
   135  000801  0001               	dw	1
   136  000803  0000               	dw	0
   137  000805  000A               	dw	10
   138  000807  0000               	dw	0
   139  000809  0064               	dw	100
   140  00080B  0000               	dw	0
   141  00080D  03E8               	dw	1000
   142  00080F  0000               	dw	0
   143  000811  2710               	dw	10000
   144  000813  0000               	dw	0
   145  000815  86A0               	dw	34464
   146  000817  0001               	dw	1
   147  000819  4240               	dw	16960
   148  00081B  000F               	dw	15
   149  00081D  9680               	dw	38528
   150  00081F  0098               	dw	152
   151  000821  E100               	dw	57600
   152  000823  05F5               	dw	1525
   153  000825  CA00               	dw	51712
   154  000827  3B9A               	dw	15258
   155  000829                     __end_of_dpowers:
   156                           	opt stack 0
   157  000829                     main@F5457:
   158                           	opt stack 0
   159  000829  46                 	db	70
   160  00082A  41                 	db	65
   161  00082B  54                 	db	84
   162  00082C  45                 	db	69
   163  00082D  43                 	db	67
   164  00082E  20                 	db	32
   165  00082F  53                 	db	83
   166  000830  54                 	db	84
   167  000831  4F                 	db	79
   168  000832  20                 	db	32
   169  000833  20                 	db	32
   170  000834  41                 	db	65
   171  000835  4E                 	db	78
   172  000836  44                 	db	68
   173  000837  52                 	db	82
   174  000838  45                 	db	69
   175  000839  00                 	db	0
   176  00083A                     __end_ofmain@F5457:
   177                           	opt stack 0
   178  00083A                     main@F5459:
   179                           	opt stack 0
   180  00083A  4D                 	db	77
   181  00083B  61                 	db	97
   182  00083C  70                 	db	112
   183  00083D  61                 	db	97
   184  00083E  73                 	db	115
   185  00083F  20                 	db	32
   186  000840  65                 	db	101
   187  000841  20                 	db	32
   188  000842  54                 	db	84
   189  000843  61                 	db	97
   190  000844  62                 	db	98
   191  000845  65                 	db	101
   192  000846  6C                 	db	108
   193  000847  61                 	db	97
   194  000848  73                 	db	115
   195  000849  20                 	db	32
   196  00084A  00                 	db	0
   197  00084B                     __end_ofmain@F5459:
   198                           	opt stack 0
   199  00084B                     main@F5461:
   200                           	opt stack 0
   201  00084B  52                 	db	82
   202  00084C  3D                 	db	61
   203  00084D  20                 	db	32
   204  00084E  20                 	db	32
   205  00084F  20                 	db	32
   206  000850  20                 	db	32
   207  000851  20                 	db	32
   208  000852  20                 	db	32
   209  000853  20                 	db	32
   210  000854  20                 	db	32
   211  000855  54                 	db	84
   212  000856  3D                 	db	61
   213  000857  20                 	db	32
   214  000858  20                 	db	32
   215  000859  20                 	db	32
   216  00085A  20                 	db	32
   217  00085B  00                 	db	0
   218  00085C                     __end_ofmain@F5461:
   219                           	opt stack 0
   220  00085C                     main@F5463:
   221                           	opt stack 0
   222  00085C  41                 	db	65
   223  00085D  56                 	db	86
   224  00085E  41                 	db	65
   225  00085F  4E                 	db	78
   226  000860  43                 	db	67
   227  000861  4F                 	db	79
   228  000862  20                 	db	32
   229  000863  3D                 	db	61
   230  000864  20                 	db	32
   231  000865  20                 	db	32
   232  000866  20                 	db	32
   233  000867  20                 	db	32
   234  000868  20                 	db	32
   235  000869  20                 	db	32
   236  00086A  20                 	db	32
   237  00086B  20                 	db	32
   238  00086C  00                 	db	0
   239  00086D                     __end_ofmain@F5463:
   240                           	opt stack 0
   241  0000                     _ADCON1	set	4033
   242  0000                     _INTCON2bits	set	4081
   243  0000                     _INTCONbits	set	4082
   244  0000                     _LATB	set	3978
   245  0000                     _LATD	set	3980
   246  0000                     _PORTDbits	set	3971
   247  0000                     _PORTEbits	set	3972
   248  0000                     _RCONbits	set	4048
   249  0000                     _T0CONbits	set	4053
   250  0000                     _TMR0L	set	4054
   251  0000                     _TRISB	set	3987
   252  0000                     _TRISDbits	set	3989
   253  0000                     _TRISE	set	3990
   254  00086D                     __stringdata:
   255                           	opt stack 0
   256  00086D  25                 	db	37
   257  00086E  6C                 	db	108	;'l'
   258  00086F  75                 	db	117	;'u'
   259  000870  2E                 	db	46
   260  000871  25                 	db	37
   261  000872  36                 	db	54	;'6'
   262  000873  2E                 	db	46
   263  000874  36                 	db	54	;'6'
   264  000875  6C                 	db	108	;'l'
   265  000876  75                 	db	117	;'u'
   266  000877  00                 	db	0
   267  000878                     __end_of__stringdata:
   268                           	opt stack 0
   269  000878  00                 	db	0	; dummy byte at the end
   270  0000                     
   271                           ; #config settings
   272                           
   273                           	psect	cinit
   274  00116C                     __pcinit:
   275                           	opt stack 0
   276  00116C                     start_initialization:
   277                           	opt stack 0
   278  00116C                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Clear objects allocated to BANK1 (17 bytes)
   282  00116C  EE01  F0EF         	lfsr	0,__pbssBANK1
   283  001170  0E11               	movlw	17
   284  001172                     clear_0:
   285  001172  6AEE               	clrf	postinc0,c
   286  001174  06E8               	decf	wreg,f,c
   287  001176  E1FD               	bnz	clear_0
   288                           
   289                           ; Clear objects allocated to BANK0 (9 bytes)
   290  001178  EE00  F078         	lfsr	0,__pbssBANK0
   291  00117C  0E09               	movlw	9
   292  00117E                     clear_1:
   293  00117E  6AEE               	clrf	postinc0,c
   294  001180  06E8               	decf	wreg,f,c
   295  001182  E1FD               	bnz	clear_1
   296                           
   297                           ; Clear objects allocated to COMRAM (30 bytes)
   298  001184  EE00  F023         	lfsr	0,__pbssCOMRAM
   299  001188  0E1E               	movlw	30
   300  00118A                     clear_2:
   301  00118A  6AEE               	clrf	postinc0,c
   302  00118C  06E8               	decf	wreg,f,c
   303  00118E  E1FD               	bnz	clear_2
   304                           
   305                           ; Initialize objects allocated to BANK1 (91 bytes)
   306                           ; load TBLPTR registers with __pidataBANK1
   307  001190  0E4E               	movlw	low __pidataBANK1
   308  001192  6EF6               	movwf	tblptrl,c
   309  001194  0E14               	movlw	high __pidataBANK1
   310  001196  6EF7               	movwf	tblptrh,c
   311  001198  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   312  00119A  6EF8               	movwf	tblptru,c
   313  00119C  EE01  F094         	lfsr	0,__pdataBANK1
   314  0011A0  EE10 F05B          	lfsr	1,91
   315  0011A4                     copy_data0:
   316  0011A4  0009               	tblrd		*+
   317  0011A6  CFF5 FFEE          	movff	tablat,postinc0
   318  0011AA  50E5               	movf	postdec1,w,c
   319  0011AC  50E1               	movf	fsr1l,w,c
   320  0011AE  E1FA               	bnz	copy_data0
   321                           
   322                           ; Initialize objects allocated to BANK0 (3 bytes)
   323                           ; load TBLPTR registers with __pidataBANK0
   324  0011B0  0E2F               	movlw	low __pidataBANK0
   325  0011B2  6EF6               	movwf	tblptrl,c
   326  0011B4  0E16               	movlw	high __pidataBANK0
   327  0011B6  6EF7               	movwf	tblptrh,c
   328  0011B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   329  0011BA  6EF8               	movwf	tblptru,c
   330  0011BC  0009               	tblrd		*+	;fetch initializer
   331  0011BE  CFF5 F081          	movff	tablat,__pdataBANK0
   332  0011C2  0009               	tblrd		*+	;fetch initializer
   333  0011C4  CFF5 F082          	movff	tablat,__pdataBANK0+1
   334  0011C8  0009               	tblrd		*+	;fetch initializer
   335  0011CA  CFF5 F083          	movff	tablat,__pdataBANK0+2
   336                           
   337                           ; Initialize objects allocated to COMRAM (13 bytes)
   338                           ; load TBLPTR registers with __pidataCOMRAM
   339  0011CE  0E22               	movlw	low __pidataCOMRAM
   340  0011D0  6EF6               	movwf	tblptrl,c
   341  0011D2  0E16               	movlw	high __pidataCOMRAM
   342  0011D4  6EF7               	movwf	tblptrh,c
   343  0011D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   344  0011D8  6EF8               	movwf	tblptru,c
   345  0011DA  EE00  F041         	lfsr	0,__pdataCOMRAM
   346  0011DE  EE10 F00D          	lfsr	1,13
   347  0011E2                     copy_data1:
   348  0011E2  0009               	tblrd		*+
   349  0011E4  CFF5 FFEE          	movff	tablat,postinc0
   350  0011E8  50E5               	movf	postdec1,w,c
   351  0011EA  50E1               	movf	fsr1l,w,c
   352  0011EC  E1FA               	bnz	copy_data1
   353  0011EE                     end_of_initialization:
   354                           	opt stack 0
   355  0011EE                     __end_of__initialization:
   356                           	opt stack 0
   357  0011EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   358  0011F0  6EF8               	movwf	tblptru,c
   359  0011F2  0100               	movlb	0
   360  0011F4  EF3D  F004         	goto	_main	;jump to C main() function
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssCOMRAM
   371  000023                     __pbssCOMRAM:
   372                           	opt stack 0
   373  000023                     _tickCount:
   374                           	opt stack 0
   375  000023                     	ds	4
   376  000027                     _tickTime:
   377                           	opt stack 0
   378  000027                     	ds	4
   379  00002B                     _T_aux:
   380                           	opt stack 0
   381  00002B                     	ds	2
   382  00002D                     _decremento:
   383                           	opt stack 0
   384  00002D                     	ds	2
   385  00002F                     _dwellTime:
   386                           	opt stack 0
   387  00002F                     	ds	2
   388  000031                     _incremento:
   389                           	opt stack 0
   390  000031                     	ds	2
   391  000033                     _linha:
   392                           	opt stack 0
   393  000033                     	ds	2
   394  000035                     _start:
   395                           	opt stack 0
   396  000035                     	ds	2
   397  000037                     _borda:
   398                           	opt stack 0
   399  000037                     	ds	1
   400  000038                     _run:
   401                           	opt stack 0
   402  000038                     	ds	1
   403  000039                     _taxa_bt1:
   404                           	opt stack 0
   405  000039                     	ds	4
   406  00003D                     _taxa_bt2:
   407                           	opt stack 0
   408  00003D                     	ds	4
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	dataCOMRAM
   419  000041                     __pdataCOMRAM:
   420                           	opt stack 0
   421  000041                     _rate:
   422                           	opt stack 0
   423  000041                     	ds	4
   424  000045                     _taxaBotao:
   425                           	opt stack 0
   426  000045                     	ds	4
   427  000049                     _taxaRep:
   428                           	opt stack 0
   429  000049                     	ds	4
   430  00004D                     _teste:
   431                           	opt stack 0
   432  00004D                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	bssBANK0
   443  000078                     __pbssBANK0:
   444                           	opt stack 0
   445  000078                     _coluna:
   446                           	opt stack 0
   447  000078                     	ds	2
   448  00007A                     _R_aux:
   449                           	opt stack 0
   450  00007A                     	ds	4
   451  00007E                     _TPS:
   452                           	opt stack 0
   453  00007E                     	ds	2
   454  000080                     _maux2:
   455                           	opt stack 0
   456  000080                     	ds	1
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	dataBANK0
   467  000081                     __pdataBANK0:
   468                           	opt stack 0
   469  000081                     _RPM:
   470                           	opt stack 0
   471  000081                     	ds	2
   472  000083                     _maux1:
   473                           	opt stack 0
   474  000083                     	ds	1
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	bssBANK1
   485  0001EF                     __pbssBANK1:
   486                           	opt stack 0
   487  0001EF                     ftoa@buf:
   488                           	opt stack 0
   489  0001EF                     	ds	17
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	dataBANK1
   500  000194                     __pdataBANK1:
   501                           	opt stack 0
   502  000194                     main@F5466:
   503                           	opt stack 0
   504  000194                     	ds	80
   505  0001E4                     EscreveInteiroLCD@F5476:
   506                           	opt stack 0
   507  0001E4                     	ds	7
   508  0001EB                     _delay100:
   509                           	opt stack 0
   510  0001EB                     	ds	4
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	cstackBANK1
   521  000100                     __pcstackBANK1:
   522                           	opt stack 0
   523  000100                     main@tabela:
   524                           	opt stack 0
   525                           
   526                           ; 80 bytes @ 0x0
   527  000100                     	ds	80
   528  000150                     main@Texto_0:
   529                           	opt stack 0
   530                           
   531                           ; 17 bytes @ 0x50
   532  000150                     	ds	17
   533  000161                     main@Texto_1:
   534                           	opt stack 0
   535                           
   536                           ; 17 bytes @ 0x61
   537  000161                     	ds	17
   538  000172                     main@Texto_2:
   539                           	opt stack 0
   540                           
   541                           ; 17 bytes @ 0x72
   542  000172                     	ds	17
   543  000183                     main@Texto_3:
   544                           	opt stack 0
   545                           
   546                           ; 17 bytes @ 0x83
   547  000183                     	ds	17
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackBANK0
   558  000060                     __pcstackBANK0:
   559                           	opt stack 0
   560  000060                     ___lldiv@quotient:
   561                           	opt stack 0
   562  000060                     word_ascii@ASCII:
   563                           	opt stack 0
   564                           
   565                           ; 10 bytes @ 0x0
   566  000060                     	ds	4
   567  000064                     ___lldiv@counter:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x4
   571  000064                     	ds	6
   572  00006A                     word_ascii@i:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0xA
   576  00006A                     	ds	1
   577  00006B                     word_ascii@j:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0xB
   581  00006B                     	ds	1
   582  00006C                     ??_main:
   583                           
   584                           ; 0 bytes @ 0xC
   585  00006C                     	ds	12
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           	psect	cstackCOMRAM
   596  000001                     __pcstackCOMRAM:
   597                           	opt stack 0
   598  000001                     ??_Interrupcoes:
   599  000001                     
   600                           ; 0 bytes @ 0x0
   601  000001                     	ds	14
   602  00000F                     ?___wmul:
   603                           	opt stack 0
   604  00000F                     ?___lwdiv:
   605                           	opt stack 0
   606  00000F                     ?___lwmod:
   607                           	opt stack 0
   608  00000F                     ?___lmul:
   609                           	opt stack 0
   610  00000F                     Delay@Cnt1:
   611                           	opt stack 0
   612  00000F                     delay_ms@delaytime:
   613                           	opt stack 0
   614  00000F                     botao@valor:
   615                           	opt stack 0
   616  00000F                     ___wmul@multiplier:
   617                           	opt stack 0
   618  00000F                     ___lwdiv@dividend:
   619                           	opt stack 0
   620  00000F                     ___lwmod@dividend:
   621                           	opt stack 0
   622  00000F                     ___lmul@multiplier:
   623                           	opt stack 0
   624                           
   625                           ; 4 bytes @ 0xE
   626  00000F                     	ds	1
   627  000010                     Delay@Cnt2:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0xF
   631  000010                     	ds	1
   632  000011                     ??_delay_ms:
   633  000011                     EscreveComandoLCD@cmd:
   634                           	opt stack 0
   635  000011                     EnderecoCursor@endereco:
   636                           	opt stack 0
   637  000011                     EscreveCaractereLCD@data:
   638                           	opt stack 0
   639  000011                     botao@inc_dec:
   640                           	opt stack 0
   641  000011                     ___wmul@multiplicand:
   642                           	opt stack 0
   643  000011                     ___lwdiv@divisor:
   644                           	opt stack 0
   645  000011                     ___lwmod@divisor:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x10
   649  000011                     	ds	1
   650  000012                     ??_ConfiguraLCD:
   651  000012                     PosicaoCursorLCD@coluna:
   652                           	opt stack 0
   653  000012                     EscreveFraseRamLCD@buffer:
   654                           	opt stack 0
   655  000012                     botao@mem_aux:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x11
   659  000012                     	ds	1
   660  000013                     PosicaoCursorLCD@linha:
   661                           	opt stack 0
   662  000013                     ___lwdiv@counter:
   663                           	opt stack 0
   664  000013                     ___lwmod@counter:
   665                           	opt stack 0
   666  000013                     ___wmul@product:
   667                           	opt stack 0
   668  000013                     ___lmul@multiplicand:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x12
   672  000013                     	ds	1
   673  000014                     PosicaoCursorLCD@EnderecoLCD:
   674                           	opt stack 0
   675  000014                     botao@lmin:
   676                           	opt stack 0
   677  000014                     ___lwdiv@quotient:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x13
   681  000014                     	ds	2
   682  000016                     botao@lmax:
   683                           	opt stack 0
   684  000016                     byte_ascii@A:
   685                           	opt stack 0
   686  000016                     word_ascii@A:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x15
   690  000016                     	ds	1
   691  000017                     ___lmul@product:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x16
   695  000017                     	ds	1
   696  000018                     byte_ascii@linha:
   697                           	opt stack 0
   698  000018                     word_ascii@linha:
   699                           	opt stack 0
   700  000018                     botao@taxa:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x17
   704  000018                     	ds	1
   705  000019                     byte_ascii@coluna:
   706                           	opt stack 0
   707  000019                     word_ascii@coluna:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x18
   711  000019                     	ds	1
   712  00001A                     ??_botao:
   713  00001A                     byte_ascii@pontoDecimal:
   714                           	opt stack 0
   715  00001A                     word_ascii@pontoDecimal:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x19
   719  00001A                     	ds	1
   720  00001B                     ??_word_ascii:
   721  00001B                     ?___lldiv:
   722                           	opt stack 0
   723  00001B                     byte_ascii@ASCII:
   724                           	opt stack 0
   725  00001B                     ___lldiv@dividend:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x1A
   729  00001B                     	ds	3
   730  00001E                     botao@bt:
   731                           	opt stack 0
   732  00001E                     byte_ascii@i:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x1D
   736  00001E                     	ds	1
   737  00001F                     byte_ascii@j:
   738                           	opt stack 0
   739  00001F                     ___lldiv@divisor:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x1E
   743  00001F                     	ds	4
   744  000023                     tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           postdec1	equ	0xFE5
   751                           fsr1l	equ	0xFE1
   752                           
   753                           ; 0 bytes @ 0x22
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 222 in file "Mapas.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  tabela         80    0[BANK1 ] unsigned int [10][4]
   764 ;;  Texto_3        17  131[BANK1 ] const unsigned char [17]
   765 ;;  Texto_2        17  114[BANK1 ] const unsigned char [17]
   766 ;;  Texto_1        17   97[BANK1 ] const unsigned char [17]
   767 ;;  Texto_0        17   80[BANK1 ] const unsigned char [17]
   768 ;; Return value:  Size  Location     Type
   769 ;;		None               void
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         0       0       0       0       0       0       0       0       0
   778 ;;      Locals:         0       0     148       0       0       0       0       0       0
   779 ;;      Temps:          0      12       0       0       0       0       0       0       0
   780 ;;      Totals:         0      12     148       0       0       0       0       0       0
   781 ;;Total ram usage:      160 bytes
   782 ;; Hardware stack levels required when called:    5
   783 ;; This function calls:
   784 ;;		_ConfiguraLCD
   785 ;;		_EscreveComandoLCD
   786 ;;		_EscreveFraseRamLCD
   787 ;;		_PosicaoCursorLCD
   788 ;;		___lldiv
   789 ;;		___lmul
   790 ;;		___lwdiv
   791 ;;		___wmul
   792 ;;		_botao
   793 ;;		_byte_ascii
   794 ;;		_delay_ms
   795 ;;		_word_ascii
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text0
   802  00087A                     __ptext0:
   803                           	opt stack 0
   804  00087A                     _main:
   805                           	opt stack 26
   806                           
   807                           ;Mapas.c: 225: ADCON1 = 0x0D;
   808                           
   809                           ;incstack = 0
   810  00087A  0E0D               	movlw	13
   811  00087C  6EC1               	movwf	4033,c	;volatile
   812                           
   813                           ;Mapas.c: 226: LATB = 0xFF;
   814  00087E  688A               	setf	3978,c	;volatile
   815                           
   816                           ;Mapas.c: 227: LATD = 0X00;
   817  000880  0E00               	movlw	0
   818  000882  6E8C               	movwf	3980,c	;volatile
   819                           
   820                           ;Mapas.c: 228: TRISB = 0x03;
   821  000884  0E03               	movlw	3
   822  000886  6E93               	movwf	3987,c	;volatile
   823                           
   824                           ;Mapas.c: 229: TRISE = 0xFF;
   825  000888  6896               	setf	3990,c	;volatile
   826                           
   827                           ;Mapas.c: 233: const unsigned char Texto_0[] = "FATEC STO  ANDRE";
   828  00088A  0E29               	movlw	low main@F5457
   829  00088C  6EF6               	movwf	tblptrl,c
   830  00088E                     	if	1	;There is more than 1 active tblptr byte
   831  00088E  0E08               	movlw	high main@F5457
   832  000890  6EF7               	movwf	tblptrh,c
   833  000892                     	endif
   834  000892                     	if	0	;There are less than 3 active tblptr bytes
   835  000892                     	endif
   836  000892  EE21  F050         	lfsr	2,main@Texto_0
   837  000896  0E11               	movlw	17
   838  000898                     u3080:
   839  000898  0009               	tblrd		*+
   840  00089A  CFF5 FFDE          	movff	tablat,postinc2
   841  00089E  2EE8               	decfsz	wreg,f,c
   842  0008A0  D7FB               	bra	u3080
   843                           
   844                           ;Mapas.c: 234: const unsigned char Texto_1[] = "Mapas e Tabelas ";
   845  0008A2  0E3A               	movlw	low main@F5459
   846  0008A4  6EF6               	movwf	tblptrl,c
   847  0008A6                     	if	1	;There is more than 1 active tblptr byte
   848  0008A6  0E08               	movlw	high main@F5459
   849  0008A8  6EF7               	movwf	tblptrh,c
   850  0008AA                     	endif
   851  0008AA                     	if	0	;There are less than 3 active tblptr bytes
   852  0008AA                     	endif
   853  0008AA  EE21  F061         	lfsr	2,main@Texto_1
   854  0008AE  0E11               	movlw	17
   855  0008B0                     u3090:
   856  0008B0  0009               	tblrd		*+
   857  0008B2  CFF5 FFDE          	movff	tablat,postinc2
   858  0008B6  2EE8               	decfsz	wreg,f,c
   859  0008B8  D7FB               	bra	u3090
   860                           
   861                           ;Mapas.c: 235: const unsigned char Texto_2[] = "R=        T=    ";
   862  0008BA  0E4B               	movlw	low main@F5461
   863  0008BC  6EF6               	movwf	tblptrl,c
   864  0008BE                     	if	1	;There is more than 1 active tblptr byte
   865  0008BE  0E08               	movlw	high main@F5461
   866  0008C0  6EF7               	movwf	tblptrh,c
   867  0008C2                     	endif
   868  0008C2                     	if	0	;There are less than 3 active tblptr bytes
   869  0008C2                     	endif
   870  0008C2  EE21  F072         	lfsr	2,main@Texto_2
   871  0008C6  0E11               	movlw	17
   872  0008C8                     u3100:
   873  0008C8  0009               	tblrd		*+
   874  0008CA  CFF5 FFDE          	movff	tablat,postinc2
   875  0008CE  2EE8               	decfsz	wreg,f,c
   876  0008D0  D7FB               	bra	u3100
   877                           
   878                           ;Mapas.c: 236: const unsigned char Texto_3[] = "AVANCO =        ";
   879  0008D2  0E5C               	movlw	low main@F5463
   880  0008D4  6EF6               	movwf	tblptrl,c
   881  0008D6                     	if	1	;There is more than 1 active tblptr byte
   882  0008D6  0E08               	movlw	high main@F5463
   883  0008D8  6EF7               	movwf	tblptrh,c
   884  0008DA                     	endif
   885  0008DA                     	if	0	;There are less than 3 active tblptr bytes
   886  0008DA                     	endif
   887  0008DA  EE21  F083         	lfsr	2,main@Texto_3
   888  0008DE  0E11               	movlw	17
   889  0008E0                     u3110:
   890  0008E0  0009               	tblrd		*+
   891  0008E2  CFF5 FFDE          	movff	tablat,postinc2
   892  0008E6  2EE8               	decfsz	wreg,f,c
   893  0008E8  D7FB               	bra	u3110
   894                           
   895                           ;Mapas.c: 238: unsigned int tabela[4][10] = {
   896                           ;Mapas.c: 239: {280, 280, 280, 272, 290, 300, 300, 300, 300, 300},
   897                           ;Mapas.c: 240: {280, 280, 280, 312, 332, 342, 342, 342, 282, 282},
   898                           ;Mapas.c: 241: {280, 280, 330, 415, 415, 427, 437, 437, 322, 322},
   899                           ;Mapas.c: 242: {287, 300, 322, 357, 370, 370, 437, 460, 322, 322}
   900                           ;Mapas.c: 243: };
   901  0008EA  EE21  F094         	lfsr	2,main@F5466
   902  0008EE  EE11  F000         	lfsr	1,main@tabela
   903  0008F2  0E50               	movlw	80
   904  0008F4                     u3121:
   905  0008F4  CFDE FFE6          	movff	postinc2,postinc1
   906  0008F8  2EE8               	decfsz	wreg,f,c
   907  0008FA  D7FC               	goto	u3121
   908                           
   909                           ;Mapas.c: 248: T0CONbits.TMR0ON = 1;
   910  0008FC  8ED5               	bsf	4053,7,c	;volatile
   911                           
   912                           ;Mapas.c: 249: T0CONbits.T08BIT = 1;
   913  0008FE  8CD5               	bsf	4053,6,c	;volatile
   914                           
   915                           ;Mapas.c: 250: T0CONbits.T0CS = 0;
   916  000900  9AD5               	bcf	4053,5,c	;volatile
   917                           
   918                           ;Mapas.c: 251: T0CONbits.T0SE = 0;
   919  000902  98D5               	bcf	4053,4,c	;volatile
   920                           
   921                           ;Mapas.c: 252: T0CONbits.PSA = 0;
   922  000904  96D5               	bcf	4053,3,c	;volatile
   923                           
   924                           ;Mapas.c: 253: T0CONbits.T0PS = 0b010;
   925  000906  50D5               	movf	4053,w,c	;volatile
   926  000908  0BF8               	andlw	-8
   927  00090A  0902               	iorlw	2
   928  00090C  6ED5               	movwf	4053,c	;volatile
   929                           
   930                           ;Mapas.c: 257: TMR0L = 107;
   931  00090E  0E6B               	movlw	107
   932  000910  6ED6               	movwf	4054,c	;volatile
   933                           
   934                           ;Mapas.c: 261: INTCONbits.TMR0IE = 1;
   935  000912  8AF2               	bsf	intcon,5,c	;volatile
   936                           
   937                           ;Mapas.c: 265: INTCON2bits.TMR0IP = 1;
   938  000914  84F1               	bsf	intcon2,2,c	;volatile
   939                           
   940                           ;Mapas.c: 266: RCONbits.IPEN = 0;
   941  000916  9ED0               	bcf	4048,7,c	;volatile
   942                           
   943                           ;Mapas.c: 267: INTCONbits.PEIE_GIEL = 0;
   944  000918  9CF2               	bcf	intcon,6,c	;volatile
   945                           
   946                           ;Mapas.c: 268: INTCONbits.GIE_GIEH = 1;
   947  00091A  8EF2               	bsf	intcon,7,c	;volatile
   948                           
   949                           ;Mapas.c: 273: ConfiguraLCD();
   950  00091C  EC19  F008         	call	_ConfiguraLCD	;wreg free
   951                           
   952                           ;Mapas.c: 274: delay_ms(2);
   953  000920  0E00               	movlw	0
   954  000922  6E10               	movwf	delay_ms@delaytime+1,c
   955  000924  0E02               	movlw	2
   956  000926  6E0F               	movwf	delay_ms@delaytime,c
   957  000928  ECEF  F00A         	call	_delay_ms	;wreg free
   958                           
   959                           ;Mapas.c: 275: PosicaoCursorLCD(1,1);
   960  00092C  0E01               	movlw	1
   961  00092E  6E12               	movwf	PosicaoCursorLCD@coluna,c
   962  000930  0E01               	movlw	1
   963  000932  ECF5  F009         	call	_PosicaoCursorLCD
   964                           
   965                           ;Mapas.c: 276: EscreveFraseRamLCD(Texto_0);
   966  000936  0101               	movlb	1	; () banked
   967  000938  0E01               	movlw	high main@Texto_0
   968  00093A  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
   969  00093C  0101               	movlb	1	; () banked
   970  00093E  0E50               	movlw	low main@Texto_0
   971  000940  6E12               	movwf	EscreveFraseRamLCD@buffer,c
   972  000942  ECDD  F00A         	call	_EscreveFraseRamLCD	;wreg free
   973                           
   974                           ;Mapas.c: 277: PosicaoCursorLCD(2,1);
   975  000946  0E01               	movlw	1
   976  000948  6E12               	movwf	PosicaoCursorLCD@coluna,c
   977  00094A  0E02               	movlw	2
   978  00094C  ECF5  F009         	call	_PosicaoCursorLCD
   979                           
   980                           ;Mapas.c: 278: EscreveFraseRamLCD(Texto_1);
   981  000950  0101               	movlb	1	; () banked
   982  000952  0E01               	movlw	high main@Texto_1
   983  000954  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
   984  000956  0101               	movlb	1	; () banked
   985  000958  0E61               	movlw	low main@Texto_1
   986  00095A  6E12               	movwf	EscreveFraseRamLCD@buffer,c
   987  00095C  ECDD  F00A         	call	_EscreveFraseRamLCD	;wreg free
   988                           
   989                           ;Mapas.c: 279: EscreveComandoLCD(0b00001100);
   990  000960  0E0C               	movlw	12
   991  000962  EC42  F009         	call	_EscreveComandoLCD
   992                           
   993                           ;Mapas.c: 280: delay_ms(3000);
   994  000966  0E0B               	movlw	11
   995  000968  6E10               	movwf	delay_ms@delaytime+1,c
   996  00096A  0EB8               	movlw	184
   997  00096C  6E0F               	movwf	delay_ms@delaytime,c
   998  00096E  ECEF  F00A         	call	_delay_ms	;wreg free
   999                           
  1000                           ;Mapas.c: 284: PosicaoCursorLCD(1,1);
  1001  000972  0E01               	movlw	1
  1002  000974  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1003  000976  0E01               	movlw	1
  1004  000978  ECF5  F009         	call	_PosicaoCursorLCD
  1005                           
  1006                           ;Mapas.c: 285: EscreveFraseRamLCD(Texto_2);
  1007  00097C  0101               	movlb	1	; () banked
  1008  00097E  0E01               	movlw	high main@Texto_2
  1009  000980  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1010  000982  0101               	movlb	1	; () banked
  1011  000984  0E72               	movlw	low main@Texto_2
  1012  000986  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1013  000988  ECDD  F00A         	call	_EscreveFraseRamLCD	;wreg free
  1014                           
  1015                           ;Mapas.c: 286: PosicaoCursorLCD(2,1);
  1016  00098C  0E01               	movlw	1
  1017  00098E  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1018  000990  0E02               	movlw	2
  1019  000992  ECF5  F009         	call	_PosicaoCursorLCD
  1020                           
  1021                           ;Mapas.c: 287: EscreveFraseRamLCD(Texto_3);
  1022  000996  0101               	movlb	1	; () banked
  1023  000998  0E01               	movlw	high main@Texto_3
  1024  00099A  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1025  00099C  0101               	movlb	1	; () banked
  1026  00099E  0E83               	movlw	low main@Texto_3
  1027  0009A0  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1028  0009A2  ECDD  F00A         	call	_EscreveFraseRamLCD	;wreg free
  1029  0009A6                     l3118:
  1030                           
  1031                           ;Mapas.c: 291: {
  1032                           ;Mapas.c: 292: if(PORTEbits.RE2 == 1)
  1033  0009A6  A484               	btfss	3972,2,c	;volatile
  1034  0009A8  D04F               	goto	l3124
  1035                           
  1036                           ;Mapas.c: 293: {
  1037                           ;Mapas.c: 294: botao(PORTEbits.RE0, &RPM, 0, &maux1, 500, 4000, &taxa_bt1);
  1038  0009AA  0100               	movlb	0	; () banked
  1039  0009AC  0E00               	movlw	high _RPM
  1040  0009AE  6E10               	movwf	botao@valor+1,c
  1041  0009B0  0100               	movlb	0	; () banked
  1042  0009B2  0E81               	movlw	low _RPM
  1043  0009B4  6E0F               	movwf	botao@valor,c
  1044  0009B6  0E00               	movlw	0
  1045  0009B8  6E11               	movwf	botao@inc_dec,c
  1046  0009BA  0100               	movlb	0	; () banked
  1047  0009BC  0E00               	movlw	high _maux1
  1048  0009BE  6E13               	movwf	botao@mem_aux+1,c
  1049  0009C0  0100               	movlb	0	; () banked
  1050  0009C2  0E83               	movlw	low _maux1
  1051  0009C4  6E12               	movwf	botao@mem_aux,c
  1052  0009C6  0E01               	movlw	1
  1053  0009C8  6E15               	movwf	botao@lmin+1,c
  1054  0009CA  0EF4               	movlw	244
  1055  0009CC  6E14               	movwf	botao@lmin,c
  1056  0009CE  0E0F               	movlw	15
  1057  0009D0  6E17               	movwf	botao@lmax+1,c
  1058  0009D2  0EA0               	movlw	160
  1059  0009D4  6E16               	movwf	botao@lmax,c
  1060  0009D6  0E00               	movlw	high _taxa_bt1
  1061  0009D8  6E19               	movwf	botao@taxa+1,c
  1062  0009DA  0E39               	movlw	low _taxa_bt1
  1063  0009DC  6E18               	movwf	botao@taxa,c
  1064  0009DE  A084               	btfss	3972,0,c	;volatile
  1065  0009E0  D002               	goto	u3140
  1066  0009E2  0E01               	movlw	1
  1067  0009E4  D001               	goto	u3146
  1068  0009E6                     u3140:
  1069  0009E6  0E00               	movlw	0
  1070  0009E8                     u3146:
  1071  0009E8  EC40  F006         	call	_botao
  1072                           
  1073                           ;Mapas.c: 295: botao(PORTEbits.RE1, &RPM, 1, &maux2, 500, 4000, &taxa_bt2);
  1074  0009EC  0100               	movlb	0	; () banked
  1075  0009EE  0E00               	movlw	high _RPM
  1076  0009F0  6E10               	movwf	botao@valor+1,c
  1077  0009F2  0100               	movlb	0	; () banked
  1078  0009F4  0E81               	movlw	low _RPM
  1079  0009F6  6E0F               	movwf	botao@valor,c
  1080  0009F8  0E01               	movlw	1
  1081  0009FA  6E11               	movwf	botao@inc_dec,c
  1082  0009FC  0100               	movlb	0	; () banked
  1083  0009FE  0E00               	movlw	high _maux2
  1084  000A00  6E13               	movwf	botao@mem_aux+1,c
  1085  000A02  0100               	movlb	0	; () banked
  1086  000A04  0E80               	movlw	low _maux2
  1087  000A06  6E12               	movwf	botao@mem_aux,c
  1088  000A08  0E01               	movlw	1
  1089  000A0A  6E15               	movwf	botao@lmin+1,c
  1090  000A0C  0EF4               	movlw	244
  1091  000A0E  6E14               	movwf	botao@lmin,c
  1092  000A10  0E0F               	movlw	15
  1093  000A12  6E17               	movwf	botao@lmax+1,c
  1094  000A14  0EA0               	movlw	160
  1095  000A16  6E16               	movwf	botao@lmax,c
  1096  000A18  0E00               	movlw	high _taxa_bt2
  1097  000A1A  6E19               	movwf	botao@taxa+1,c
  1098  000A1C  0E3D               	movlw	low _taxa_bt2
  1099  000A1E  6E18               	movwf	botao@taxa,c
  1100  000A20  A284               	btfss	3972,1,c	;volatile
  1101  000A22  D002               	goto	u3150
  1102  000A24  0E01               	movlw	1
  1103  000A26  D001               	goto	u3156
  1104  000A28                     u3150:
  1105  000A28  0E00               	movlw	0
  1106  000A2A                     u3156:
  1107  000A2A  EC40  F006         	call	_botao
  1108                           
  1109                           ;Mapas.c: 296: word_ascii(RPM, 1,4, 5);
  1110  000A2E  C081  F016         	movff	_RPM,word_ascii@A
  1111  000A32  C082  F017         	movff	_RPM+1,word_ascii@A+1
  1112  000A36  0E01               	movlw	1
  1113  000A38  6E18               	movwf	word_ascii@linha,c
  1114  000A3A  0E04               	movlw	4
  1115  000A3C  6E19               	movwf	word_ascii@coluna,c
  1116  000A3E  0E05               	movlw	5
  1117  000A40  6E1A               	movwf	word_ascii@pontoDecimal,c
  1118  000A42  EC2E  F007         	call	_word_ascii	;wreg free
  1119                           
  1120                           ;Mapas.c: 297: }
  1121  000A46  D04E               	goto	l3128
  1122  000A48                     l3124:
  1123                           
  1124                           ;Mapas.c: 298: else
  1125                           ;Mapas.c: 299: {
  1126                           ;Mapas.c: 300: botao(PORTEbits.RE0, &TPS, 0, &maux1, 000, 30, &taxa_bt1);
  1127  000A48  0100               	movlb	0	; () banked
  1128  000A4A  0E00               	movlw	high _TPS
  1129  000A4C  6E10               	movwf	botao@valor+1,c
  1130  000A4E  0100               	movlb	0	; () banked
  1131  000A50  0E7E               	movlw	low _TPS
  1132  000A52  6E0F               	movwf	botao@valor,c
  1133  000A54  0E00               	movlw	0
  1134  000A56  6E11               	movwf	botao@inc_dec,c
  1135  000A58  0100               	movlb	0	; () banked
  1136  000A5A  0E00               	movlw	high _maux1
  1137  000A5C  6E13               	movwf	botao@mem_aux+1,c
  1138  000A5E  0100               	movlb	0	; () banked
  1139  000A60  0E83               	movlw	low _maux1
  1140  000A62  6E12               	movwf	botao@mem_aux,c
  1141  000A64  0E00               	movlw	0
  1142  000A66  6E15               	movwf	botao@lmin+1,c
  1143  000A68  0E00               	movlw	0
  1144  000A6A  6E14               	movwf	botao@lmin,c
  1145  000A6C  0E00               	movlw	0
  1146  000A6E  6E17               	movwf	botao@lmax+1,c
  1147  000A70  0E1E               	movlw	30
  1148  000A72  6E16               	movwf	botao@lmax,c
  1149  000A74  0E00               	movlw	high _taxa_bt1
  1150  000A76  6E19               	movwf	botao@taxa+1,c
  1151  000A78  0E39               	movlw	low _taxa_bt1
  1152  000A7A  6E18               	movwf	botao@taxa,c
  1153  000A7C  A084               	btfss	3972,0,c	;volatile
  1154  000A7E  D002               	goto	u3160
  1155  000A80  0E01               	movlw	1
  1156  000A82  D001               	goto	u3166
  1157  000A84                     u3160:
  1158  000A84  0E00               	movlw	0
  1159  000A86                     u3166:
  1160  000A86  EC40  F006         	call	_botao
  1161                           
  1162                           ;Mapas.c: 301: botao(PORTEbits.RE1, &TPS, 1, &maux2, 000, 30, &taxa_bt2);
  1163  000A8A  0100               	movlb	0	; () banked
  1164  000A8C  0E00               	movlw	high _TPS
  1165  000A8E  6E10               	movwf	botao@valor+1,c
  1166  000A90  0100               	movlb	0	; () banked
  1167  000A92  0E7E               	movlw	low _TPS
  1168  000A94  6E0F               	movwf	botao@valor,c
  1169  000A96  0E01               	movlw	1
  1170  000A98  6E11               	movwf	botao@inc_dec,c
  1171  000A9A  0100               	movlb	0	; () banked
  1172  000A9C  0E00               	movlw	high _maux2
  1173  000A9E  6E13               	movwf	botao@mem_aux+1,c
  1174  000AA0  0100               	movlb	0	; () banked
  1175  000AA2  0E80               	movlw	low _maux2
  1176  000AA4  6E12               	movwf	botao@mem_aux,c
  1177  000AA6  0E00               	movlw	0
  1178  000AA8  6E15               	movwf	botao@lmin+1,c
  1179  000AAA  0E00               	movlw	0
  1180  000AAC  6E14               	movwf	botao@lmin,c
  1181  000AAE  0E00               	movlw	0
  1182  000AB0  6E17               	movwf	botao@lmax+1,c
  1183  000AB2  0E1E               	movlw	30
  1184  000AB4  6E16               	movwf	botao@lmax,c
  1185  000AB6  0E00               	movlw	high _taxa_bt2
  1186  000AB8  6E19               	movwf	botao@taxa+1,c
  1187  000ABA  0E3D               	movlw	low _taxa_bt2
  1188  000ABC  6E18               	movwf	botao@taxa,c
  1189  000ABE  A284               	btfss	3972,1,c	;volatile
  1190  000AC0  D002               	goto	u3170
  1191  000AC2  0E01               	movlw	1
  1192  000AC4  D001               	goto	u3176
  1193  000AC6                     u3170:
  1194  000AC6  0E00               	movlw	0
  1195  000AC8                     u3176:
  1196  000AC8  EC40  F006         	call	_botao
  1197                           
  1198                           ;Mapas.c: 302: byte_ascii(TPS, 1, 13, 4);
  1199  000ACC  C07E  F016         	movff	_TPS,byte_ascii@A
  1200  000AD0  C07F  F017         	movff	_TPS+1,byte_ascii@A+1
  1201  000AD4  0E01               	movlw	1
  1202  000AD6  6E18               	movwf	byte_ascii@linha,c
  1203  000AD8  0E0D               	movlw	13
  1204  000ADA  6E19               	movwf	byte_ascii@coluna,c
  1205  000ADC  0E04               	movlw	4
  1206  000ADE  6E1A               	movwf	byte_ascii@pontoDecimal,c
  1207  000AE0  ECBD  F007         	call	_byte_ascii	;wreg free
  1208  000AE4                     l3128:
  1209                           
  1210                           ;Mapas.c: 303: }
  1211                           ;Mapas.c: 307: R_aux = RPM/100;
  1212  000AE4  C081  F00F         	movff	_RPM,___lwdiv@dividend
  1213  000AE8  C082  F010         	movff	_RPM+1,___lwdiv@dividend+1
  1214  000AEC  0E00               	movlw	0
  1215  000AEE  6E12               	movwf	___lwdiv@divisor+1,c
  1216  000AF0  0E64               	movlw	100
  1217  000AF2  6E11               	movwf	___lwdiv@divisor,c
  1218  000AF4  EC80  F00A         	call	___lwdiv	;wreg free
  1219  000AF8  0100               	movlb	0	; () banked
  1220  000AFA  C00F  F07A         	movff	?___lwdiv,_R_aux
  1221  000AFE  0100               	movlb	0	; () banked
  1222  000B00  C010  F07B         	movff	?___lwdiv+1,_R_aux+1
  1223  000B04  0100               	movlb	0	; () banked
  1224  000B06  6B7C               	clrf	(_R_aux+2)& (0+255),b
  1225  000B08  0100               	movlb	0	; () banked
  1226  000B0A  6B7D               	clrf	(_R_aux+3)& (0+255),b
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;Mapas.c: 308: R_aux = ((418*R_aux - 4*R_aux*R_aux))/1000;
  1230  000B0C  0100               	movlb	0	; () banked
  1231  000B0E  C07A  F06C         	movff	_R_aux,??_main
  1232  000B12  0100               	movlb	0	; () banked
  1233  000B14  C07B  F06D         	movff	_R_aux+1,??_main+1
  1234  000B18  0100               	movlb	0	; () banked
  1235  000B1A  C07C  F06E         	movff	_R_aux+2,??_main+2
  1236  000B1E  0100               	movlb	0	; () banked
  1237  000B20  C07D  F06F         	movff	_R_aux+3,??_main+3
  1238  000B24  0E02               	movlw	2
  1239  000B26                     u3185:
  1240  000B26  90D8               	bcf	status,0,c
  1241  000B28  0100               	movlb	0	; () banked
  1242  000B2A  376C               	rlcf	??_main& (0+255),f,b
  1243  000B2C  376D               	rlcf	(??_main+1)& (0+255),f,b
  1244  000B2E  376E               	rlcf	(??_main+2)& (0+255),f,b
  1245  000B30  376F               	rlcf	(??_main+3)& (0+255),f,b
  1246  000B32  2EE8               	decfsz	wreg,f,c
  1247  000B34  D7F8               	goto	u3185
  1248  000B36  C06C  F00F         	movff	??_main,___lmul@multiplier
  1249  000B3A  C06D  F010         	movff	??_main+1,___lmul@multiplier+1
  1250  000B3E  C06E  F011         	movff	??_main+2,___lmul@multiplier+2
  1251  000B42  C06F  F012         	movff	??_main+3,___lmul@multiplier+3
  1252  000B46  C07A  F013         	movff	_R_aux,___lmul@multiplicand
  1253  000B4A  C07B  F014         	movff	_R_aux+1,___lmul@multiplicand+1
  1254  000B4E  C07C  F015         	movff	_R_aux+2,___lmul@multiplicand+2
  1255  000B52  C07D  F016         	movff	_R_aux+3,___lmul@multiplicand+3
  1256  000B56  EC55  F00A         	call	___lmul	;wreg free
  1257  000B5A  C00F  F070         	movff	?___lmul,??_main+4
  1258  000B5E  C010  F071         	movff	?___lmul+1,??_main+5
  1259  000B62  C011  F072         	movff	?___lmul+2,??_main+6
  1260  000B66  C012  F073         	movff	?___lmul+3,??_main+7
  1261  000B6A  0100               	movlb	0	; () banked
  1262  000B6C  1F70               	comf	(??_main+4)& (0+255),f,b
  1263  000B6E  1F71               	comf	(??_main+5)& (0+255),f,b
  1264  000B70  1F72               	comf	(??_main+6)& (0+255),f,b
  1265  000B72  1F73               	comf	(??_main+7)& (0+255),f,b
  1266  000B74  2B70               	incf	(??_main+4)& (0+255),f,b
  1267  000B76  0E00               	movlw	0
  1268  000B78  2371               	addwfc	(??_main+5)& (0+255),f,b
  1269  000B7A  2372               	addwfc	(??_main+6)& (0+255),f,b
  1270  000B7C  2373               	addwfc	(??_main+7)& (0+255),f,b
  1271  000B7E  C07A  F00F         	movff	_R_aux,___lmul@multiplier
  1272  000B82  C07B  F010         	movff	_R_aux+1,___lmul@multiplier+1
  1273  000B86  C07C  F011         	movff	_R_aux+2,___lmul@multiplier+2
  1274  000B8A  C07D  F012         	movff	_R_aux+3,___lmul@multiplier+3
  1275  000B8E  0EA2               	movlw	162
  1276  000B90  6E13               	movwf	___lmul@multiplicand,c
  1277  000B92  0E01               	movlw	1
  1278  000B94  6E14               	movwf	___lmul@multiplicand+1,c
  1279  000B96  0E00               	movlw	0
  1280  000B98  6E15               	movwf	___lmul@multiplicand+2,c
  1281  000B9A  0E00               	movlw	0
  1282  000B9C  6E16               	movwf	___lmul@multiplicand+3,c
  1283  000B9E  EC55  F00A         	call	___lmul	;wreg free
  1284  000BA2  C00F  F074         	movff	?___lmul,??_main+8
  1285  000BA6  C010  F075         	movff	?___lmul+1,??_main+9
  1286  000BAA  C011  F076         	movff	?___lmul+2,??_main+10
  1287  000BAE  C012  F077         	movff	?___lmul+3,??_main+11
  1288  000BB2  0100               	movlb	0	; () banked
  1289  000BB4  5170               	movf	(??_main+4)& (0+255),w,b
  1290  000BB6  0100               	movlb	0	; () banked
  1291  000BB8  2574               	addwf	(??_main+8)& (0+255),w,b
  1292  000BBA  6E1B               	movwf	___lldiv@dividend,c
  1293  000BBC  0100               	movlb	0	; () banked
  1294  000BBE  5171               	movf	(??_main+5)& (0+255),w,b
  1295  000BC0  0100               	movlb	0	; () banked
  1296  000BC2  2175               	addwfc	(??_main+9)& (0+255),w,b
  1297  000BC4  6E1C               	movwf	___lldiv@dividend+1,c
  1298  000BC6  0100               	movlb	0	; () banked
  1299  000BC8  5172               	movf	(??_main+6)& (0+255),w,b
  1300  000BCA  0100               	movlb	0	; () banked
  1301  000BCC  2176               	addwfc	(??_main+10)& (0+255),w,b
  1302  000BCE  6E1D               	movwf	___lldiv@dividend+2,c
  1303  000BD0  0100               	movlb	0	; () banked
  1304  000BD2  5173               	movf	(??_main+7)& (0+255),w,b
  1305  000BD4  0100               	movlb	0	; () banked
  1306  000BD6  2177               	addwfc	(??_main+11)& (0+255),w,b
  1307  000BD8  6E1E               	movwf	___lldiv@dividend+3,c
  1308  000BDA  0EE8               	movlw	232
  1309  000BDC  6E1F               	movwf	___lldiv@divisor,c
  1310  000BDE  0E03               	movlw	3
  1311  000BE0  6E20               	movwf	___lldiv@divisor+1,c
  1312  000BE2  0E00               	movlw	0
  1313  000BE4  6E21               	movwf	___lldiv@divisor+2,c
  1314  000BE6  0E00               	movlw	0
  1315  000BE8  6E22               	movwf	___lldiv@divisor+3,c
  1316  000BEA  EC68  F008         	call	___lldiv	;wreg free
  1317  000BEE  C01B  F07A         	movff	?___lldiv,_R_aux
  1318  000BF2  C01C  F07B         	movff	?___lldiv+1,_R_aux+1
  1319  000BF6  C01D  F07C         	movff	?___lldiv+2,_R_aux+2
  1320  000BFA  C01E  F07D         	movff	?___lldiv+3,_R_aux+3
  1321                           
  1322                           ;Mapas.c: 309: coluna = R_aux;
  1323  000BFE  C07A  F078         	movff	_R_aux,_coluna
  1324  000C02  C07B  F079         	movff	_R_aux+1,_coluna+1
  1325                           
  1326                           ;Mapas.c: 310: linha = TPS/10;
  1327  000C06  C07E  F00F         	movff	_TPS,___lwdiv@dividend
  1328  000C0A  C07F  F010         	movff	_TPS+1,___lwdiv@dividend+1
  1329  000C0E  0E00               	movlw	0
  1330  000C10  6E12               	movwf	___lwdiv@divisor+1,c
  1331  000C12  0E0A               	movlw	10
  1332  000C14  6E11               	movwf	___lwdiv@divisor,c
  1333  000C16  EC80  F00A         	call	___lwdiv	;wreg free
  1334  000C1A  C00F  F033         	movff	?___lwdiv,_linha
  1335  000C1E  C010  F034         	movff	?___lwdiv+1,_linha+1
  1336                           
  1337                           ;Mapas.c: 312: word_ascii(tabela[linha][coluna], 2, 10, 4);
  1338  000C22  C033  F00F         	movff	_linha,___wmul@multiplier
  1339  000C26  C034  F010         	movff	_linha+1,___wmul@multiplier+1
  1340  000C2A  0E00               	movlw	0
  1341  000C2C  6E12               	movwf	___wmul@multiplicand+1,c
  1342  000C2E  0E14               	movlw	20
  1343  000C30  6E11               	movwf	___wmul@multiplicand,c
  1344  000C32  ECCA  F00A         	call	___wmul	;wreg free
  1345  000C36  0E00               	movlw	low main@tabela
  1346  000C38  0100               	movlb	0	; () banked
  1347  000C3A  6F6C               	movwf	??_main& (0+255),b
  1348  000C3C  0E01               	movlw	high main@tabela
  1349  000C3E  6F6D               	movwf	(??_main+1)& (0+255),b
  1350  000C40  500F               	movf	?___wmul,w,c
  1351  000C42  0100               	movlb	0	; () banked
  1352  000C44  276C               	addwf	??_main& (0+255),f,b
  1353  000C46  5010               	movf	?___wmul+1,w,c
  1354  000C48  0100               	movlb	0	; () banked
  1355  000C4A  236D               	addwfc	(??_main+1)& (0+255),f,b
  1356  000C4C  90D8               	bcf	status,0,c
  1357  000C4E  0100               	movlb	0	; () banked
  1358  000C50  3578               	rlcf	_coluna& (0+255),w,b
  1359  000C52  6ED9               	movwf	fsr2l,c
  1360  000C54  0100               	movlb	0	; () banked
  1361  000C56  3579               	rlcf	(_coluna+1)& (0+255),w,b
  1362  000C58  6EDA               	movwf	fsr2h,c
  1363  000C5A  0100               	movlb	0	; () banked
  1364  000C5C  516C               	movf	??_main& (0+255),w,b
  1365  000C5E  26D9               	addwf	fsr2l,f,c
  1366  000C60  0100               	movlb	0	; () banked
  1367  000C62  516D               	movf	(??_main+1)& (0+255),w,b
  1368  000C64  22DA               	addwfc	fsr2h,f,c
  1369  000C66  CFDE F016          	movff	postinc2,word_ascii@A
  1370  000C6A  CFDD F017          	movff	postdec2,word_ascii@A+1
  1371  000C6E  0E02               	movlw	2
  1372  000C70  6E18               	movwf	word_ascii@linha,c
  1373  000C72  0E0A               	movlw	10
  1374  000C74  6E19               	movwf	word_ascii@coluna,c
  1375  000C76  0E04               	movlw	4
  1376  000C78  6E1A               	movwf	word_ascii@pontoDecimal,c
  1377  000C7A  EC2E  F007         	call	_word_ascii	;wreg free
  1378  000C7E  D693               	goto	l3118
  1379  000C80                     __end_of_main:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           intcon	equ	0xFF2
  1386                           intcon2	equ	0xFF1
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           postinc1	equ	0xFE6
  1390                           postdec1	equ	0xFE5
  1391                           fsr1l	equ	0xFE1
  1392                           postinc2	equ	0xFDE
  1393                           postdec2	equ	0xFDD
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _word_ascii *****************
  1399 ;; Defined at:
  1400 ;;		line 189 in file "Mapas.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  A               2   21[COMRAM] unsigned int 
  1403 ;;  linha           1   23[COMRAM] unsigned char 
  1404 ;;  coluna          1   24[COMRAM] unsigned char 
  1405 ;;  pontoDecimal    1   25[COMRAM] unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  ASCII          10    0[BANK0 ] unsigned int [5]
  1408 ;;  j               1   11[BANK0 ] unsigned char 
  1409 ;;  i               1   10[BANK0 ] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         5       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1421 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         7      12       0       0       0       0       0       0       0
  1423 ;;Total ram usage:       19 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		_EscreveCaractereLCD
  1428 ;;		_PosicaoCursorLCD
  1429 ;;		___lwdiv
  1430 ;;		___lwmod
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text1
  1437  000E5C                     __ptext1:
  1438                           	opt stack 0
  1439  000E5C                     _word_ascii:
  1440                           	opt stack 26
  1441                           
  1442                           ;Mapas.c: 191: char i = 4;
  1443                           
  1444                           ;incstack = 0
  1445  000E5C  0E04               	movlw	4
  1446  000E5E  0100               	movlb	0	; () banked
  1447  000E60  6F6A               	movwf	word_ascii@i& (0+255),b
  1448                           
  1449                           ;Mapas.c: 192: char j = 0;
  1450  000E62  0E00               	movlw	0
  1451  000E64  0100               	movlb	0	; () banked
  1452  000E66  6F6B               	movwf	word_ascii@j& (0+255),b
  1453                           
  1454                           ;Mapas.c: 194: unsigned int ASCII[5];
  1455                           ;Mapas.c: 195: ASCII[0] = 0x30;
  1456  000E68  0E00               	movlw	0
  1457  000E6A  0100               	movlb	0	; () banked
  1458  000E6C  6F61               	movwf	(word_ascii@ASCII+1)& (0+255),b
  1459  000E6E  0E30               	movlw	48
  1460  000E70  0100               	movlb	0	; () banked
  1461  000E72  6F60               	movwf	word_ascii@ASCII& (0+255),b
  1462                           
  1463                           ;Mapas.c: 196: ASCII[1] = 0x30;
  1464  000E74  0E00               	movlw	0
  1465  000E76  0100               	movlb	0	; () banked
  1466  000E78  6F63               	movwf	(word_ascii@ASCII+3)& (0+255),b
  1467  000E7A  0E30               	movlw	48
  1468  000E7C  0100               	movlb	0	; () banked
  1469  000E7E  6F62               	movwf	(word_ascii@ASCII+2)& (0+255),b
  1470                           
  1471                           ;Mapas.c: 197: ASCII[2] = 0x30;
  1472  000E80  0E00               	movlw	0
  1473  000E82  0100               	movlb	0	; () banked
  1474  000E84  6F65               	movwf	(word_ascii@ASCII+5)& (0+255),b
  1475  000E86  0E30               	movlw	48
  1476  000E88  0100               	movlb	0	; () banked
  1477  000E8A  6F64               	movwf	(word_ascii@ASCII+4)& (0+255),b
  1478                           
  1479                           ;Mapas.c: 198: ASCII[3] = 0x30;
  1480  000E8C  0E00               	movlw	0
  1481  000E8E  0100               	movlb	0	; () banked
  1482  000E90  6F67               	movwf	(word_ascii@ASCII+7)& (0+255),b
  1483  000E92  0E30               	movlw	48
  1484  000E94  0100               	movlb	0	; () banked
  1485  000E96  6F66               	movwf	(word_ascii@ASCII+6)& (0+255),b
  1486                           
  1487                           ;Mapas.c: 199: ASCII[4] = 0x30;
  1488  000E98  0E00               	movlw	0
  1489  000E9A  0100               	movlb	0	; () banked
  1490  000E9C  6F69               	movwf	(word_ascii@ASCII+9)& (0+255),b
  1491  000E9E  0E30               	movlw	48
  1492  000EA0  0100               	movlb	0	; () banked
  1493  000EA2  6F68               	movwf	(word_ascii@ASCII+8)& (0+255),b
  1494                           
  1495                           ;Mapas.c: 201: while (A>=10)
  1496  000EA4  D02D               	goto	l2790
  1497  000EA6                     l2784:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;Mapas.c: 202: {
  1501                           ;Mapas.c: 203: ASCII[i] = A%10 + 0x30;
  1502  000EA6  C016  F00F         	movff	word_ascii@A,___lwmod@dividend
  1503  000EAA  C017  F010         	movff	word_ascii@A+1,___lwmod@dividend+1
  1504  000EAE  0E00               	movlw	0
  1505  000EB0  6E12               	movwf	___lwmod@divisor+1,c
  1506  000EB2  0E0A               	movlw	10
  1507  000EB4  6E11               	movwf	___lwmod@divisor,c
  1508  000EB6  ECA9  F00A         	call	___lwmod	;wreg free
  1509  000EBA  0E30               	movlw	48
  1510  000EBC  260F               	addwf	?___lwmod,f,c
  1511  000EBE  0E00               	movlw	0
  1512  000EC0  2210               	addwfc	?___lwmod+1,f,c
  1513  000EC2  0100               	movlb	0	; () banked
  1514  000EC4  516A               	movf	word_ascii@i& (0+255),w,b
  1515  000EC6  0D02               	mullw	2
  1516  000EC8  0100               	movlb	0	; () banked
  1517  000ECA  0E60               	movlw	low word_ascii@ASCII
  1518  000ECC  24F3               	addwf	prodl,w,c
  1519  000ECE  6ED9               	movwf	fsr2l,c
  1520  000ED0  0100               	movlb	0	; () banked
  1521  000ED2  0E00               	movlw	high word_ascii@ASCII
  1522  000ED4  20F4               	addwfc	prodh,w,c
  1523  000ED6  6EDA               	movwf	fsr2h,c
  1524  000ED8  C00F  FFDE         	movff	?___lwmod,postinc2
  1525  000EDC  C010  FFDD         	movff	?___lwmod+1,postdec2
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;Mapas.c: 204: A = A/10;
  1529  000EE0  C016  F00F         	movff	word_ascii@A,___lwdiv@dividend
  1530  000EE4  C017  F010         	movff	word_ascii@A+1,___lwdiv@dividend+1
  1531  000EE8  0E00               	movlw	0
  1532  000EEA  6E12               	movwf	___lwdiv@divisor+1,c
  1533  000EEC  0E0A               	movlw	10
  1534  000EEE  6E11               	movwf	___lwdiv@divisor,c
  1535  000EF0  EC80  F00A         	call	___lwdiv	;wreg free
  1536  000EF4  C00F  F016         	movff	?___lwdiv,word_ascii@A
  1537  000EF8  C010  F017         	movff	?___lwdiv+1,word_ascii@A+1
  1538                           
  1539                           ;Mapas.c: 205: --i;
  1540  000EFC  0100               	movlb	0	; () banked
  1541  000EFE  076A               	decf	word_ascii@i& (0+255),f,b
  1542  000F00                     l2790:
  1543                           
  1544                           ; BSR set to: 0
  1545  000F00  0E0A               	movlw	10
  1546  000F02  5C16               	subwf	word_ascii@A,w,c
  1547  000F04  0E00               	movlw	0
  1548  000F06  5817               	subwfb	word_ascii@A+1,w,c
  1549  000F08  B0D8               	btfsc	status,0,c
  1550  000F0A  D7CD               	goto	l2784
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;Mapas.c: 206: }
  1554                           ;Mapas.c: 207: ASCII[i] = A + 0x30;
  1555                           
  1556                           ; BSR set to: 0
  1557  000F0C  0E30               	movlw	48
  1558  000F0E  2416               	addwf	word_ascii@A,w,c
  1559  000F10  6E1B               	movwf	??_word_ascii& (0+255),c
  1560  000F12  0E00               	movlw	0
  1561  000F14  2017               	addwfc	word_ascii@A+1,w,c
  1562  000F16  6E1C               	movwf	(??_word_ascii+1)& (0+255),c
  1563  000F18  0100               	movlb	0	; () banked
  1564  000F1A  516A               	movf	word_ascii@i& (0+255),w,b
  1565  000F1C  0D02               	mullw	2
  1566  000F1E  0100               	movlb	0	; () banked
  1567  000F20  0E60               	movlw	low word_ascii@ASCII
  1568  000F22  24F3               	addwf	prodl,w,c
  1569  000F24  6ED9               	movwf	fsr2l,c
  1570  000F26  0100               	movlb	0	; () banked
  1571  000F28  0E00               	movlw	high word_ascii@ASCII
  1572  000F2A  20F4               	addwfc	prodh,w,c
  1573  000F2C  6EDA               	movwf	fsr2h,c
  1574  000F2E  C01B  FFDE         	movff	??_word_ascii,postinc2
  1575  000F32  C01C  FFDD         	movff	??_word_ascii+1,postdec2
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;Mapas.c: 208: PosicaoCursorLCD(linha, coluna);
  1579  000F36  C019  F012         	movff	word_ascii@coluna,PosicaoCursorLCD@coluna
  1580  000F3A  5018               	movf	word_ascii@linha,w,c
  1581  000F3C  ECF5  F009         	call	_PosicaoCursorLCD
  1582                           
  1583                           ;Mapas.c: 209: while(j<5)
  1584  000F40  D017               	goto	l2804
  1585  000F42                     l2796:
  1586                           
  1587                           ;Mapas.c: 210: {
  1588                           ;Mapas.c: 211: if(pontoDecimal == j)
  1589  000F42  0100               	movlb	0	; () banked
  1590  000F44  516B               	movf	word_ascii@j& (0+255),w,b
  1591  000F46  621A               	cpfseq	word_ascii@pontoDecimal,c
  1592  000F48  D003               	goto	l2800
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;Mapas.c: 212: {
  1596                           ;Mapas.c: 213: EscreveCaractereLCD(0x2C);
  1597  000F4A  0E2C               	movlw	44
  1598  000F4C  EC87  F009         	call	_EscreveCaractereLCD
  1599  000F50                     l2800:
  1600                           
  1601                           ;Mapas.c: 214: }
  1602                           ;Mapas.c: 215: EscreveCaractereLCD(ASCII[j]);
  1603  000F50  0100               	movlb	0	; () banked
  1604  000F52  516B               	movf	word_ascii@j& (0+255),w,b
  1605  000F54  0D02               	mullw	2
  1606  000F56  0100               	movlb	0	; () banked
  1607  000F58  0E60               	movlw	low word_ascii@ASCII
  1608  000F5A  24F3               	addwf	prodl,w,c
  1609  000F5C  6ED9               	movwf	fsr2l,c
  1610  000F5E  0100               	movlb	0	; () banked
  1611  000F60  0E00               	movlw	high word_ascii@ASCII
  1612  000F62  20F4               	addwfc	prodh,w,c
  1613  000F64  6EDA               	movwf	fsr2h,c
  1614  000F66  50DF               	movf	indf2,w,c
  1615  000F68  EC87  F009         	call	_EscreveCaractereLCD
  1616                           
  1617                           ;Mapas.c: 216: ++j;
  1618  000F6C  0100               	movlb	0	; () banked
  1619  000F6E  2B6B               	incf	word_ascii@j& (0+255),f,b
  1620  000F70                     l2804:
  1621  000F70  0E04               	movlw	4
  1622  000F72  0100               	movlb	0	; () banked
  1623  000F74  656B               	cpfsgt	word_ascii@j& (0+255),b
  1624  000F76  D7E5               	goto	l2796
  1625                           
  1626                           ; BSR set to: 0
  1627                           
  1628                           ; BSR set to: 0
  1629  000F78  0012               	return	
  1630  000F7A                     __end_of_word_ascii:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           prodh	equ	0xFF4
  1637                           prodl	equ	0xFF3
  1638                           intcon	equ	0xFF2
  1639                           intcon2	equ	0xFF1
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           postinc1	equ	0xFE6
  1643                           postdec1	equ	0xFE5
  1644                           fsr1l	equ	0xFE1
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _delay_ms *****************
  1653 ;; Defined at:
  1654 ;;		line 69 in file "Mapas.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  delaytime       2   14[COMRAM] int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         2       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        3 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text2
  1683  0015DE                     __ptext2:
  1684                           	opt stack 0
  1685  0015DE                     _delay_ms:
  1686                           	opt stack 29
  1687                           
  1688                           ;Mapas.c: 71: while (--delaytime)
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;incstack = 0
  1692  0015DE  D008               	goto	l2710
  1693  0015E0                     l2708:
  1694                           
  1695                           ;Mapas.c: 72: {
  1696                           ;Mapas.c: 73: _delay((unsigned long)((1)*(48000000/4000.0)));
  1697  0015E0  0E10               	movlw	16
  1698  0015E2  6E11               	movwf	??_delay_ms& (0+255),c
  1699  0015E4  0E94               	movlw	148
  1700  0015E6                     u3227:
  1701  0015E6  2EE8               	decfsz	wreg,f,c
  1702  0015E8  D7FE               	goto	u3227
  1703  0015EA  2E11               	decfsz	??_delay_ms& (0+255),f,c
  1704  0015EC  D7FC               	goto	u3227
  1705  0015EE  D000               	nop2	
  1706  0015F0                     l2710:
  1707  0015F0  060F               	decf	delay_ms@delaytime,f,c
  1708  0015F2  A0D8               	btfss	status,0,c
  1709  0015F4  0610               	decf	delay_ms@delaytime+1,f,c
  1710  0015F6  5010               	movf	(delay_ms@delaytime+1)& (0+255),w,c
  1711  0015F8  100F               	iorwf	delay_ms@delaytime& (0+255),w,c
  1712  0015FA  B4D8               	btfsc	status,2,c
  1713  0015FC  0012               	return	
  1714  0015FE  D7F0               	goto	l2708
  1715  001600                     __end_of_delay_ms:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           intcon2	equ	0xFF1
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postinc1	equ	0xFE6
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           indf2	equ	0xFDF
  1731                           postinc2	equ	0xFDE
  1732                           postdec2	equ	0xFDD
  1733                           fsr2h	equ	0xFDA
  1734                           fsr2l	equ	0xFD9
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _byte_ascii *****************
  1738 ;; Defined at:
  1739 ;;		line 153 in file "Mapas.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  A               2   21[COMRAM] unsigned int 
  1742 ;;  linha           1   23[COMRAM] unsigned char 
  1743 ;;  coluna          1   24[COMRAM] unsigned char 
  1744 ;;  pontoDecimal    1   25[COMRAM] unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  ASCII           3   26[COMRAM] unsigned char [3]
  1747 ;;  j               1   30[COMRAM] unsigned char 
  1748 ;;  i               1   29[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         5       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1761 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:       10 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    4
  1765 ;; This function calls:
  1766 ;;		_EscreveCaractereLCD
  1767 ;;		_PosicaoCursorLCD
  1768 ;;		___lwdiv
  1769 ;;		___lwmod
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text3
  1776  000F7A                     __ptext3:
  1777                           	opt stack 0
  1778  000F7A                     _byte_ascii:
  1779                           	opt stack 26
  1780                           
  1781                           ;Mapas.c: 156: char i = 2;
  1782                           
  1783                           ;incstack = 0
  1784  000F7A  0E02               	movlw	2
  1785  000F7C  6E1E               	movwf	byte_ascii@i,c
  1786                           
  1787                           ;Mapas.c: 157: char j = 0;
  1788  000F7E  0E00               	movlw	0
  1789  000F80  6E1F               	movwf	byte_ascii@j,c
  1790                           
  1791                           ;Mapas.c: 158: char ASCII[3];
  1792                           ;Mapas.c: 159: ASCII[0] = 0x30;
  1793  000F82  0E30               	movlw	48
  1794  000F84  6E1B               	movwf	byte_ascii@ASCII,c
  1795                           
  1796                           ;Mapas.c: 160: ASCII[1] = 0x30;
  1797  000F86  0E30               	movlw	48
  1798  000F88  6E1C               	movwf	byte_ascii@ASCII+1,c
  1799                           
  1800                           ;Mapas.c: 161: ASCII[2] = 0x30;
  1801  000F8A  0E30               	movlw	48
  1802  000F8C  6E1D               	movwf	byte_ascii@ASCII+2,c
  1803                           
  1804                           ;Mapas.c: 163: PosicaoCursorLCD(linha, coluna);
  1805  000F8E  C019  F012         	movff	byte_ascii@coluna,PosicaoCursorLCD@coluna
  1806  000F92  5018               	movf	byte_ascii@linha,w,c
  1807  000F94  ECF5  F009         	call	_PosicaoCursorLCD
  1808                           
  1809                           ;Mapas.c: 165: while (A>=10)
  1810  000F98  D024               	goto	l2768
  1811  000F9A                     l2762:
  1812                           
  1813                           ;Mapas.c: 166: {
  1814                           ;Mapas.c: 167: ASCII[i] = A%10 + 0x30;
  1815  000F9A  501E               	movf	byte_ascii@i,w,c
  1816  000F9C  0D01               	mullw	1
  1817  000F9E  0E1B               	movlw	low byte_ascii@ASCII
  1818  000FA0  24F3               	addwf	prodl,w,c
  1819  000FA2  6ED9               	movwf	fsr2l,c
  1820  000FA4  0E00               	movlw	high byte_ascii@ASCII
  1821  000FA6  20F4               	addwfc	prodh,w,c
  1822  000FA8  6EDA               	movwf	fsr2h,c
  1823  000FAA  C016  F00F         	movff	byte_ascii@A,___lwmod@dividend
  1824  000FAE  C017  F010         	movff	byte_ascii@A+1,___lwmod@dividend+1
  1825  000FB2  0E00               	movlw	0
  1826  000FB4  6E12               	movwf	___lwmod@divisor+1,c
  1827  000FB6  0E0A               	movlw	10
  1828  000FB8  6E11               	movwf	___lwmod@divisor,c
  1829  000FBA  ECA9  F00A         	call	___lwmod	;wreg free
  1830  000FBE  500F               	movf	?___lwmod,w,c
  1831  000FC0  0F30               	addlw	48
  1832  000FC2  6EDF               	movwf	indf2,c
  1833                           
  1834                           ;Mapas.c: 168: A = A/10;
  1835  000FC4  C016  F00F         	movff	byte_ascii@A,___lwdiv@dividend
  1836  000FC8  C017  F010         	movff	byte_ascii@A+1,___lwdiv@dividend+1
  1837  000FCC  0E00               	movlw	0
  1838  000FCE  6E12               	movwf	___lwdiv@divisor+1,c
  1839  000FD0  0E0A               	movlw	10
  1840  000FD2  6E11               	movwf	___lwdiv@divisor,c
  1841  000FD4  EC80  F00A         	call	___lwdiv	;wreg free
  1842  000FD8  C00F  F016         	movff	?___lwdiv,byte_ascii@A
  1843  000FDC  C010  F017         	movff	?___lwdiv+1,byte_ascii@A+1
  1844                           
  1845                           ;Mapas.c: 169: --i;
  1846  000FE0  061E               	decf	byte_ascii@i,f,c
  1847  000FE2                     l2768:
  1848  000FE2  0E0A               	movlw	10
  1849  000FE4  5C16               	subwf	byte_ascii@A,w,c
  1850  000FE6  0E00               	movlw	0
  1851  000FE8  5817               	subwfb	byte_ascii@A+1,w,c
  1852  000FEA  B0D8               	btfsc	status,0,c
  1853  000FEC  D7D6               	goto	l2762
  1854                           
  1855                           ;Mapas.c: 170: }
  1856                           ;Mapas.c: 171: ASCII[i] = A + 0x30;
  1857  000FEE  501E               	movf	byte_ascii@i,w,c
  1858  000FF0  0D01               	mullw	1
  1859  000FF2  0E1B               	movlw	low byte_ascii@ASCII
  1860  000FF4  24F3               	addwf	prodl,w,c
  1861  000FF6  6ED9               	movwf	fsr2l,c
  1862  000FF8  0E00               	movlw	high byte_ascii@ASCII
  1863  000FFA  20F4               	addwfc	prodh,w,c
  1864  000FFC  6EDA               	movwf	fsr2h,c
  1865  000FFE  5016               	movf	byte_ascii@A,w,c
  1866  001000  0F30               	addlw	48
  1867  001002  6EDF               	movwf	indf2,c
  1868                           
  1869                           ;Mapas.c: 173: while(j<3)
  1870  001004  D012               	goto	l2780
  1871  001006                     l2772:
  1872                           
  1873                           ;Mapas.c: 174: {
  1874                           ;Mapas.c: 175: if(pontoDecimal == j)
  1875  001006  501F               	movf	byte_ascii@j,w,c
  1876  001008  621A               	cpfseq	byte_ascii@pontoDecimal,c
  1877  00100A  D003               	goto	l2776
  1878                           
  1879                           ;Mapas.c: 176: {
  1880                           ;Mapas.c: 177: EscreveCaractereLCD(0x2C);
  1881  00100C  0E2C               	movlw	44
  1882  00100E  EC87  F009         	call	_EscreveCaractereLCD
  1883  001012                     l2776:
  1884                           
  1885                           ;Mapas.c: 178: }
  1886                           ;Mapas.c: 179: EscreveCaractereLCD(ASCII[j]);
  1887  001012  501F               	movf	byte_ascii@j,w,c
  1888  001014  0D01               	mullw	1
  1889  001016  0E1B               	movlw	low byte_ascii@ASCII
  1890  001018  24F3               	addwf	prodl,w,c
  1891  00101A  6ED9               	movwf	fsr2l,c
  1892  00101C  0E00               	movlw	high byte_ascii@ASCII
  1893  00101E  20F4               	addwfc	prodh,w,c
  1894  001020  6EDA               	movwf	fsr2h,c
  1895  001022  50DF               	movf	indf2,w,c
  1896  001024  EC87  F009         	call	_EscreveCaractereLCD
  1897                           
  1898                           ;Mapas.c: 180: ++j;
  1899  001028  2A1F               	incf	byte_ascii@j,f,c
  1900  00102A                     l2780:
  1901  00102A  0E02               	movlw	2
  1902  00102C  641F               	cpfsgt	byte_ascii@j,c
  1903  00102E  D7EB               	goto	l2772
  1904  001030  0012               	return	
  1905  001032                     __end_of_byte_ascii:
  1906                           	opt stack 0
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           intcon2	equ	0xFF1
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postinc1	equ	0xFE6
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           postinc2	equ	0xFDE
  1922                           postdec2	equ	0xFDD
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function ___lwmod *****************
  1928 ;; Defined at:
  1929 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  dividend        2   14[COMRAM] unsigned int 
  1932 ;;  divisor         2   16[COMRAM] unsigned int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  counter         1   18[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2   14[COMRAM] unsigned int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         4       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        5 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_byte_ascii
  1955 ;;		_word_ascii
  1956 ;;		_utoa
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text4
  1961  001552                     __ptext4:
  1962                           	opt stack 0
  1963  001552                     ___lwmod:
  1964                           	opt stack 28
  1965                           
  1966                           ;incstack = 0
  1967  001552  5012               	movf	___lwmod@divisor+1,w,c
  1968  001554  1011               	iorwf	___lwmod@divisor,w,c
  1969  001556  B4D8               	btfsc	status,2,c
  1970  001558  D018               	goto	l875
  1971  00155A  0E01               	movlw	1
  1972  00155C  6E13               	movwf	___lwmod@counter,c
  1973  00155E  D004               	goto	l2636
  1974  001560                     l2634:
  1975  001560  90D8               	bcf	status,0,c
  1976  001562  3611               	rlcf	___lwmod@divisor,f,c
  1977  001564  3612               	rlcf	___lwmod@divisor+1,f,c
  1978  001566  2A13               	incf	___lwmod@counter,f,c
  1979  001568                     l2636:
  1980  001568  AE12               	btfss	___lwmod@divisor+1,7,c
  1981  00156A  D7FA               	goto	l2634
  1982  00156C                     l2638:
  1983  00156C  5011               	movf	___lwmod@divisor,w,c
  1984  00156E  5C0F               	subwf	___lwmod@dividend,w,c
  1985  001570  5012               	movf	___lwmod@divisor+1,w,c
  1986  001572  5810               	subwfb	___lwmod@dividend+1,w,c
  1987  001574  A0D8               	btfss	status,0,c
  1988  001576  D004               	goto	l2642
  1989  001578  5011               	movf	___lwmod@divisor,w,c
  1990  00157A  5E0F               	subwf	___lwmod@dividend,f,c
  1991  00157C  5012               	movf	___lwmod@divisor+1,w,c
  1992  00157E  5A10               	subwfb	___lwmod@dividend+1,f,c
  1993  001580                     l2642:
  1994  001580  90D8               	bcf	status,0,c
  1995  001582  3212               	rrcf	___lwmod@divisor+1,f,c
  1996  001584  3211               	rrcf	___lwmod@divisor,f,c
  1997  001586  2E13               	decfsz	___lwmod@counter,f,c
  1998  001588  D7F1               	goto	l2638
  1999  00158A                     l875:
  2000  00158A  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2001  00158E  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2002  001592  0012               	return	
  2003  001594                     __end_of___lwmod:
  2004                           	opt stack 0
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           intcon	equ	0xFF2
  2012                           intcon2	equ	0xFF1
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           postinc1	equ	0xFE6
  2016                           postdec1	equ	0xFE5
  2017                           fsr1l	equ	0xFE1
  2018                           indf2	equ	0xFDF
  2019                           postinc2	equ	0xFDE
  2020                           postdec2	equ	0xFDD
  2021                           fsr2h	equ	0xFDA
  2022                           fsr2l	equ	0xFD9
  2023                           status	equ	0xFD8
  2024                           
  2025 ;; *************** function ___lwdiv *****************
  2026 ;; Defined at:
  2027 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  dividend        2   14[COMRAM] unsigned int 
  2030 ;;  divisor         2   16[COMRAM] unsigned int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  quotient        2   19[COMRAM] unsigned int 
  2033 ;;  counter         1   18[COMRAM] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   14[COMRAM] unsigned int 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2043 ;;      Params:         4       0       0       0       0       0       0       0       0
  2044 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2046 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        7 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_byte_ascii
  2054 ;;		_word_ascii
  2055 ;;		_main
  2056 ;;		_utoa
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text5
  2061  001500                     __ptext5:
  2062                           	opt stack 0
  2063  001500                     ___lwdiv:
  2064                           	opt stack 28
  2065                           
  2066                           ;incstack = 0
  2067  001500  0E00               	movlw	0
  2068  001502  6E15               	movwf	___lwdiv@quotient+1,c
  2069  001504  0E00               	movlw	0
  2070  001506  6E14               	movwf	___lwdiv@quotient,c
  2071  001508  5012               	movf	___lwdiv@divisor+1,w,c
  2072  00150A  1011               	iorwf	___lwdiv@divisor,w,c
  2073  00150C  B4D8               	btfsc	status,2,c
  2074  00150E  D01C               	goto	l865
  2075  001510  0E01               	movlw	1
  2076  001512  6E13               	movwf	___lwdiv@counter,c
  2077  001514  D004               	goto	l2616
  2078  001516                     l2614:
  2079  001516  90D8               	bcf	status,0,c
  2080  001518  3611               	rlcf	___lwdiv@divisor,f,c
  2081  00151A  3612               	rlcf	___lwdiv@divisor+1,f,c
  2082  00151C  2A13               	incf	___lwdiv@counter,f,c
  2083  00151E                     l2616:
  2084  00151E  AE12               	btfss	___lwdiv@divisor+1,7,c
  2085  001520  D7FA               	goto	l2614
  2086  001522                     l2618:
  2087  001522  90D8               	bcf	status,0,c
  2088  001524  3614               	rlcf	___lwdiv@quotient,f,c
  2089  001526  3615               	rlcf	___lwdiv@quotient+1,f,c
  2090  001528  5011               	movf	___lwdiv@divisor,w,c
  2091  00152A  5C0F               	subwf	___lwdiv@dividend,w,c
  2092  00152C  5012               	movf	___lwdiv@divisor+1,w,c
  2093  00152E  5810               	subwfb	___lwdiv@dividend+1,w,c
  2094  001530  A0D8               	btfss	status,0,c
  2095  001532  D005               	goto	l2626
  2096  001534  5011               	movf	___lwdiv@divisor,w,c
  2097  001536  5E0F               	subwf	___lwdiv@dividend,f,c
  2098  001538  5012               	movf	___lwdiv@divisor+1,w,c
  2099  00153A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2100  00153C  8014               	bsf	___lwdiv@quotient,0,c
  2101  00153E                     l2626:
  2102  00153E  90D8               	bcf	status,0,c
  2103  001540  3212               	rrcf	___lwdiv@divisor+1,f,c
  2104  001542  3211               	rrcf	___lwdiv@divisor,f,c
  2105  001544  2E13               	decfsz	___lwdiv@counter,f,c
  2106  001546  D7ED               	goto	l2618
  2107  001548                     l865:
  2108  001548  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2109  00154C  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2110  001550  0012               	return	
  2111  001552                     __end_of___lwdiv:
  2112                           	opt stack 0
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           prodh	equ	0xFF4
  2118                           prodl	equ	0xFF3
  2119                           intcon	equ	0xFF2
  2120                           intcon2	equ	0xFF1
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postinc1	equ	0xFE6
  2124                           postdec1	equ	0xFE5
  2125                           fsr1l	equ	0xFE1
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _PosicaoCursorLCD *****************
  2134 ;; Defined at:
  2135 ;;		line 280 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  linha           1    wreg     unsigned char 
  2138 ;;  coluna          1   17[COMRAM] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  linha           1   18[COMRAM] unsigned char 
  2141 ;;  EnderecoLCD     1   19[COMRAM] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;		None               void
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:         1       0       0       0       0       0       0       0       0
  2152 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2154 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2155 ;;Total ram usage:        3 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    3
  2158 ;; This function calls:
  2159 ;;		_EnderecoCursor
  2160 ;; This function is called by:
  2161 ;;		_byte_ascii
  2162 ;;		_word_ascii
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text6
  2168  0013EA                     __ptext6:
  2169                           	opt stack 0
  2170  0013EA                     _PosicaoCursorLCD:
  2171                           	opt stack 26
  2172                           
  2173                           ;incstack = 0
  2174                           ;PosicaoCursorLCD@linha stored from wreg
  2175  0013EA  6E13               	movwf	PosicaoCursorLCD@linha,c
  2176                           
  2177                           ;displayLCD.c: 288: unsigned char EnderecoLCD = 0x00;
  2178  0013EC  0E00               	movlw	0
  2179  0013EE  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  2180                           
  2181                           ;displayLCD.c: 292: if (coluna >= 0)
  2182  0013F0  0612               	decf	PosicaoCursorLCD@coluna,f,c
  2183                           
  2184                           ;displayLCD.c: 293: {
  2185                           ;displayLCD.c: 296: switch (linha)
  2186  0013F2  D01E               	goto	l2568
  2187  0013F4                     l70:
  2188                           
  2189                           ;displayLCD.c: 299: EnderecoLCD = 0x00 + coluna;
  2190  0013F4  C012  F014         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
  2191                           
  2192                           ;displayLCD.c: 300: EnderecoCursor(EnderecoLCD);
  2193  0013F8  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  2194  0013FA  ECC0  F009         	call	_EnderecoCursor
  2195                           
  2196                           ;displayLCD.c: 301: break;
  2197  0013FE  D026               	goto	l77
  2198  001400                     l2552:
  2199                           
  2200                           ;displayLCD.c: 304: EnderecoLCD = 0x40 + coluna;
  2201  001400  5012               	movf	PosicaoCursorLCD@coluna,w,c
  2202  001402  0F40               	addlw	64
  2203  001404  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  2204                           
  2205                           ;displayLCD.c: 305: EnderecoCursor(EnderecoLCD);
  2206  001406  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  2207  001408  ECC0  F009         	call	_EnderecoCursor
  2208                           
  2209                           ;displayLCD.c: 306: break;
  2210  00140C  D01F               	goto	l77
  2211  00140E                     l2556:
  2212                           
  2213                           ;displayLCD.c: 309: EnderecoLCD = 0x14 + coluna;
  2214  00140E  5012               	movf	PosicaoCursorLCD@coluna,w,c
  2215  001410  0F14               	addlw	20
  2216  001412  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  2217                           
  2218                           ;displayLCD.c: 310: EnderecoCursor(EnderecoLCD);
  2219  001414  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  2220  001416  ECC0  F009         	call	_EnderecoCursor
  2221                           
  2222                           ;displayLCD.c: 311: break;
  2223  00141A  D018               	goto	l77
  2224  00141C                     l2560:
  2225                           
  2226                           ;displayLCD.c: 314: EnderecoLCD = 0x54 + coluna;
  2227  00141C  5012               	movf	PosicaoCursorLCD@coluna,w,c
  2228  00141E  0F54               	addlw	84
  2229  001420  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  2230                           
  2231                           ;displayLCD.c: 315: EnderecoCursor(EnderecoLCD);
  2232  001422  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  2233  001424  ECC0  F009         	call	_EnderecoCursor
  2234                           
  2235                           ;displayLCD.c: 316: break;
  2236  001428  D011               	goto	l77
  2237  00142A                     l2564:
  2238                           
  2239                           ;displayLCD.c: 319: EnderecoLCD = 0x00;
  2240  00142A  0E00               	movlw	0
  2241  00142C  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  2242                           
  2243                           ;displayLCD.c: 320: break;
  2244  00142E  D00E               	goto	l77
  2245  001430                     l2568:
  2246  001430  5013               	movf	PosicaoCursorLCD@linha,w,c
  2247                           
  2248                           ; Switch size 1, requested type "space"
  2249                           ; Number of cases is 4, Range of values is 1 to 4
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte           13     7 (average)
  2253                           ;	Chosen strategy is simple_byte
  2254  001432  0A01               	xorlw	1	; case 1
  2255  001434  B4D8               	btfsc	status,2,c
  2256  001436  D7DE               	goto	l70
  2257  001438  0A03               	xorlw	3	; case 2
  2258  00143A  B4D8               	btfsc	status,2,c
  2259  00143C  D7E1               	goto	l2552
  2260  00143E  0A01               	xorlw	1	; case 3
  2261  001440  B4D8               	btfsc	status,2,c
  2262  001442  D7E5               	goto	l2556
  2263  001444  0A07               	xorlw	7	; case 4
  2264  001446  B4D8               	btfsc	status,2,c
  2265  001448  D7E9               	goto	l2560
  2266  00144A  D7EF               	goto	l2564
  2267  00144C                     l77:
  2268  00144C  0012               	return	
  2269  00144E                     __end_of_PosicaoCursorLCD:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodh	equ	0xFF4
  2276                           prodl	equ	0xFF3
  2277                           intcon	equ	0xFF2
  2278                           intcon2	equ	0xFF1
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postinc1	equ	0xFE6
  2282                           postdec1	equ	0xFE5
  2283                           fsr1l	equ	0xFE1
  2284                           indf2	equ	0xFDF
  2285                           postinc2	equ	0xFDE
  2286                           postdec2	equ	0xFDD
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _EnderecoCursor *****************
  2292 ;; Defined at:
  2293 ;;		line 229 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  endereco        1    wreg     unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  endereco        1   16[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;		None               void
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0
  2308 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2310 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2311 ;;Total ram usage:        1 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    2
  2314 ;; This function calls:
  2315 ;;		_Delay
  2316 ;; This function is called by:
  2317 ;;		_PosicaoCursorLCD
  2318 ;;		_CriaCaractereLCD
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text7
  2323  001380                     __ptext7:
  2324                           	opt stack 0
  2325  001380                     _EnderecoCursor:
  2326                           	opt stack 26
  2327                           
  2328                           ;incstack = 0
  2329                           ;EnderecoCursor@endereco stored from wreg
  2330  001380  6E11               	movwf	EnderecoCursor@endereco,c
  2331                           
  2332                           ;displayLCD.c: 232: PORTDbits.RD2 = 0;
  2333  001382  9483               	bcf	3971,2,c	;volatile
  2334                           
  2335                           ;displayLCD.c: 233: PORTDbits.RD1 = 0;
  2336  001384  9283               	bcf	3971,1,c	;volatile
  2337                           
  2338                           ;displayLCD.c: 234: PORTDbits.RD0 = 0;
  2339  001386  9083               	bcf	3971,0,c	;volatile
  2340                           
  2341                           ;displayLCD.c: 237: PORTDbits.RD7 = 1;
  2342  001388  8E83               	bsf	3971,7,c	;volatile
  2343                           
  2344                           ;displayLCD.c: 238: if(endereco&0b00010000){PORTDbits.RD4=1;}
  2345  00138A  A811               	btfss	EnderecoCursor@endereco,4,c
  2346  00138C  D002               	goto	l51
  2347  00138E  8883               	bsf	3971,4,c	;volatile
  2348  001390  D001               	goto	l2476
  2349  001392                     l51:
  2350                           
  2351                           ;displayLCD.c: 239: else {PORTDbits.RD4=0;}
  2352  001392  9883               	bcf	3971,4,c	;volatile
  2353  001394                     l2476:
  2354                           
  2355                           ;displayLCD.c: 240: if(endereco&0b00100000){PORTDbits.RD5=1;}
  2356  001394  AA11               	btfss	EnderecoCursor@endereco,5,c
  2357  001396  D002               	goto	l53
  2358  001398  8A83               	bsf	3971,5,c	;volatile
  2359  00139A  D001               	goto	l2480
  2360  00139C                     l53:
  2361                           
  2362                           ;displayLCD.c: 241: else {PORTDbits.RD5=0;}
  2363  00139C  9A83               	bcf	3971,5,c	;volatile
  2364  00139E                     l2480:
  2365                           
  2366                           ;displayLCD.c: 242: if(endereco&0b01000000){PORTDbits.RD6=1;}
  2367  00139E  AC11               	btfss	EnderecoCursor@endereco,6,c
  2368  0013A0  D002               	goto	l55
  2369  0013A2  8C83               	bsf	3971,6,c	;volatile
  2370  0013A4  D001               	goto	l56
  2371  0013A6                     l55:
  2372                           
  2373                           ;displayLCD.c: 243: else {PORTDbits.RD6=0;}
  2374  0013A6  9C83               	bcf	3971,6,c	;volatile
  2375  0013A8                     l56:
  2376                           
  2377                           ;displayLCD.c: 246: PORTDbits.RD0 = 1;
  2378  0013A8  8083               	bsf	3971,0,c	;volatile
  2379                           
  2380                           ;displayLCD.c: 247: Delay();
  2381  0013AA  EC00  F00B         	call	_Delay	;wreg free
  2382                           
  2383                           ;displayLCD.c: 248: PORTDbits.RD0 = 0;
  2384  0013AE  9083               	bcf	3971,0,c	;volatile
  2385                           
  2386                           ;displayLCD.c: 249: Delay();
  2387  0013B0  EC00  F00B         	call	_Delay	;wreg free
  2388                           
  2389                           ;displayLCD.c: 252: if(endereco&0b00000001){PORTDbits.RD4=1;}
  2390  0013B4  A011               	btfss	EnderecoCursor@endereco,0,c
  2391  0013B6  D002               	goto	l57
  2392  0013B8  8883               	bsf	3971,4,c	;volatile
  2393  0013BA  D001               	goto	l58
  2394  0013BC                     l57:
  2395                           
  2396                           ;displayLCD.c: 253: else {PORTDbits.RD4=0;}
  2397  0013BC  9883               	bcf	3971,4,c	;volatile
  2398  0013BE                     l58:
  2399                           
  2400                           ;displayLCD.c: 254: if(endereco&0b00000010){PORTDbits.RD5=1;}
  2401  0013BE  A211               	btfss	EnderecoCursor@endereco,1,c
  2402  0013C0  D002               	goto	l59
  2403  0013C2  8A83               	bsf	3971,5,c	;volatile
  2404  0013C4  D001               	goto	l60
  2405  0013C6                     l59:
  2406                           
  2407                           ;displayLCD.c: 255: else {PORTDbits.RD5=0;}
  2408  0013C6  9A83               	bcf	3971,5,c	;volatile
  2409  0013C8                     l60:
  2410                           
  2411                           ;displayLCD.c: 256: if(endereco&0b00000100){PORTDbits.RD6=1;}
  2412  0013C8  A411               	btfss	EnderecoCursor@endereco,2,c
  2413  0013CA  D002               	goto	l61
  2414  0013CC  8C83               	bsf	3971,6,c	;volatile
  2415  0013CE  D001               	goto	l62
  2416  0013D0                     l61:
  2417                           
  2418                           ;displayLCD.c: 257: else {PORTDbits.RD6=0;}
  2419  0013D0  9C83               	bcf	3971,6,c	;volatile
  2420  0013D2                     l62:
  2421                           
  2422                           ;displayLCD.c: 258: if(endereco&0b00001000){PORTDbits.RD7=1;}
  2423  0013D2  A611               	btfss	EnderecoCursor@endereco,3,c
  2424  0013D4  D002               	goto	l63
  2425  0013D6  8E83               	bsf	3971,7,c	;volatile
  2426  0013D8  D001               	goto	l64
  2427  0013DA                     l63:
  2428                           
  2429                           ;displayLCD.c: 259: else {PORTDbits.RD7=0;}
  2430  0013DA  9E83               	bcf	3971,7,c	;volatile
  2431  0013DC                     l64:
  2432                           
  2433                           ;displayLCD.c: 262: PORTDbits.RD0 = 1;
  2434  0013DC  8083               	bsf	3971,0,c	;volatile
  2435                           
  2436                           ;displayLCD.c: 263: Delay();
  2437  0013DE  EC00  F00B         	call	_Delay	;wreg free
  2438                           
  2439                           ;displayLCD.c: 264: PORTDbits.RD0 = 0;
  2440  0013E2  9083               	bcf	3971,0,c	;volatile
  2441                           
  2442                           ;displayLCD.c: 265: Delay();
  2443  0013E4  EC00  F00B         	call	_Delay	;wreg free
  2444  0013E8  0012               	return	
  2445  0013EA                     __end_of_EnderecoCursor:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           intcon	equ	0xFF2
  2454                           intcon2	equ	0xFF1
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           postinc1	equ	0xFE6
  2458                           postdec1	equ	0xFE5
  2459                           fsr1l	equ	0xFE1
  2460                           indf2	equ	0xFDF
  2461                           postinc2	equ	0xFDE
  2462                           postdec2	equ	0xFDD
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _botao *****************
  2468 ;; Defined at:
  2469 ;;		line 102 in file "Mapas.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  bt              1    wreg     unsigned char 
  2472 ;;  valor           2   14[COMRAM] PTR unsigned int 
  2473 ;;		 -> TPS(2), RPM(2), 
  2474 ;;  inc_dec         1   16[COMRAM] unsigned char 
  2475 ;;  mem_aux         2   17[COMRAM] PTR unsigned char 
  2476 ;;		 -> maux2(1), maux1(1), 
  2477 ;;  lmin            2   19[COMRAM] unsigned int 
  2478 ;;  lmax            2   21[COMRAM] unsigned int 
  2479 ;;  taxa            2   23[COMRAM] PTR long 
  2480 ;;		 -> taxa_bt2(4), taxa_bt1(4), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  bt              1   29[COMRAM] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2492 ;;      Params:        11       0       0       0       0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2494 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2495 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2496 ;;Total ram usage:       16 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text8
  2507  000C80                     __ptext8:
  2508                           	opt stack 0
  2509  000C80                     _botao:
  2510                           	opt stack 29
  2511                           
  2512                           ;incstack = 0
  2513                           ;botao@bt stored from wreg
  2514  000C80  6E1E               	movwf	botao@bt,c
  2515                           
  2516                           ;Mapas.c: 112: if(bt == 0 && *mem_aux == 0)
  2517  000C82  661E               	tstfsz	botao@bt,c
  2518  000C84  D0A4               	goto	l2740
  2519  000C86  C012  FFD9         	movff	botao@mem_aux,fsr2l
  2520  000C8A  C013  FFDA         	movff	botao@mem_aux+1,fsr2h
  2521  000C8E  50DF               	movf	indf2,w,c
  2522  000C90  A4D8               	btfss	status,2,c
  2523  000C92  D09D               	goto	l2740
  2524                           
  2525                           ;Mapas.c: 113: {
  2526                           ;Mapas.c: 114: *mem_aux = 1;
  2527  000C94  C012  FFD9         	movff	botao@mem_aux,fsr2l
  2528  000C98  C013  FFDA         	movff	botao@mem_aux+1,fsr2h
  2529  000C9C  0E01               	movlw	1
  2530  000C9E  6EDF               	movwf	indf2,c
  2531                           
  2532                           ;Mapas.c: 115: *taxa = tickCount + taxaBotao;
  2533  000CA0  5045               	movf	_taxaBotao,w,c
  2534  000CA2  2423               	addwf	_tickCount,w,c
  2535  000CA4  6E1A               	movwf	??_botao& (0+255),c
  2536  000CA6  5046               	movf	_taxaBotao+1,w,c
  2537  000CA8  2024               	addwfc	_tickCount+1,w,c
  2538  000CAA  6E1B               	movwf	(??_botao+1)& (0+255),c
  2539  000CAC  5047               	movf	_taxaBotao+2,w,c
  2540  000CAE  2025               	addwfc	_tickCount+2,w,c
  2541  000CB0  6E1C               	movwf	(??_botao+2)& (0+255),c
  2542  000CB2  5048               	movf	_taxaBotao+3,w,c
  2543  000CB4  2026               	addwfc	_tickCount+3,w,c
  2544  000CB6  6E1D               	movwf	(??_botao+3)& (0+255),c
  2545  000CB8  C018  FFD9         	movff	botao@taxa,fsr2l
  2546  000CBC  C019  FFDA         	movff	botao@taxa+1,fsr2h
  2547  000CC0  C01A  FFDE         	movff	??_botao,postinc2
  2548  000CC4  C01B  FFDE         	movff	??_botao+1,postinc2
  2549  000CC8  C01C  FFDE         	movff	??_botao+2,postinc2
  2550  000CCC  C01D  FFDD         	movff	??_botao+3,postdec2
  2551  000CD0  06D9               	decf	fsr2l,f,c
  2552  000CD2  06D9               	decf	fsr2l,f,c
  2553                           
  2554                           ;Mapas.c: 117: if(inc_dec == 0)
  2555  000CD4  6611               	tstfsz	botao@inc_dec,c
  2556  000CD6  D033               	goto	l2730
  2557                           
  2558                           ;Mapas.c: 118: {
  2559                           ;Mapas.c: 119: *valor = *valor+rate;
  2560  000CD8  C00F  FFD9         	movff	botao@valor,fsr2l
  2561  000CDC  C010  FFDA         	movff	botao@valor+1,fsr2h
  2562  000CE0  CFDE F01A          	movff	postinc2,??_botao
  2563  000CE4  CFDD F01B          	movff	postdec2,??_botao+1
  2564  000CE8  5041               	movf	_rate,w,c
  2565  000CEA  261A               	addwf	??_botao,f,c
  2566  000CEC  5042               	movf	_rate+1,w,c
  2567  000CEE  221B               	addwfc	??_botao+1,f,c
  2568  000CF0  C00F  FFD9         	movff	botao@valor,fsr2l
  2569  000CF4  C010  FFDA         	movff	botao@valor+1,fsr2h
  2570  000CF8  C01A  FFDE         	movff	??_botao,postinc2
  2571  000CFC  C01B  FFDD         	movff	??_botao+1,postdec2
  2572                           
  2573                           ;Mapas.c: 120: rate = 1;
  2574  000D00  0E01               	movlw	1
  2575  000D02  6E41               	movwf	_rate,c
  2576  000D04  0E00               	movlw	0
  2577  000D06  6E42               	movwf	_rate+1,c
  2578  000D08  0E00               	movlw	0
  2579  000D0A  6E43               	movwf	_rate+2,c
  2580  000D0C  0E00               	movlw	0
  2581  000D0E  6E44               	movwf	_rate+3,c
  2582                           
  2583                           ;Mapas.c: 121: if(*valor > lmax)
  2584  000D10  C00F  FFD9         	movff	botao@valor,fsr2l
  2585  000D14  C010  FFDA         	movff	botao@valor+1,fsr2h
  2586  000D18  CFDE F01A          	movff	postinc2,??_botao
  2587  000D1C  CFDD F01B          	movff	postdec2,??_botao+1
  2588  000D20  501A               	movf	??_botao,w,c
  2589  000D22  5C16               	subwf	botao@lmax,w,c
  2590  000D24  501B               	movf	??_botao+1,w,c
  2591  000D26  5817               	subwfb	botao@lmax+1,w,c
  2592  000D28  B0D8               	btfsc	status,0,c
  2593  000D2A  D051               	goto	l2740
  2594                           
  2595                           ;Mapas.c: 122: {
  2596                           ;Mapas.c: 123: *valor = lmax;
  2597  000D2C  C00F  FFD9         	movff	botao@valor,fsr2l
  2598  000D30  C010  FFDA         	movff	botao@valor+1,fsr2h
  2599  000D34  C016  FFDE         	movff	botao@lmax,postinc2
  2600  000D38  C017  FFDD         	movff	botao@lmax+1,postdec2
  2601  000D3C  D048               	goto	l2740
  2602  000D3E                     l2730:
  2603                           
  2604                           ;Mapas.c: 127: else
  2605                           ;Mapas.c: 128: {
  2606                           ;Mapas.c: 129: *valor = *valor -rate;
  2607  000D3E  C00F  FFD9         	movff	botao@valor,fsr2l
  2608  000D42  C010  FFDA         	movff	botao@valor+1,fsr2h
  2609  000D46  CFDE F01A          	movff	postinc2,??_botao
  2610  000D4A  CFDD F01B          	movff	postdec2,??_botao+1
  2611  000D4E  C041  F01C         	movff	_rate,??_botao+2
  2612  000D52  C042  F01D         	movff	_rate+1,??_botao+3
  2613  000D56  1E1C               	comf	??_botao+2,f,c
  2614  000D58  1E1D               	comf	??_botao+3,f,c
  2615  000D5A  4A1C               	infsnz	??_botao+2,f,c
  2616  000D5C  2A1D               	incf	??_botao+3,f,c
  2617  000D5E  501A               	movf	??_botao,w,c
  2618  000D60  261C               	addwf	??_botao+2,f,c
  2619  000D62  501B               	movf	??_botao+1,w,c
  2620  000D64  221D               	addwfc	??_botao+3,f,c
  2621  000D66  C00F  FFD9         	movff	botao@valor,fsr2l
  2622  000D6A  C010  FFDA         	movff	botao@valor+1,fsr2h
  2623  000D6E  C01C  FFDE         	movff	??_botao+2,postinc2
  2624  000D72  C01D  FFDD         	movff	??_botao+3,postdec2
  2625                           
  2626                           ;Mapas.c: 130: rate = 1;
  2627  000D76  0E01               	movlw	1
  2628  000D78  6E41               	movwf	_rate,c
  2629  000D7A  0E00               	movlw	0
  2630  000D7C  6E42               	movwf	_rate+1,c
  2631  000D7E  0E00               	movlw	0
  2632  000D80  6E43               	movwf	_rate+2,c
  2633  000D82  0E00               	movlw	0
  2634  000D84  6E44               	movwf	_rate+3,c
  2635                           
  2636                           ;Mapas.c: 131: if(*valor < lmin || *valor > lmax)
  2637  000D86  C00F  FFD9         	movff	botao@valor,fsr2l
  2638  000D8A  C010  FFDA         	movff	botao@valor+1,fsr2h
  2639  000D8E  CFDE F01A          	movff	postinc2,??_botao
  2640  000D92  CFDD F01B          	movff	postdec2,??_botao+1
  2641  000D96  5014               	movf	botao@lmin,w,c
  2642  000D98  5C1A               	subwf	??_botao,w,c
  2643  000D9A  5015               	movf	botao@lmin+1,w,c
  2644  000D9C  581B               	subwfb	??_botao+1,w,c
  2645  000D9E  A0D8               	btfss	status,0,c
  2646  000DA0  D00E               	goto	l2738
  2647  000DA2  C00F  FFD9         	movff	botao@valor,fsr2l
  2648  000DA6  C010  FFDA         	movff	botao@valor+1,fsr2h
  2649  000DAA  CFDE F01A          	movff	postinc2,??_botao
  2650  000DAE  CFDD F01B          	movff	postdec2,??_botao+1
  2651  000DB2  501A               	movf	??_botao,w,c
  2652  000DB4  5C16               	subwf	botao@lmax,w,c
  2653  000DB6  501B               	movf	??_botao+1,w,c
  2654  000DB8  5817               	subwfb	botao@lmax+1,w,c
  2655  000DBA  B0D8               	btfsc	status,0,c
  2656  000DBC  D008               	goto	l2740
  2657  000DBE                     l2738:
  2658                           
  2659                           ;Mapas.c: 132: {
  2660                           ;Mapas.c: 133: *valor = lmin;
  2661  000DBE  C00F  FFD9         	movff	botao@valor,fsr2l
  2662  000DC2  C010  FFDA         	movff	botao@valor+1,fsr2h
  2663  000DC6  C014  FFDE         	movff	botao@lmin,postinc2
  2664  000DCA  C015  FFDD         	movff	botao@lmin+1,postdec2
  2665  000DCE                     l2740:
  2666                           
  2667                           ;Mapas.c: 134: }
  2668                           ;Mapas.c: 135: }
  2669                           ;Mapas.c: 136: }
  2670                           ;Mapas.c: 137: if(bt == 1 && *mem_aux == 1)
  2671  000DCE  041E               	decf	botao@bt,w,c
  2672  000DD0  A4D8               	btfss	status,2,c
  2673  000DD2  D015               	goto	l2748
  2674  000DD4  0E01               	movlw	1
  2675  000DD6  C012  FFD9         	movff	botao@mem_aux,fsr2l
  2676  000DDA  C013  FFDA         	movff	botao@mem_aux+1,fsr2h
  2677  000DDE  62DF               	cpfseq	indf2,c
  2678  000DE0  D00E               	goto	l2748
  2679                           
  2680                           ;Mapas.c: 138: {
  2681                           ;Mapas.c: 139: *mem_aux = 0;
  2682  000DE2  C012  FFD9         	movff	botao@mem_aux,fsr2l
  2683  000DE6  C013  FFDA         	movff	botao@mem_aux+1,fsr2h
  2684  000DEA  0E00               	movlw	0
  2685  000DEC  6EDF               	movwf	indf2,c
  2686                           
  2687                           ;Mapas.c: 140: taxaBotao = taxaRep;
  2688  000DEE  C049  F045         	movff	_taxaRep,_taxaBotao
  2689  000DF2  C04A  F046         	movff	_taxaRep+1,_taxaBotao+1
  2690  000DF6  C04B  F047         	movff	_taxaRep+2,_taxaBotao+2
  2691  000DFA  C04C  F048         	movff	_taxaRep+3,_taxaBotao+3
  2692  000DFE                     l2748:
  2693                           
  2694                           ;Mapas.c: 141: }
  2695                           ;Mapas.c: 142: if((bt == 0) && (tickCount > *taxa))
  2696  000DFE  661E               	tstfsz	botao@bt,c
  2697  000E00  D02C               	goto	l237
  2698  000E02  C018  FFD9         	movff	botao@taxa,fsr2l
  2699  000E06  C019  FFDA         	movff	botao@taxa+1,fsr2h
  2700  000E0A  CFDE F01A          	movff	postinc2,??_botao
  2701  000E0E  CFDE F01B          	movff	postinc2,??_botao+1
  2702  000E12  CFDE F01C          	movff	postinc2,??_botao+2
  2703  000E16  CFDE F01D          	movff	postinc2,??_botao+3
  2704  000E1A  5023               	movf	_tickCount,w,c
  2705  000E1C  5C1A               	subwf	??_botao,w,c
  2706  000E1E  5024               	movf	_tickCount+1,w,c
  2707  000E20  581B               	subwfb	??_botao+1,w,c
  2708  000E22  5025               	movf	_tickCount+2,w,c
  2709  000E24  581C               	subwfb	??_botao+2,w,c
  2710  000E26  5026               	movf	_tickCount+3,w,c
  2711  000E28  581D               	subwfb	??_botao+3,w,c
  2712  000E2A  B0D8               	btfsc	status,0,c
  2713  000E2C  D016               	goto	l237
  2714                           
  2715                           ;Mapas.c: 143: {
  2716                           ;Mapas.c: 144: *mem_aux = 0;
  2717  000E2E  C012  FFD9         	movff	botao@mem_aux,fsr2l
  2718  000E32  C013  FFDA         	movff	botao@mem_aux+1,fsr2h
  2719  000E36  0E00               	movlw	0
  2720  000E38  6EDF               	movwf	indf2,c
  2721                           
  2722                           ;Mapas.c: 145: rate = 100;
  2723  000E3A  0E64               	movlw	100
  2724  000E3C  6E41               	movwf	_rate,c
  2725  000E3E  0E00               	movlw	0
  2726  000E40  6E42               	movwf	_rate+1,c
  2727  000E42  0E00               	movlw	0
  2728  000E44  6E43               	movwf	_rate+2,c
  2729  000E46  0E00               	movlw	0
  2730  000E48  6E44               	movwf	_rate+3,c
  2731                           
  2732                           ;Mapas.c: 146: taxaBotao = 100;
  2733  000E4A  0E64               	movlw	100
  2734  000E4C  6E45               	movwf	_taxaBotao,c
  2735  000E4E  0E00               	movlw	0
  2736  000E50  6E46               	movwf	_taxaBotao+1,c
  2737  000E52  0E00               	movlw	0
  2738  000E54  6E47               	movwf	_taxaBotao+2,c
  2739  000E56  0E00               	movlw	0
  2740  000E58  6E48               	movwf	_taxaBotao+3,c
  2741  000E5A                     l237:
  2742  000E5A  0012               	return	
  2743  000E5C                     __end_of_botao:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           intcon2	equ	0xFF1
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           postinc1	equ	0xFE6
  2756                           postdec1	equ	0xFE5
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function ___wmul *****************
  2766 ;; Defined at:
  2767 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  multiplier      2   14[COMRAM] unsigned int 
  2770 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  product         2   18[COMRAM] unsigned int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2   14[COMRAM] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, prodl, prodh
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         4       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2785 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:        6 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;;		_sprintf
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text9
  2798  001594                     __ptext9:
  2799                           	opt stack 0
  2800  001594                     ___wmul:
  2801                           	opt stack 29
  2802                           
  2803                           ;incstack = 0
  2804  001594  500F               	movf	___wmul@multiplier,w,c
  2805  001596  0211               	mulwf	___wmul@multiplicand,c
  2806  001598  CFF3 F013          	movff	prodl,___wmul@product
  2807  00159C  CFF4 F014          	movff	prodh,___wmul@product+1
  2808  0015A0  500F               	movf	___wmul@multiplier,w,c
  2809  0015A2  0212               	mulwf	___wmul@multiplicand+1,c
  2810  0015A4  50F3               	movf	prodl,w,c
  2811  0015A6  2614               	addwf	___wmul@product+1,f,c
  2812  0015A8  5010               	movf	___wmul@multiplier+1,w,c
  2813  0015AA  0211               	mulwf	___wmul@multiplicand,c
  2814  0015AC  50F3               	movf	prodl,w,c
  2815  0015AE  2614               	addwf	___wmul@product+1,f,c
  2816  0015B0  C013  F00F         	movff	___wmul@product,?___wmul
  2817  0015B4  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2818  0015B8  0012               	return	
  2819  0015BA                     __end_of___wmul:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           intcon2	equ	0xFF1
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postinc1	equ	0xFE6
  2832                           postdec1	equ	0xFE5
  2833                           fsr1l	equ	0xFE1
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function ___lmul *****************
  2842 ;; Defined at:
  2843 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  multiplier      4   14[COMRAM] unsigned long 
  2846 ;;  multiplicand    4   18[COMRAM] unsigned long 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  product         4   22[COMRAM] unsigned long 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  4   14[COMRAM] unsigned long 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         8       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2861 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:       12 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text10
  2873  0014AA                     __ptext10:
  2874                           	opt stack 0
  2875  0014AA                     ___lmul:
  2876                           	opt stack 29
  2877                           
  2878                           ;incstack = 0
  2879  0014AA  0E00               	movlw	0
  2880  0014AC  6E17               	movwf	___lmul@product,c
  2881  0014AE  0E00               	movlw	0
  2882  0014B0  6E18               	movwf	___lmul@product+1,c
  2883  0014B2  0E00               	movlw	0
  2884  0014B4  6E19               	movwf	___lmul@product+2,c
  2885  0014B6  0E00               	movlw	0
  2886  0014B8  6E1A               	movwf	___lmul@product+3,c
  2887  0014BA                     l2922:
  2888  0014BA  A00F               	btfss	___lmul@multiplier,0,c
  2889  0014BC  D008               	goto	l2926
  2890  0014BE  5013               	movf	___lmul@multiplicand,w,c
  2891  0014C0  2617               	addwf	___lmul@product,f,c
  2892  0014C2  5014               	movf	___lmul@multiplicand+1,w,c
  2893  0014C4  2218               	addwfc	___lmul@product+1,f,c
  2894  0014C6  5015               	movf	___lmul@multiplicand+2,w,c
  2895  0014C8  2219               	addwfc	___lmul@product+2,f,c
  2896  0014CA  5016               	movf	___lmul@multiplicand+3,w,c
  2897  0014CC  221A               	addwfc	___lmul@product+3,f,c
  2898  0014CE                     l2926:
  2899  0014CE  90D8               	bcf	status,0,c
  2900  0014D0  3613               	rlcf	___lmul@multiplicand,f,c
  2901  0014D2  3614               	rlcf	___lmul@multiplicand+1,f,c
  2902  0014D4  3615               	rlcf	___lmul@multiplicand+2,f,c
  2903  0014D6  3616               	rlcf	___lmul@multiplicand+3,f,c
  2904  0014D8  90D8               	bcf	status,0,c
  2905  0014DA  3212               	rrcf	___lmul@multiplier+3,f,c
  2906  0014DC  3211               	rrcf	___lmul@multiplier+2,f,c
  2907  0014DE  3210               	rrcf	___lmul@multiplier+1,f,c
  2908  0014E0  320F               	rrcf	___lmul@multiplier,f,c
  2909  0014E2  5012               	movf	___lmul@multiplier+3,w,c
  2910  0014E4  100F               	iorwf	___lmul@multiplier,w,c
  2911  0014E6  1010               	iorwf	___lmul@multiplier+1,w,c
  2912  0014E8  1011               	iorwf	___lmul@multiplier+2,w,c
  2913  0014EA  A4D8               	btfss	status,2,c
  2914  0014EC  D7E6               	goto	l2922
  2915  0014EE  C017  F00F         	movff	___lmul@product,?___lmul
  2916  0014F2  C018  F010         	movff	___lmul@product+1,?___lmul+1
  2917  0014F6  C019  F011         	movff	___lmul@product+2,?___lmul+2
  2918  0014FA  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  2919  0014FE  0012               	return	
  2920  001500                     __end_of___lmul:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           intcon2	equ	0xFF1
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           postinc1	equ	0xFE6
  2933                           postdec1	equ	0xFE5
  2934                           fsr1l	equ	0xFE1
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function ___lldiv *****************
  2943 ;; Defined at:
  2944 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  dividend        4   26[COMRAM] unsigned long 
  2947 ;;  divisor         4   30[COMRAM] unsigned long 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  quotient        4    0[BANK0 ] unsigned long 
  2950 ;;  counter         1    4[BANK0 ] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  4   26[COMRAM] unsigned long 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         8       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         8       5       0       0       0       0       0       0       0
  2964 ;;Total ram usage:       13 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;;		_sprintf
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text11
  2976  0010D0                     __ptext11:
  2977                           	opt stack 0
  2978  0010D0                     ___lldiv:
  2979                           	opt stack 29
  2980                           
  2981                           ;incstack = 0
  2982  0010D0  0E00               	movlw	0
  2983  0010D2  0100               	movlb	0	; () banked
  2984  0010D4  6F60               	movwf	___lldiv@quotient& (0+255),b
  2985  0010D6  0E00               	movlw	0
  2986  0010D8  0100               	movlb	0	; () banked
  2987  0010DA  6F61               	movwf	(___lldiv@quotient+1)& (0+255),b
  2988  0010DC  0E00               	movlw	0
  2989  0010DE  0100               	movlb	0	; () banked
  2990  0010E0  6F62               	movwf	(___lldiv@quotient+2)& (0+255),b
  2991  0010E2  0E00               	movlw	0
  2992  0010E4  0100               	movlb	0	; () banked
  2993  0010E6  6F63               	movwf	(___lldiv@quotient+3)& (0+255),b
  2994                           
  2995                           ; BSR set to: 0
  2996  0010E8  5022               	movf	___lldiv@divisor+3,w,c
  2997  0010EA  101F               	iorwf	___lldiv@divisor,w,c
  2998  0010EC  1020               	iorwf	___lldiv@divisor+1,w,c
  2999  0010EE  1021               	iorwf	___lldiv@divisor+2,w,c
  3000  0010F0  B4D8               	btfsc	status,2,c
  3001  0010F2  D033               	goto	l802
  3002                           
  3003                           ; BSR set to: 0
  3004  0010F4  0E01               	movlw	1
  3005  0010F6  0100               	movlb	0	; () banked
  3006  0010F8  6F64               	movwf	___lldiv@counter& (0+255),b
  3007  0010FA  D007               	goto	l2938
  3008  0010FC                     l2936:
  3009                           
  3010                           ; BSR set to: 0
  3011  0010FC  90D8               	bcf	status,0,c
  3012  0010FE  361F               	rlcf	___lldiv@divisor,f,c
  3013  001100  3620               	rlcf	___lldiv@divisor+1,f,c
  3014  001102  3621               	rlcf	___lldiv@divisor+2,f,c
  3015  001104  3622               	rlcf	___lldiv@divisor+3,f,c
  3016  001106  0100               	movlb	0	; () banked
  3017  001108  2B64               	incf	___lldiv@counter& (0+255),f,b
  3018  00110A                     l2938:
  3019                           
  3020                           ; BSR set to: 0
  3021  00110A  AE22               	btfss	___lldiv@divisor+3,7,c
  3022  00110C  D7F7               	goto	l2936
  3023  00110E                     l2940:
  3024                           
  3025                           ; BSR set to: 0
  3026  00110E  0100               	movlb	0	; () banked
  3027  001110  90D8               	bcf	status,0,c
  3028  001112  0100               	movlb	0	; () banked
  3029  001114  3760               	rlcf	___lldiv@quotient& (0+255),f,b
  3030  001116  0100               	movlb	0	; () banked
  3031  001118  3761               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3032  00111A  0100               	movlb	0	; () banked
  3033  00111C  3762               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3034  00111E  0100               	movlb	0	; () banked
  3035  001120  3763               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3036                           
  3037                           ; BSR set to: 0
  3038  001122  501F               	movf	___lldiv@divisor,w,c
  3039  001124  5C1B               	subwf	___lldiv@dividend,w,c
  3040  001126  5020               	movf	___lldiv@divisor+1,w,c
  3041  001128  581C               	subwfb	___lldiv@dividend+1,w,c
  3042  00112A  5021               	movf	___lldiv@divisor+2,w,c
  3043  00112C  581D               	subwfb	___lldiv@dividend+2,w,c
  3044  00112E  5022               	movf	___lldiv@divisor+3,w,c
  3045  001130  581E               	subwfb	___lldiv@dividend+3,w,c
  3046  001132  A0D8               	btfss	status,0,c
  3047  001134  D00A               	goto	l2948
  3048                           
  3049                           ; BSR set to: 0
  3050  001136  501F               	movf	___lldiv@divisor,w,c
  3051  001138  5E1B               	subwf	___lldiv@dividend,f,c
  3052  00113A  5020               	movf	___lldiv@divisor+1,w,c
  3053  00113C  5A1C               	subwfb	___lldiv@dividend+1,f,c
  3054  00113E  5021               	movf	___lldiv@divisor+2,w,c
  3055  001140  5A1D               	subwfb	___lldiv@dividend+2,f,c
  3056  001142  5022               	movf	___lldiv@divisor+3,w,c
  3057  001144  5A1E               	subwfb	___lldiv@dividend+3,f,c
  3058                           
  3059                           ; BSR set to: 0
  3060  001146  0100               	movlb	0	; () banked
  3061  001148  8160               	bsf	___lldiv@quotient& (0+255),0,b
  3062  00114A                     l2948:
  3063                           
  3064                           ; BSR set to: 0
  3065  00114A  90D8               	bcf	status,0,c
  3066  00114C  3222               	rrcf	___lldiv@divisor+3,f,c
  3067  00114E  3221               	rrcf	___lldiv@divisor+2,f,c
  3068  001150  3220               	rrcf	___lldiv@divisor+1,f,c
  3069  001152  321F               	rrcf	___lldiv@divisor,f,c
  3070                           
  3071                           ; BSR set to: 0
  3072  001154  0100               	movlb	0	; () banked
  3073  001156  2F64               	decfsz	___lldiv@counter& (0+255),f,b
  3074  001158  D7DA               	goto	l2940
  3075  00115A                     l802:
  3076                           
  3077                           ; BSR set to: 0
  3078  00115A  C060  F01B         	movff	___lldiv@quotient,?___lldiv
  3079  00115E  C061  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  3080  001162  C062  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  3081  001166  C063  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  3082                           
  3083                           ; BSR set to: 0
  3084  00116A  0012               	return	
  3085  00116C                     __end_of___lldiv:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           postinc1	equ	0xFE6
  3098                           postdec1	equ	0xFE5
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _EscreveFraseRamLCD *****************
  3108 ;; Defined at:
  3109 ;;		line 438 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  3112 ;;		 -> main@Texto_3(17), main@Texto_2(17), main@Texto_1(17), main@Texto_0(17), 
  3113 ;;		 -> EscreveInteiroLCD@texto(7), 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3125 ;;      Params:         2       0       0       0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3128 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3129 ;;Total ram usage:        2 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    3
  3132 ;; This function calls:
  3133 ;;		_EscreveCaractereLCD
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;;		_EscreveInteiroLCD
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text12
  3141  0015BA                     __ptext12:
  3142                           	opt stack 0
  3143  0015BA                     _EscreveFraseRamLCD:
  3144                           	opt stack 27
  3145                           
  3146                           ;displayLCD.c: 440: while(*buffer)
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;incstack = 0
  3150  0015BA  D009               	goto	l2704
  3151  0015BC                     l2700:
  3152                           
  3153                           ;displayLCD.c: 441: {
  3154                           ;displayLCD.c: 442: EscreveCaractereLCD(*buffer);
  3155  0015BC  C012  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  3156  0015C0  C013  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  3157  0015C4  50DF               	movf	indf2,w,c
  3158  0015C6  EC87  F009         	call	_EscreveCaractereLCD
  3159                           
  3160                           ;displayLCD.c: 443: buffer++;
  3161  0015CA  4A12               	infsnz	EscreveFraseRamLCD@buffer,f,c
  3162  0015CC  2A13               	incf	EscreveFraseRamLCD@buffer+1,f,c
  3163  0015CE                     l2704:
  3164  0015CE  C012  FFD9         	movff	EscreveFraseRamLCD@buffer,fsr2l
  3165  0015D2  C013  FFDA         	movff	EscreveFraseRamLCD@buffer+1,fsr2h
  3166  0015D6  50DF               	movf	indf2,w,c
  3167  0015D8  B4D8               	btfsc	status,2,c
  3168  0015DA  0012               	return	
  3169  0015DC  D7EF               	goto	l2700
  3170  0015DE                     __end_of_EscreveFraseRamLCD:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           intcon2	equ	0xFF1
  3180                           postinc0	equ	0xFEE
  3181                           wreg	equ	0xFE8
  3182                           postinc1	equ	0xFE6
  3183                           postdec1	equ	0xFE5
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           postinc2	equ	0xFDE
  3187                           postdec2	equ	0xFDD
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _EscreveCaractereLCD *****************
  3193 ;; Defined at:
  3194 ;;		line 339 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  data            1    wreg     unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  data            1   16[COMRAM] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0
  3209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3211 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        1 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    2
  3215 ;; This function calls:
  3216 ;;		_Delay
  3217 ;; This function is called by:
  3218 ;;		_EscreveFraseRamLCD
  3219 ;;		_byte_ascii
  3220 ;;		_word_ascii
  3221 ;;		_EscreveFloatLCD
  3222 ;;		_EscreveFraseLCD
  3223 ;;		_CriaCaractereLCD
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text13
  3228  00130E                     __ptext13:
  3229                           	opt stack 0
  3230  00130E                     _EscreveCaractereLCD:
  3231                           	opt stack 27
  3232                           
  3233                           ;incstack = 0
  3234                           ;EscreveCaractereLCD@data stored from wreg
  3235  00130E  6E11               	movwf	EscreveCaractereLCD@data,c
  3236                           
  3237                           ;displayLCD.c: 342: PORTDbits.RD2 = 0;
  3238  001310  9483               	bcf	3971,2,c	;volatile
  3239                           
  3240                           ;displayLCD.c: 343: PORTDbits.RD1 = 1;
  3241  001312  8283               	bsf	3971,1,c	;volatile
  3242                           
  3243                           ;displayLCD.c: 344: PORTDbits.RD0 = 0;
  3244  001314  9083               	bcf	3971,0,c	;volatile
  3245                           
  3246                           ;displayLCD.c: 347: if(data&0b00010000){PORTDbits.RD4=1;}
  3247  001316  A811               	btfss	EscreveCaractereLCD@data,4,c
  3248  001318  D002               	goto	l80
  3249  00131A  8883               	bsf	3971,4,c	;volatile
  3250  00131C  D001               	goto	l2578
  3251  00131E                     l80:
  3252                           
  3253                           ;displayLCD.c: 348: else {PORTDbits.RD4=0;}
  3254  00131E  9883               	bcf	3971,4,c	;volatile
  3255  001320                     l2578:
  3256                           
  3257                           ;displayLCD.c: 349: if(data&0b00100000){PORTDbits.RD5=1;}
  3258  001320  AA11               	btfss	EscreveCaractereLCD@data,5,c
  3259  001322  D002               	goto	l82
  3260  001324  8A83               	bsf	3971,5,c	;volatile
  3261  001326  D001               	goto	l2582
  3262  001328                     l82:
  3263                           
  3264                           ;displayLCD.c: 350: else {PORTDbits.RD5=0;}
  3265  001328  9A83               	bcf	3971,5,c	;volatile
  3266  00132A                     l2582:
  3267                           
  3268                           ;displayLCD.c: 351: if(data&0b01000000){PORTDbits.RD6=1;}
  3269  00132A  AC11               	btfss	EscreveCaractereLCD@data,6,c
  3270  00132C  D002               	goto	l84
  3271  00132E  8C83               	bsf	3971,6,c	;volatile
  3272  001330  D001               	goto	l2586
  3273  001332                     l84:
  3274                           
  3275                           ;displayLCD.c: 352: else {PORTDbits.RD6=0;}
  3276  001332  9C83               	bcf	3971,6,c	;volatile
  3277  001334                     l2586:
  3278                           
  3279                           ;displayLCD.c: 353: if(data&0b10000000){PORTDbits.RD7=1;}
  3280  001334  AE11               	btfss	EscreveCaractereLCD@data,7,c
  3281  001336  D002               	goto	l86
  3282  001338  8E83               	bsf	3971,7,c	;volatile
  3283  00133A  D001               	goto	l87
  3284  00133C                     l86:
  3285                           
  3286                           ;displayLCD.c: 354: else {PORTDbits.RD7=0;}
  3287  00133C  9E83               	bcf	3971,7,c	;volatile
  3288  00133E                     l87:
  3289                           
  3290                           ;displayLCD.c: 357: PORTDbits.RD0 = 1;
  3291  00133E  8083               	bsf	3971,0,c	;volatile
  3292                           
  3293                           ;displayLCD.c: 358: Delay();
  3294  001340  EC00  F00B         	call	_Delay	;wreg free
  3295                           
  3296                           ;displayLCD.c: 359: PORTDbits.RD0 = 0;
  3297  001344  9083               	bcf	3971,0,c	;volatile
  3298                           
  3299                           ;displayLCD.c: 360: Delay();
  3300  001346  EC00  F00B         	call	_Delay	;wreg free
  3301                           
  3302                           ;displayLCD.c: 364: if(data&0b00000001){PORTDbits.RD4=1;}
  3303  00134A  A011               	btfss	EscreveCaractereLCD@data,0,c
  3304  00134C  D002               	goto	l88
  3305  00134E  8883               	bsf	3971,4,c	;volatile
  3306  001350  D001               	goto	l89
  3307  001352                     l88:
  3308                           
  3309                           ;displayLCD.c: 365: else {PORTDbits.RD4=0;}
  3310  001352  9883               	bcf	3971,4,c	;volatile
  3311  001354                     l89:
  3312                           
  3313                           ;displayLCD.c: 366: if(data&0b00000010){PORTDbits.RD5=1;}
  3314  001354  A211               	btfss	EscreveCaractereLCD@data,1,c
  3315  001356  D002               	goto	l90
  3316  001358  8A83               	bsf	3971,5,c	;volatile
  3317  00135A  D001               	goto	l91
  3318  00135C                     l90:
  3319                           
  3320                           ;displayLCD.c: 367: else {PORTDbits.RD5=0;}
  3321  00135C  9A83               	bcf	3971,5,c	;volatile
  3322  00135E                     l91:
  3323                           
  3324                           ;displayLCD.c: 368: if(data&0b00000100){PORTDbits.RD6=1;}
  3325  00135E  A411               	btfss	EscreveCaractereLCD@data,2,c
  3326  001360  D002               	goto	l92
  3327  001362  8C83               	bsf	3971,6,c	;volatile
  3328  001364  D001               	goto	l93
  3329  001366                     l92:
  3330                           
  3331                           ;displayLCD.c: 369: else {PORTDbits.RD6=0;}
  3332  001366  9C83               	bcf	3971,6,c	;volatile
  3333  001368                     l93:
  3334                           
  3335                           ;displayLCD.c: 370: if(data&0b00001000){PORTDbits.RD7=1;}
  3336  001368  A611               	btfss	EscreveCaractereLCD@data,3,c
  3337  00136A  D002               	goto	l94
  3338  00136C  8E83               	bsf	3971,7,c	;volatile
  3339  00136E  D001               	goto	l95
  3340  001370                     l94:
  3341                           
  3342                           ;displayLCD.c: 371: else {PORTDbits.RD7=0;}
  3343  001370  9E83               	bcf	3971,7,c	;volatile
  3344  001372                     l95:
  3345                           
  3346                           ;displayLCD.c: 374: PORTDbits.RD0 = 1;
  3347  001372  8083               	bsf	3971,0,c	;volatile
  3348                           
  3349                           ;displayLCD.c: 375: Delay();
  3350  001374  EC00  F00B         	call	_Delay	;wreg free
  3351                           
  3352                           ;displayLCD.c: 376: PORTDbits.RD0 = 0;
  3353  001378  9083               	bcf	3971,0,c	;volatile
  3354                           
  3355                           ;displayLCD.c: 377: Delay();
  3356  00137A  EC00  F00B         	call	_Delay	;wreg free
  3357  00137E  0012               	return	
  3358  001380                     __end_of_EscreveCaractereLCD:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           intcon2	equ	0xFF1
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postinc1	equ	0xFE6
  3371                           postdec1	equ	0xFE5
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           postinc2	equ	0xFDE
  3375                           postdec2	equ	0xFDD
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _ConfiguraLCD *****************
  3381 ;; Defined at:
  3382 ;;		line 80 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    3
  3403 ;; This function calls:
  3404 ;;		_Delay
  3405 ;;		_EscreveComandoLCD
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text14
  3412  001032                     __ptext14:
  3413                           	opt stack 0
  3414  001032                     _ConfiguraLCD:
  3415                           	opt stack 27
  3416                           
  3417                           ;displayLCD.c: 83: TRISDbits.RD2 = 0;
  3418                           
  3419                           ;incstack = 0
  3420  001032  9495               	bcf	3989,2,c	;volatile
  3421                           
  3422                           ;displayLCD.c: 84: TRISDbits.RD1 = 0;
  3423  001034  9295               	bcf	3989,1,c	;volatile
  3424                           
  3425                           ;displayLCD.c: 85: TRISDbits.RD0 = 0;
  3426  001036  9095               	bcf	3989,0,c	;volatile
  3427                           
  3428                           ;displayLCD.c: 88: TRISDbits.RD4=0;
  3429  001038  9895               	bcf	3989,4,c	;volatile
  3430                           
  3431                           ;displayLCD.c: 89: TRISDbits.RD5=0;
  3432  00103A  9A95               	bcf	3989,5,c	;volatile
  3433                           
  3434                           ;displayLCD.c: 90: TRISDbits.RD6=0;
  3435  00103C  9C95               	bcf	3989,6,c	;volatile
  3436                           
  3437                           ;displayLCD.c: 91: TRISDbits.RD7=0;
  3438  00103E  9E95               	bcf	3989,7,c	;volatile
  3439                           
  3440                           ;displayLCD.c: 98: PORTDbits.RD2 = 0;
  3441  001040  9483               	bcf	3971,2,c	;volatile
  3442                           
  3443                           ;displayLCD.c: 99: PORTDbits.RD1 = 0;
  3444  001042  9283               	bcf	3971,1,c	;volatile
  3445                           
  3446                           ;displayLCD.c: 100: PORTDbits.RD0 = 0;
  3447  001044  9083               	bcf	3971,0,c	;volatile
  3448                           
  3449                           ;displayLCD.c: 104: PORTDbits.RD7=0;
  3450  001046  9E83               	bcf	3971,7,c	;volatile
  3451                           
  3452                           ;displayLCD.c: 105: PORTDbits.RD6=0;
  3453  001048  9C83               	bcf	3971,6,c	;volatile
  3454                           
  3455                           ;displayLCD.c: 106: PORTDbits.RD5=1;
  3456  00104A  8A83               	bsf	3971,5,c	;volatile
  3457                           
  3458                           ;displayLCD.c: 107: PORTDbits.RD4=1;
  3459  00104C  8883               	bsf	3971,4,c	;volatile
  3460                           
  3461                           ;displayLCD.c: 112: _delay((unsigned long)((15)*(48000000/4000.0)));
  3462  00104E  0EEA               	movlw	234
  3463  001050  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  3464  001052  0EC3               	movlw	195
  3465  001054                     u3237:
  3466  001054  2EE8               	decfsz	wreg,f,c
  3467  001056  D7FE               	goto	u3237
  3468  001058  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  3469  00105A  D7FC               	goto	u3237
  3470  00105C  F000               	nop	
  3471                           
  3472                           ;displayLCD.c: 116: PORTDbits.RD0 = 1;
  3473  00105E  8083               	bsf	3971,0,c	;volatile
  3474                           
  3475                           ;displayLCD.c: 117: Delay();
  3476  001060  EC00  F00B         	call	_Delay	;wreg free
  3477                           
  3478                           ;displayLCD.c: 118: PORTDbits.RD0 = 0;
  3479  001064  9083               	bcf	3971,0,c	;volatile
  3480                           
  3481                           ;displayLCD.c: 119: Delay();
  3482  001066  EC00  F00B         	call	_Delay	;wreg free
  3483                           
  3484                           ;displayLCD.c: 124: _delay((unsigned long)((5)*(48000000/4000.0)));
  3485  00106A  0E4E               	movlw	78
  3486  00106C  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  3487  00106E  0EEB               	movlw	235
  3488  001070                     u3247:
  3489  001070  2EE8               	decfsz	wreg,f,c
  3490  001072  D7FE               	goto	u3247
  3491  001074  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  3492  001076  D7FC               	goto	u3247
  3493  001078  F000               	nop	
  3494                           
  3495                           ;displayLCD.c: 127: PORTDbits.RD0 = 1;
  3496  00107A  8083               	bsf	3971,0,c	;volatile
  3497                           
  3498                           ;displayLCD.c: 128: Delay();
  3499  00107C  EC00  F00B         	call	_Delay	;wreg free
  3500                           
  3501                           ;displayLCD.c: 129: PORTDbits.RD0 = 0;
  3502  001080  9083               	bcf	3971,0,c	;volatile
  3503                           
  3504                           ;displayLCD.c: 130: Delay();
  3505  001082  EC00  F00B         	call	_Delay	;wreg free
  3506                           
  3507                           ;displayLCD.c: 135: _delay((unsigned long)((5)*(48000000/4000.0)));
  3508  001086  0E4E               	movlw	78
  3509  001088  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  3510  00108A  0EEB               	movlw	235
  3511  00108C                     u3257:
  3512  00108C  2EE8               	decfsz	wreg,f,c
  3513  00108E  D7FE               	goto	u3257
  3514  001090  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  3515  001092  D7FC               	goto	u3257
  3516  001094  F000               	nop	
  3517                           
  3518                           ;displayLCD.c: 138: PORTDbits.RD0 = 1;
  3519  001096  8083               	bsf	3971,0,c	;volatile
  3520                           
  3521                           ;displayLCD.c: 139: Delay();
  3522  001098  EC00  F00B         	call	_Delay	;wreg free
  3523                           
  3524                           ;displayLCD.c: 140: PORTDbits.RD0 = 0;
  3525  00109C  9083               	bcf	3971,0,c	;volatile
  3526                           
  3527                           ;displayLCD.c: 141: Delay();
  3528  00109E  EC00  F00B         	call	_Delay	;wreg free
  3529                           
  3530                           ;displayLCD.c: 144: PORTDbits.RD7=0;
  3531  0010A2  9E83               	bcf	3971,7,c	;volatile
  3532                           
  3533                           ;displayLCD.c: 145: PORTDbits.RD6=0;
  3534  0010A4  9C83               	bcf	3971,6,c	;volatile
  3535                           
  3536                           ;displayLCD.c: 146: PORTDbits.RD5=1;
  3537  0010A6  8A83               	bsf	3971,5,c	;volatile
  3538                           
  3539                           ;displayLCD.c: 147: PORTDbits.RD4=0;
  3540  0010A8  9883               	bcf	3971,4,c	;volatile
  3541                           
  3542                           ;displayLCD.c: 151: PORTDbits.RD0 = 1;
  3543  0010AA  8083               	bsf	3971,0,c	;volatile
  3544                           
  3545                           ;displayLCD.c: 152: Delay();
  3546  0010AC  EC00  F00B         	call	_Delay	;wreg free
  3547                           
  3548                           ;displayLCD.c: 153: PORTDbits.RD0 = 0;
  3549  0010B0  9083               	bcf	3971,0,c	;volatile
  3550                           
  3551                           ;displayLCD.c: 154: Delay();
  3552  0010B2  EC00  F00B         	call	_Delay	;wreg free
  3553                           
  3554                           ;displayLCD.c: 158: EscreveComandoLCD(0b00101000);
  3555  0010B6  0E28               	movlw	40
  3556  0010B8  EC42  F009         	call	_EscreveComandoLCD
  3557                           
  3558                           ;displayLCD.c: 159: EscreveComandoLCD(0b00000110);
  3559  0010BC  0E06               	movlw	6
  3560  0010BE  EC42  F009         	call	_EscreveComandoLCD
  3561                           
  3562                           ;displayLCD.c: 160: EscreveComandoLCD(0b00001110);
  3563  0010C2  0E0E               	movlw	14
  3564  0010C4  EC42  F009         	call	_EscreveComandoLCD
  3565                           
  3566                           ;displayLCD.c: 161: EscreveComandoLCD(0b00000001);
  3567  0010C8  0E01               	movlw	1
  3568  0010CA  EC42  F009         	call	_EscreveComandoLCD
  3569  0010CE  0012               	return	
  3570  0010D0                     __end_of_ConfiguraLCD:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           intcon2	equ	0xFF1
  3580                           postinc0	equ	0xFEE
  3581                           wreg	equ	0xFE8
  3582                           postinc1	equ	0xFE6
  3583                           postdec1	equ	0xFE5
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _EscreveComandoLCD *****************
  3593 ;; Defined at:
  3594 ;;		line 172 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  cmd             1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  cmd             1   16[COMRAM] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;		None               void
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0
  3609 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3611 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3612 ;;Total ram usage:        1 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    2
  3615 ;; This function calls:
  3616 ;;		_Delay
  3617 ;; This function is called by:
  3618 ;;		_ConfiguraLCD
  3619 ;;		_main
  3620 ;;		_CriaCaractereLCD
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text15
  3625  001284                     __ptext15:
  3626                           	opt stack 0
  3627  001284                     _EscreveComandoLCD:
  3628                           	opt stack 28
  3629                           
  3630                           ;incstack = 0
  3631                           ;EscreveComandoLCD@cmd stored from wreg
  3632  001284  6E11               	movwf	EscreveComandoLCD@cmd,c
  3633                           
  3634                           ;displayLCD.c: 175: PORTDbits.RD2 = 0;
  3635  001286  9483               	bcf	3971,2,c	;volatile
  3636                           
  3637                           ;displayLCD.c: 176: PORTDbits.RD1 = 0;
  3638  001288  9283               	bcf	3971,1,c	;volatile
  3639                           
  3640                           ;displayLCD.c: 177: PORTDbits.RD0 = 0;
  3641  00128A  9083               	bcf	3971,0,c	;volatile
  3642                           
  3643                           ;displayLCD.c: 180: if(cmd&0b00010000){PORTDbits.RD4=1;}
  3644  00128C  A811               	btfss	EscreveComandoLCD@cmd,4,c
  3645  00128E  D002               	goto	l29
  3646  001290  8883               	bsf	3971,4,c	;volatile
  3647  001292  D001               	goto	l2508
  3648  001294                     l29:
  3649                           
  3650                           ;displayLCD.c: 181: else {PORTDbits.RD4=0;}
  3651  001294  9883               	bcf	3971,4,c	;volatile
  3652  001296                     l2508:
  3653                           
  3654                           ;displayLCD.c: 182: if(cmd&0b00100000){PORTDbits.RD5=1;}
  3655  001296  AA11               	btfss	EscreveComandoLCD@cmd,5,c
  3656  001298  D002               	goto	l31
  3657  00129A  8A83               	bsf	3971,5,c	;volatile
  3658  00129C  D001               	goto	l2512
  3659  00129E                     l31:
  3660                           
  3661                           ;displayLCD.c: 183: else {PORTDbits.RD5=0;}
  3662  00129E  9A83               	bcf	3971,5,c	;volatile
  3663  0012A0                     l2512:
  3664                           
  3665                           ;displayLCD.c: 184: if(cmd&0b01000000){PORTDbits.RD6=1;}
  3666  0012A0  AC11               	btfss	EscreveComandoLCD@cmd,6,c
  3667  0012A2  D002               	goto	l33
  3668  0012A4  8C83               	bsf	3971,6,c	;volatile
  3669  0012A6  D001               	goto	l2516
  3670  0012A8                     l33:
  3671                           
  3672                           ;displayLCD.c: 185: else {PORTDbits.RD6=0;}
  3673  0012A8  9C83               	bcf	3971,6,c	;volatile
  3674  0012AA                     l2516:
  3675                           
  3676                           ;displayLCD.c: 186: if(cmd&0b10000000){PORTDbits.RD7=1;}
  3677  0012AA  AE11               	btfss	EscreveComandoLCD@cmd,7,c
  3678  0012AC  D002               	goto	l35
  3679  0012AE  8E83               	bsf	3971,7,c	;volatile
  3680  0012B0  D001               	goto	l36
  3681  0012B2                     l35:
  3682                           
  3683                           ;displayLCD.c: 187: else {PORTDbits.RD7=0;}
  3684  0012B2  9E83               	bcf	3971,7,c	;volatile
  3685  0012B4                     l36:
  3686                           
  3687                           ;displayLCD.c: 190: PORTDbits.RD0 = 1;
  3688  0012B4  8083               	bsf	3971,0,c	;volatile
  3689                           
  3690                           ;displayLCD.c: 191: Delay();
  3691  0012B6  EC00  F00B         	call	_Delay	;wreg free
  3692                           
  3693                           ;displayLCD.c: 192: PORTDbits.RD0 = 0;
  3694  0012BA  9083               	bcf	3971,0,c	;volatile
  3695                           
  3696                           ;displayLCD.c: 193: Delay();
  3697  0012BC  EC00  F00B         	call	_Delay	;wreg free
  3698                           
  3699                           ;displayLCD.c: 196: if(cmd&0b00000001){PORTDbits.RD4=1;}
  3700  0012C0  A011               	btfss	EscreveComandoLCD@cmd,0,c
  3701  0012C2  D002               	goto	l37
  3702  0012C4  8883               	bsf	3971,4,c	;volatile
  3703  0012C6  D001               	goto	l38
  3704  0012C8                     l37:
  3705                           
  3706                           ;displayLCD.c: 197: else {PORTDbits.RD4=0;}
  3707  0012C8  9883               	bcf	3971,4,c	;volatile
  3708  0012CA                     l38:
  3709                           
  3710                           ;displayLCD.c: 198: if(cmd&0b00000010){PORTDbits.RD5=1;}
  3711  0012CA  A211               	btfss	EscreveComandoLCD@cmd,1,c
  3712  0012CC  D002               	goto	l39
  3713  0012CE  8A83               	bsf	3971,5,c	;volatile
  3714  0012D0  D001               	goto	l40
  3715  0012D2                     l39:
  3716                           
  3717                           ;displayLCD.c: 199: else {PORTDbits.RD5=0;}
  3718  0012D2  9A83               	bcf	3971,5,c	;volatile
  3719  0012D4                     l40:
  3720                           
  3721                           ;displayLCD.c: 200: if(cmd&0b00000100){PORTDbits.RD6=1;}
  3722  0012D4  A411               	btfss	EscreveComandoLCD@cmd,2,c
  3723  0012D6  D002               	goto	l41
  3724  0012D8  8C83               	bsf	3971,6,c	;volatile
  3725  0012DA  D001               	goto	l42
  3726  0012DC                     l41:
  3727                           
  3728                           ;displayLCD.c: 201: else {PORTDbits.RD6=0;}
  3729  0012DC  9C83               	bcf	3971,6,c	;volatile
  3730  0012DE                     l42:
  3731                           
  3732                           ;displayLCD.c: 202: if(cmd&0b00001000){PORTDbits.RD7=1;}
  3733  0012DE  A611               	btfss	EscreveComandoLCD@cmd,3,c
  3734  0012E0  D002               	goto	l43
  3735  0012E2  8E83               	bsf	3971,7,c	;volatile
  3736  0012E4  D001               	goto	l44
  3737  0012E6                     l43:
  3738                           
  3739                           ;displayLCD.c: 203: else {PORTDbits.RD7=0;}
  3740  0012E6  9E83               	bcf	3971,7,c	;volatile
  3741  0012E8                     l44:
  3742                           
  3743                           ;displayLCD.c: 206: PORTDbits.RD0 = 1;
  3744  0012E8  8083               	bsf	3971,0,c	;volatile
  3745                           
  3746                           ;displayLCD.c: 207: Delay();
  3747  0012EA  EC00  F00B         	call	_Delay	;wreg free
  3748                           
  3749                           ;displayLCD.c: 208: PORTDbits.RD0 = 0;
  3750  0012EE  9083               	bcf	3971,0,c	;volatile
  3751                           
  3752                           ;displayLCD.c: 209: Delay();
  3753  0012F0  EC00  F00B         	call	_Delay	;wreg free
  3754                           
  3755                           ;displayLCD.c: 214: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  3756  0012F4  0411               	decf	EscreveComandoLCD@cmd,w,c
  3757  0012F6  B4D8               	btfsc	status,2,c
  3758  0012F8  D007               	goto	l2544
  3759  0012FA  5011               	movf	EscreveComandoLCD@cmd,w,c
  3760  0012FC  0A02               	xorlw	2
  3761  0012FE  B4D8               	btfsc	status,2,c
  3762  001300  D003               	goto	l2544
  3763  001302  5011               	movf	EscreveComandoLCD@cmd,w,c
  3764  001304  0A03               	xorlw	3
  3765  001306  B4D8               	btfsc	status,2,c
  3766  001308                     l2544:
  3767                           
  3768                           ;displayLCD.c: 215: { Delay(); }
  3769  001308  EC00  F00B         	call	_Delay	;wreg free
  3770  00130C  0012               	return	
  3771  00130E                     __end_of_EscreveComandoLCD:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           prodh	equ	0xFF4
  3778                           prodl	equ	0xFF3
  3779                           intcon	equ	0xFF2
  3780                           intcon2	equ	0xFF1
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postinc1	equ	0xFE6
  3784                           postdec1	equ	0xFE5
  3785                           fsr1l	equ	0xFE1
  3786                           indf2	equ	0xFDF
  3787                           postinc2	equ	0xFDE
  3788                           postdec2	equ	0xFDD
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _Delay *****************
  3794 ;; Defined at:
  3795 ;;		line 54 in file "../Bibliotecas XC8 - FATEC/displayLCD.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  Cnt2            1   15[COMRAM] unsigned char 
  3800 ;;  Cnt1            1   14[COMRAM] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0
  3811 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3813 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3814 ;;Total ram usage:        2 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_ConfiguraLCD
  3821 ;;		_EscreveComandoLCD
  3822 ;;		_EnderecoCursor
  3823 ;;		_EscreveCaractereLCD
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text16
  3828  001600                     __ptext16:
  3829                           	opt stack 0
  3830  001600                     _Delay:
  3831                           	opt stack 26
  3832                           
  3833                           ;displayLCD.c: 56: unsigned char Cnt1, Cnt2;
  3834                           ;displayLCD.c: 58: for(Cnt1 = 0; Cnt1<30; Cnt1++)
  3835                           
  3836                           ;incstack = 0
  3837  001600  0E00               	movlw	0
  3838  001602  6E0F               	movwf	Delay@Cnt1,c
  3839  001604  D00A               	goto	L1
  3840  001606                     l19:
  3841                           
  3842                           ;displayLCD.c: 59: {
  3843                           ;displayLCD.c: 60: __nop();
  3844  001606  F000               	nop	
  3845                           
  3846                           ;displayLCD.c: 61: for(Cnt2 = 0; Cnt2<30; Cnt2++)
  3847  001608  0E00               	movlw	0
  3848  00160A  6E10               	movwf	Delay@Cnt2,c
  3849  00160C  D002               	goto	L2
  3850  00160E                     l21:
  3851                           
  3852                           ;displayLCD.c: 62: {
  3853                           ;displayLCD.c: 63: __nop();
  3854  00160E  F000               	nop	
  3855  001610  2A10               	incf	Delay@Cnt2,f,c
  3856  001612                     L2:
  3857  001612  0E1D               	movlw	29
  3858  001614  6410               	cpfsgt	Delay@Cnt2,c
  3859  001616  D7FB               	goto	l21
  3860  001618  2A0F               	incf	Delay@Cnt1,f,c
  3861  00161A                     L1:
  3862  00161A  0E1D               	movlw	29
  3863  00161C  640F               	cpfsgt	Delay@Cnt1,c
  3864  00161E  D7F3               	goto	l19
  3865  001620  0012               	return	
  3866  001622                     __end_of_Delay:
  3867                           	opt stack 0
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           intcon2	equ	0xFF1
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           postinc1	equ	0xFE6
  3879                           postdec1	equ	0xFE5
  3880                           fsr1l	equ	0xFE1
  3881                           indf2	equ	0xFDF
  3882                           postinc2	equ	0xFDE
  3883                           postdec2	equ	0xFDD
  3884                           fsr2h	equ	0xFDA
  3885                           fsr2l	equ	0xFD9
  3886                           status	equ	0xFD8
  3887                           
  3888 ;; *************** function _Interrupcoes *****************
  3889 ;; Defined at:
  3890 ;;		line 80 in file "Mapas.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3904 ;;      Params:         0       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3906 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3907 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:       14 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		Interrupt level 2
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	intcode
  3918  000008                     __pintcode:
  3919                           	opt stack 0
  3920  000008                     _Interrupcoes:
  3921                           	opt stack 26
  3922                           
  3923                           ;incstack = 0
  3924  000008  CFFA F001          	movff	pclath,??_Interrupcoes
  3925  00000C  CFFB F002          	movff	pclatu,??_Interrupcoes+1
  3926  000010  CFE9 F003          	movff	fsr0l,??_Interrupcoes+2
  3927  000014  EDFC  F008         	call	int_func,f	;refresh shadow registers
  3928                           pclatu	equ	0xFFB
  3929                           pclath	equ	0xFFA
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           intcon2	equ	0xFF1
  3938                           postinc0	equ	0xFEE
  3939                           fsr0l	equ	0xFE9
  3940                           wreg	equ	0xFE8
  3941                           postinc1	equ	0xFE6
  3942                           postdec1	equ	0xFE5
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           postdec2	equ	0xFDD
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951                           	psect	intcode_body
  3952  0011F8                     __pintcode_body:
  3953                           	opt stack 26
  3954  0011F8                     int_func:
  3955                           	opt stack 26
  3956  0011F8  0006               	pop		; remove dummy address from shadow register refresh
  3957  0011FA  CFEA F004          	movff	fsr0h,??_Interrupcoes+3
  3958  0011FE  CFE1 F005          	movff	fsr1l,??_Interrupcoes+4
  3959  001202  CFE2 F006          	movff	fsr1h,??_Interrupcoes+5
  3960  001206  CFD9 F007          	movff	fsr2l,??_Interrupcoes+6
  3961  00120A  CFDA F008          	movff	fsr2h,??_Interrupcoes+7
  3962  00120E  CFF3 F009          	movff	prodl,??_Interrupcoes+8
  3963  001212  CFF4 F00A          	movff	prodh,??_Interrupcoes+9
  3964  001216  CFF6 F00B          	movff	tblptrl,??_Interrupcoes+10
  3965  00121A  CFF7 F00C          	movff	tblptrh,??_Interrupcoes+11
  3966  00121E  CFF8 F00D          	movff	tblptru,??_Interrupcoes+12
  3967  001222  CFF5 F00E          	movff	tablat,??_Interrupcoes+13
  3968                           
  3969                           ;Mapas.c: 82: if(INTCONbits.TMR0IF == 1)
  3970  001226  A4F2               	btfss	intcon,2,c	;volatile
  3971  001228  D010               	goto	i2l225
  3972                           
  3973                           ;Mapas.c: 83: {
  3974                           ;Mapas.c: 85: INTCONbits.TMR0IF = 0;
  3975  00122A  94F2               	bcf	intcon,2,c	;volatile
  3976                           
  3977                           ;Mapas.c: 86: tickTime++;
  3978  00122C  0E01               	movlw	1
  3979  00122E  2627               	addwf	_tickTime,f,c
  3980  001230  0E00               	movlw	0
  3981  001232  2228               	addwfc	_tickTime+1,f,c
  3982  001234  2229               	addwfc	_tickTime+2,f,c
  3983  001236  222A               	addwfc	_tickTime+3,f,c
  3984                           
  3985                           ;Mapas.c: 87: tickCount++;
  3986  001238  0E01               	movlw	1
  3987  00123A  2623               	addwf	_tickCount,f,c
  3988  00123C  0E00               	movlw	0
  3989  00123E  2224               	addwfc	_tickCount+1,f,c
  3990  001240  2225               	addwfc	_tickCount+2,f,c
  3991  001242  2226               	addwfc	_tickCount+3,f,c
  3992                           
  3993                           ;Mapas.c: 90: TMR0L = 107 + TMR0L;
  3994  001244  50D6               	movf	4054,w,c	;volatile
  3995  001246  0F6B               	addlw	107
  3996  001248  6ED6               	movwf	4054,c	;volatile
  3997  00124A                     i2l225:
  3998  00124A  C00E  FFF5         	movff	??_Interrupcoes+13,tablat
  3999  00124E  C00D  FFF8         	movff	??_Interrupcoes+12,tblptru
  4000  001252  C00C  FFF7         	movff	??_Interrupcoes+11,tblptrh
  4001  001256  C00B  FFF6         	movff	??_Interrupcoes+10,tblptrl
  4002  00125A  C00A  FFF4         	movff	??_Interrupcoes+9,prodh
  4003  00125E  C009  FFF3         	movff	??_Interrupcoes+8,prodl
  4004  001262  C008  FFDA         	movff	??_Interrupcoes+7,fsr2h
  4005  001266  C007  FFD9         	movff	??_Interrupcoes+6,fsr2l
  4006  00126A  C006  FFE2         	movff	??_Interrupcoes+5,fsr1h
  4007  00126E  C005  FFE1         	movff	??_Interrupcoes+4,fsr1l
  4008  001272  C004  FFEA         	movff	??_Interrupcoes+3,fsr0h
  4009  001276  C003  FFE9         	movff	??_Interrupcoes+2,fsr0l
  4010  00127A  C002  FFFB         	movff	??_Interrupcoes+1,pclatu
  4011  00127E  C001  FFFA         	movff	??_Interrupcoes,pclath
  4012  001282  0011               	retfie		f
  4013  001284                     __end_of_Interrupcoes:
  4014                           	opt stack 0
  4015                           pclatu	equ	0xFFB
  4016                           pclath	equ	0xFFA
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           intcon2	equ	0xFF1
  4025                           postinc0	equ	0xFEE
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           wreg	equ	0xFE8
  4029                           postinc1	equ	0xFE6
  4030                           postdec1	equ	0xFE5
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           postinc2	equ	0xFDE
  4035                           postdec2	equ	0xFDD
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           pclatu	equ	0xFFB
  4040                           pclath	equ	0xFFA
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           intcon2	equ	0xFF1
  4049                           postinc0	equ	0xFEE
  4050                           fsr0h	equ	0xFEA
  4051                           fsr0l	equ	0xFE9
  4052                           wreg	equ	0xFE8
  4053                           postinc1	equ	0xFE6
  4054                           postdec1	equ	0xFE5
  4055                           fsr1h	equ	0xFE2
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           postinc2	equ	0xFDE
  4059                           postdec2	equ	0xFDD
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064                           	psect	rparam
  4065  0000                     pclatu	equ	0xFFB
  4066                           pclath	equ	0xFFA
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           intcon2	equ	0xFF1
  4075                           postinc0	equ	0xFEE
  4076                           fsr0h	equ	0xFEA
  4077                           fsr0l	equ	0xFE9
  4078                           wreg	equ	0xFE8
  4079                           postinc1	equ	0xFE6
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           postinc2	equ	0xFDE
  4085                           postdec2	equ	0xFDD
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    108
    Data        107
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      77
    BANK0           160     24      36
    BANK1           256    148     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    S733$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    botao@valor	PTR unsigned int  size(2) Largest target is 2
		 -> TPS(BANK0[2]), RPM(BANK0[2]), 

    botao@taxa	PTR long  size(2) Largest target is 4
		 -> taxa_bt2(COMRAM[4]), taxa_bt1(COMRAM[4]), 

    botao@mem_aux	PTR unsigned char  size(2) Largest target is 1
		 -> maux2(BANK0[1]), maux1(BANK0[1]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@Texto_3(BANK1[17]), main@Texto_2(BANK1[17]), main@Texto_1(BANK1[17]), main@Texto_0(BANK1[17]), 
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->___lldiv
    _word_ascii->___lwdiv
    _byte_ascii->___lwdiv
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    ___lldiv->___lmul
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _Interrupcoes in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_word_ascii

Critical Paths under _Interrupcoes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcoes in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcoes in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcoes in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupcoes in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupcoes in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupcoes in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupcoes in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               160   160      0   16025
                                             12 BANK0     12    12      0
                                              0 BANK1    148   148      0
                       _ConfiguraLCD
                  _EscreveComandoLCD
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
                            ___lldiv
                             ___lmul
                            ___lwdiv
                             ___wmul
                              _botao
                         _byte_ascii
                           _delay_ms
                         _word_ascii
 ---------------------------------------------------------------------------------
 (1) _word_ascii                                          19    14      5    4143
                                             21 COMRAM     7     2      5
                                              0 BANK0     12    12      0
                _EscreveCaractereLCD
                   _PosicaoCursorLCD
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     161
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _byte_ascii                                          10     5      5    3809
                                             21 COMRAM    10     5      5
                _EscreveCaractereLCD
                   _PosicaoCursorLCD
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     590
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     957
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _PosicaoCursorLCD                                     3     2      1    1046
                                             17 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (3) _EnderecoCursor                                       1     1      0     353
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _botao                                               16     5     11    2335
                                             14 COMRAM    16     5     11
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     558
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     486
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     469
                                             26 COMRAM     8     0      8
                                              0 BANK0      5     5      0
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _EscreveFraseRamLCD                                   2     0      2     774
                                             17 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveCaractereLCD                                  1     1      0     384
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     613
                                             17 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (1) _EscreveComandoLCD                                    1     1      0     477
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     2      0     136
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupcoes                                        14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _EscreveComandoLCD
     _Delay
   _EscreveFraseRamLCD
     _EscreveCaractereLCD
       _Delay
   _PosicaoCursorLCD
     _EnderecoCursor
       _Delay
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
   ___wmul
   _botao
   _byte_ascii
     _EscreveCaractereLCD
       _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
     ___lwdiv
     ___lwmod
   _delay_ms
   _word_ascii
     _EscreveCaractereLCD
       _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
     ___lwdiv
     ___lwmod
     ___wmul (ARG)

 _Interrupcoes (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     94     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      24       5       22.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      4D       1       81.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     171      20        0.0%
DATA                 0      0     171       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Aug 12 08:07:08 2020

                botao@inc_dec 0011                  botao@mem_aux 0012                            l21 160E  
                          l31 129E                            l40 12D4                            l41 12DC  
                          l33 12A8                            l42 12DE                            l19 1606  
                          l43 12E6                            l35 12B2                            l51 1392  
                          l44 12E8                            l36 12B4                            l60 13C8  
                          l37 12C8                            l29 1294                            l61 13D0  
                          l53 139C                            l38 12CA                            l62 13D2  
                          l70 13F4                            l39 12D2                            l63 13DA  
                          l55 13A6                            l80 131E                            l64 13DC  
                          l56 13A8                            l57 13BC                            l90 135C  
                          l82 1328                            l58 13BE                            l91 135E  
                          l59 13C6                            l92 1366                            l84 1332  
                          l93 1368                            l77 144C                            l94 1370  
                          l86 133C                            l95 1372                            l87 133E  
                          l88 1352                            l89 1354           ___wmul@multiplicand 0011  
                         l237 0E5A                           l802 115A                           l865 1548  
                         l875 158A                           _RPM 0081                           _TPS 007E  
                 main@Texto_0 0150                   main@Texto_1 0161                   main@Texto_2 0172  
                 main@Texto_3 0183                           fsr2 000FD9                           _run 0038  
                         prod 000FF3                           wreg 000FE8                          l3124 0A48  
                        l3118 09A6                          l2512 12A0                          l3128 0AE4  
                        l2516 12AA                          l2508 1296                          l2700 15BC  
                        l2614 1516                          l2710 15F0                          l2544 1308  
                        l2704 15CE                          l2480 139E                          l2560 141C  
                        l2552 1400                          l2616 151E                          l2800 0F50  
                        l2730 0D3E                          l2626 153E                          l2618 1522  
                        l2642 1580                          l2634 1560                          l2740 0DCE  
                        l2476 1394                          l2564 142A                          l2556 140E  
                        l2636 1568                          l2708 15E0                          l2804 0F70  
                        l2582 132A                          l2638 156C                          l2568 1430  
                        l2586 1334                          l2578 1320                          l2922 14BA  
                        l2738 0DBE                          l2762 0F9A                          l2940 110E  
                        l2748 0DFE                          l2772 1006                          l2780 102A  
                        l2926 14CE                          l2790 0F00                          l2936 10FC  
                        l2776 1012                          l2768 0FE2                          l2784 0EA6  
                        l2938 110A                          l2948 114A                          l2796 0F42  
                        STR_1 086D                          u3100 08C8                          u3110 08E0  
                        _LATB 000F8A                          _LATD 000F8C                          u3121 08F4  
                        u3140 09E6                          u3150 0A28                          u3160 0A84  
                        u3080 0898                          u3170 0AC6                          u3146 09E8  
                        u3090 08B0                          u3227 15E6                          u3156 0A2A  
                        u3237 1054                          u3166 0A86                          u3247 1070  
                        u3176 0AC8                          u3257 108C                          u3185 0B26  
                        _main 087A                          _rate 0041                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0018               byte_ascii@ASCII 001B    __end_of_EscreveFraseRamLCD 15DE  
             byte_ascii@linha 0018                         ?_main 0001               __end_of___lldiv 116C  
             __end_of___lwdiv 1552               __end_of___lwmod 1594                         i2l225 124A  
                       _TMR0L 000FD6                         _TRISB 000F93                         _TRISE 000F96  
                       _Delay 1600           ___lmul@multiplicand 0013                         _R_aux 007A  
                       _T_aux 002B                         _borda 0037                         _botao 0C80  
             __end_of_dpowers 0829                         _maux1 0083                         _maux2 0080  
                       _linha 0033                         _teste 004D                         _start 0035  
        EscreveComandoLCD@cmd 0011                         tablat 000FF5                         status 000FD8  
             __initialization 116C                  __end_of_main 0C80                        ??_main 006C  
        __end_of_ConfiguraLCD 10D0              byte_ascii@coluna 0019                 __activetblptr 000002  
           _EscreveComandoLCD 1284                        ?_Delay 0001            ?_EscreveComandoLCD 0001  
                      ?_botao 000F                        _ADCON1 000FC1           ??_EscreveComandoLCD 0011  
               ?_Interrupcoes 0001                   byte_ascii@A 0016                   byte_ascii@i 001E  
                 byte_ascii@j 001F              __end_of_delay_ms 1600                        ___lmul 14AA  
           ?_PosicaoCursorLCD 0012                        ___wmul 1594                     ??___lldiv 0023  
                   ??___lwdiv 0013  __size_of_EscreveCaractereLCD 0072                     ??___lwmod 0013  
                      _coluna 0078            ??_PosicaoCursorLCD 0013                        clear_0 1172  
                      clear_1 117E                        clear_2 118A     __end_of_EscreveComandoLCD 130E  
                __pdataCOMRAM 0041                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8       __size_of_EnderecoCursor 006A  
              ??_Interrupcoes 0001                    __accesstop 0060       __end_of__initialization 11EE  
               __end_of_Delay 1622                __pcstackCOMRAM 0001                  __pidataBANK0 162F  
                __pidataBANK1 144E                 __end_of_botao 0E5C                       ??_Delay 000F  
      byte_ascii@pontoDecimal 001A                       ??_botao 001A                    __pbssBANK0 0078  
                  __pbssBANK1 01EF                    _decremento 002D        word_ascii@pontoDecimal 001A  
                     ?___lmul 000F         __size_of_ConfiguraLCD 009E                       ?___wmul 000F  
              ___lmul@product 0017    __size_of_EscreveComandoLCD 008A            _EscreveFraseRamLCD 15BA  
                   ?_delay_ms 000F           ?_EscreveFraseRamLCD 0012               word_ascii@ASCII 0060  
                _ConfiguraLCD 1032                       __Hparam 0000                       __Lparam 0000  
                  _incremento 0031                    _byte_ascii 0F7A               word_ascii@linha 0018  
             __size_of___lmul 0056                       ___lldiv 10D0               __size_of___wmul 0026  
                     ___lwdiv 1500                       ___lwmod 1552          ??_EscreveFraseRamLCD 0014  
                __psmallconst 0800                       __pcinit 116C                       __ramtop 0800  
                     __ptext0 087A                       __ptext1 0E5C                       __ptext2 15DE  
                     __ptext3 0F7A                       __ptext4 1552                       __ptext5 1500  
                     __ptext6 13EA                       __ptext7 1380                       __ptext8 0C80  
                     __ptext9 1594          __end_of_Interrupcoes 1284                     _T0CONbits 000FD5  
                     _dpowers 0801                       _taxaRep 0049                    ??_delay_ms 0011  
              _EnderecoCursor 1380                     Delay@Cnt1 000F                     Delay@Cnt2 0010  
                     botao@bt 001E                __pintcode_body 11F8           _EscreveCaractereLCD 130E  
        end_of_initialization 11EE                       ftoa@buf 01EF                 __Lmediumconst 0000  
                     int_func 11F8             __end_ofmain@F5461 085C             __end_ofmain@F5463 086D  
           __end_ofmain@F5457 083A             __end_ofmain@F5459 084B               ___lldiv@divisor 001F  
             ___lldiv@counter 0064                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
        ?_EscreveCaractereLCD 0001   PosicaoCursorLCD@EnderecoLCD 0014                     _PORTDbits 000F83  
                   _PORTEbits 000F84        __end_of_EnderecoCursor 13EA                     _TRISDbits 000F95  
   __size_of_PosicaoCursorLCD 0064                    botao@valor 000F                    main@tabela 0100  
                  _word_ascii 0E5C         ??_EscreveCaractereLCD 0011                   ?_byte_ascii 0016  
              __end_of___lmul 1500                __end_of___wmul 15BA                 __pidataCOMRAM 1622  
             ?_EnderecoCursor 0001           start_initialization 116C      EscreveFraseRamLCD@buffer 0012  
                    ??___lmul 0017                      ??___wmul 0013         __size_of_Interrupcoes 127C  
                 __pdataBANK0 0081                   __pdataBANK1 0194                   __pbssCOMRAM 0023  
               __pcstackBANK0 0060                 __pcstackBANK1 0100           __end_of__stringdata 0878  
           __size_of_delay_ms 0022           __size_of_byte_ascii 00B8                  _Interrupcoes 0008  
            ___lwdiv@dividend 000F                   ?_word_ascii 0016                     __pintcode 0008  
                    ?___lldiv 001B                      ?___lwdiv 000F                      ?___lwmod 000F  
      EscreveInteiroLCD@F5476 01E4                   __smallconst 0800                     _dwellTime 002F  
              __size_of_Delay 0022              _PosicaoCursorLCD 13EA              ___lwdiv@quotient 0014  
              __size_of_botao 01DC                   word_ascii@A 0016                   word_ascii@i 006A  
                 word_ascii@j 006B        EnderecoCursor@endereco 0011                ___wmul@product 0013  
                   _taxaBotao 0045                     _tickCount 0023             delay_ms@delaytime 000F  
     EscreveCaractereLCD@data 0011                      _RCONbits 000FD0                     main@F5461 084B  
                   main@F5463 085C                     main@F5457 0829                     main@F5466 0194  
                   main@F5459 083A   __size_of_EscreveFraseRamLCD 0024                     botao@lmax 0016  
                   botao@lmin 0014                     botao@taxa 0018                   __stringdata 086D  
           ___wmul@multiplier 000F           __size_of_word_ascii 011E             ___lmul@multiplier 000F  
                 _INTCON2bits 000FF1                     copy_data0 11A4                     copy_data1 11E2  
                    __Hrparam 0000                      __Lrparam 0000                  ??_byte_ascii 001B  
            ??_EnderecoCursor 0011              word_ascii@coluna 0019              __size_of___lldiv 009C  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                      _delay100 01EB  
                    _delay_ms 15DE               ___lwdiv@divisor 0011               ___lwdiv@counter 0013  
                    __ptext10 14AA                      __ptext11 10D0                      __ptext12 15BA  
                    __ptext13 130E                      __ptext14 1032                      __ptext15 1284  
                    __ptext16 1600            __end_of_byte_ascii 1032                 __size_of_main 0406  
 __end_of_EscreveCaractereLCD 1380                      _tickTime 0027                      _taxa_bt1 0039  
                    _taxa_bt2 003D                    _INTCONbits 000FF2                      intlevel2 0000  
            ___lwmod@dividend 000F              ___lldiv@dividend 001B                 ?_ConfiguraLCD 0001  
    __end_of_PosicaoCursorLCD 144E                  ??_word_ascii 001B        PosicaoCursorLCD@coluna 0012  
            ___lldiv@quotient 0060               ___lwmod@divisor 0011               ___lwmod@counter 0013  
       PosicaoCursorLCD@linha 0013            __end_of_word_ascii 0F7A                ??_ConfiguraLCD 0012  
